ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"queue.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	xQueueRegistry,80,4
  21              		.section	.text.xQueueGenericReset,"ax",%progbits
  22              		.align	2
  23              		.global	xQueueGenericReset
  24              		.thumb
  25              		.thumb_func
  26              		.type	xQueueGenericReset, %function
  27              	xQueueGenericReset:
  28              	.LFB129:
  29              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0\\Source\\queue.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 2


  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** */
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #include <stdlib.h>
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #include <string.h>
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** task.h is included from an application file. */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #include "FreeRTOS.h"
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #include "task.h"
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #include "queue.h"
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#include "croutine.h"
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 3


  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** header files above, but not in this file, in order to generate the correct
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** against the coding standard (although an exception to the standard has been
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** permitted where the dual use also significantly changes the type of the
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** structure member). */
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define pxMutexHolder					pcTail
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define uxQueueType						pcHead
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** zero. */
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	performed just because a higher priority task has been woken. */
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #else
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Definition of the queue used by the scheduler.
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** typedef struct QueueDefinition
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	} u;
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 4


 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		UBaseType_t uxQueueNumber;
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		uint8_t ucQueueType;
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** } xQUEUE;
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** typedef xQUEUE Queue_t;
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	more user friendly. */
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		QueueHandle_t xHandle;
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	} xQueueRegistryItem;
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	debuggers. */
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	array position being vacant. */
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 5


 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  *
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  *
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * back of the queue.
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Copies an item out of a queue.
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/*
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	 * the queue set that the queue contains data.
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	 */
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * dynamically to fill in the structure's members.
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * as a mutex.
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 6


 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  * accessing the queue event lists.
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c ****  */
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #define prvLockQueue( pxQueue )								\
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();									\
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{														\
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{													\
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}													\
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{													\
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}													\
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}														\
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL()
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
  30              		.loc 1 280 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              		.cfi_def_cfa_register 7
  42 0006 7860     		str	r0, [r7, #4]
  43 0008 3960     		str	r1, [r7]
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
  44              		.loc 1 281 0
  45 000a 7B68     		ldr	r3, [r7, #4]
  46 000c FB60     		str	r3, [r7, #12]
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
  47              		.loc 1 283 0
  48 000e FB68     		ldr	r3, [r7, #12]
  49 0010 002B     		cmp	r3, #0
  50 0012 01D1     		bne	.L2
  51              		.loc 1 283 0 is_stmt 0 discriminator 1
  52              		.syntax unified
  53              	@ 283 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
  54 0014 72B6     		 cpsid i 
  55              	@ 0 "" 2
  56              		.thumb
  57              		.syntax unified
  58              	.L3:
  59 0016 FEE7     		b	.L3
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 7


  60              	.L2:
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();
  61              		.loc 1 285 0 is_stmt 1
  62 0018 FFF7FEFF 		bl	vPortEnterCritical
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
  63              		.loc 1 287 0
  64 001c FB68     		ldr	r3, [r7, #12]
  65 001e 1A68     		ldr	r2, [r3]
  66 0020 FB68     		ldr	r3, [r7, #12]
  67 0022 DB6B     		ldr	r3, [r3, #60]
  68 0024 F968     		ldr	r1, [r7, #12]
  69 0026 096C     		ldr	r1, [r1, #64]
  70 0028 01FB03F3 		mul	r3, r1, r3
  71 002c 1A44     		add	r2, r2, r3
  72 002e FB68     		ldr	r3, [r7, #12]
  73 0030 5A60     		str	r2, [r3, #4]
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
  74              		.loc 1 288 0
  75 0032 FB68     		ldr	r3, [r7, #12]
  76 0034 0022     		movs	r2, #0
  77 0036 9A63     		str	r2, [r3, #56]
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
  78              		.loc 1 289 0
  79 0038 FB68     		ldr	r3, [r7, #12]
  80 003a 1A68     		ldr	r2, [r3]
  81 003c FB68     		ldr	r3, [r7, #12]
  82 003e 9A60     		str	r2, [r3, #8]
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
  83              		.loc 1 290 0
  84 0040 FB68     		ldr	r3, [r7, #12]
  85 0042 1A68     		ldr	r2, [r3]
  86 0044 FB68     		ldr	r3, [r7, #12]
  87 0046 DB6B     		ldr	r3, [r3, #60]
  88 0048 013B     		subs	r3, r3, #1
  89 004a F968     		ldr	r1, [r7, #12]
  90 004c 096C     		ldr	r1, [r1, #64]
  91 004e 01FB03F3 		mul	r3, r1, r3
  92 0052 1A44     		add	r2, r2, r3
  93 0054 FB68     		ldr	r3, [r7, #12]
  94 0056 DA60     		str	r2, [r3, #12]
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
  95              		.loc 1 291 0
  96 0058 FB68     		ldr	r3, [r7, #12]
  97 005a FF22     		movs	r2, #255
  98 005c 83F84420 		strb	r2, [r3, #68]
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
  99              		.loc 1 292 0
 100 0060 FB68     		ldr	r3, [r7, #12]
 101 0062 FF22     		movs	r2, #255
 102 0064 83F84520 		strb	r2, [r3, #69]
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( xNewQueue == pdFALSE )
 103              		.loc 1 294 0
 104 0068 3B68     		ldr	r3, [r7]
 105 006a 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 8


 106 006c 14D1     		bne	.L4
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			it will be possible to write to it. */
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 107              		.loc 1 301 0
 108 006e FB68     		ldr	r3, [r7, #12]
 109 0070 1B69     		ldr	r3, [r3, #16]
 110 0072 002B     		cmp	r3, #0
 111 0074 1AD0     		beq	.L5
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 112              		.loc 1 303 0
 113 0076 FB68     		ldr	r3, [r7, #12]
 114 0078 1033     		adds	r3, r3, #16
 115 007a 1846     		mov	r0, r3
 116 007c FFF7FEFF 		bl	xTaskRemoveFromEventList
 117 0080 0346     		mov	r3, r0
 118 0082 002B     		cmp	r3, #0
 119 0084 12D0     		beq	.L5
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 120              		.loc 1 305 0
 121 0086 0D4B     		ldr	r3, .L7
 122 0088 4FF08052 		mov	r2, #268435456
 123 008c 1A60     		str	r2, [r3]
 124              		.syntax unified
 125              	@ 305 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 126 008e BFF34F8F 		dsb
 127              	@ 0 "" 2
 128              	@ 305 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 129 0092 BFF36F8F 		isb
 130              	@ 0 "" 2
 131              		.thumb
 132              		.syntax unified
 133 0096 09E0     		b	.L5
 134              	.L4:
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 135              		.loc 1 320 0
 136 0098 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 9


 137 009a 1033     		adds	r3, r3, #16
 138 009c 1846     		mov	r0, r3
 139 009e FFF7FEFF 		bl	vListInitialise
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 140              		.loc 1 321 0
 141 00a2 FB68     		ldr	r3, [r7, #12]
 142 00a4 2433     		adds	r3, r3, #36
 143 00a6 1846     		mov	r0, r3
 144 00a8 FFF7FEFF 		bl	vListInitialise
 145              	.L5:
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL();
 146              		.loc 1 324 0
 147 00ac FFF7FEFF 		bl	vPortExitCritical
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	versions. */
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return pdPASS;
 148              		.loc 1 328 0
 149 00b0 0123     		movs	r3, #1
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 150              		.loc 1 329 0
 151 00b2 1846     		mov	r0, r3
 152 00b4 1037     		adds	r7, r7, #16
 153              		.cfi_def_cfa_offset 8
 154 00b6 BD46     		mov	sp, r7
 155              		.cfi_def_cfa_register 13
 156              		@ sp needed
 157 00b8 80BD     		pop	{r7, pc}
 158              	.L8:
 159 00ba 00BF     		.align	2
 160              	.L7:
 161 00bc 04ED00E0 		.word	-536810236
 162              		.cfi_endproc
 163              	.LFE129:
 164              		.size	xQueueGenericReset, .-xQueueGenericReset
 165              		.section	.text.xQueueGenericCreate,"ax",%progbits
 166              		.align	2
 167              		.global	xQueueGenericCreate
 168              		.thumb
 169              		.thumb_func
 170              		.type	xQueueGenericCreate, %function
 171              	xQueueGenericCreate:
 172              	.LFB130:
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t *pxNewQueue;
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		supplied. */
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 10


 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		should not be provided if the item size is 0. */
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			the real queue and semaphore structures. */
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		but is already set. */
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxNewQueue != NULL )
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				note this queue was allocated statically in case the queue is
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				later deleted. */
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return pxNewQueue;
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 173              		.loc 1 387 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 32
 176              		@ frame_needed = 1, uses_anonymous_args = 0
 177 0000 80B5     		push	{r7, lr}
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 7, -8
 180              		.cfi_offset 14, -4
 181 0002 8AB0     		sub	sp, sp, #40
 182              		.cfi_def_cfa_offset 48
 183 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 11


 184              		.cfi_def_cfa 7, 40
 185 0006 F860     		str	r0, [r7, #12]
 186 0008 B960     		str	r1, [r7, #8]
 187 000a 1346     		mov	r3, r2
 188 000c FB71     		strb	r3, [r7, #7]
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t *pxNewQueue;
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	size_t xQueueSizeInBytes;
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uint8_t *pucQueueStorage;
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 189              		.loc 1 392 0
 190 000e FB68     		ldr	r3, [r7, #12]
 191 0010 002B     		cmp	r3, #0
 192 0012 01D1     		bne	.L10
 193              		.loc 1 392 0 is_stmt 0 discriminator 1
 194              		.syntax unified
 195              	@ 392 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 196 0014 72B6     		 cpsid i 
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200              	.L11:
 201 0016 FEE7     		b	.L11
 202              	.L10:
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 203              		.loc 1 394 0 is_stmt 1
 204 0018 BB68     		ldr	r3, [r7, #8]
 205 001a 002B     		cmp	r3, #0
 206 001c 02D1     		bne	.L12
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* There is not going to be a queue storage area. */
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 207              		.loc 1 397 0
 208 001e 0023     		movs	r3, #0
 209 0020 FB61     		str	r3, [r7, #28]
 210 0022 04E0     		b	.L13
 211              	.L12:
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			can be in the queue at any time. */
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 212              		.loc 1 403 0
 213 0024 FB68     		ldr	r3, [r7, #12]
 214 0026 BA68     		ldr	r2, [r7, #8]
 215 0028 02FB03F3 		mul	r3, r2, r3
 216 002c FB61     		str	r3, [r7, #28]
 217              	.L13:
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 218              		.loc 1 406 0
 219 002e FB69     		ldr	r3, [r7, #28]
 220 0030 4833     		adds	r3, r3, #72
 221 0032 1846     		mov	r0, r3
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 12


 222 0034 FFF7FEFF 		bl	pvPortMalloc
 223 0038 B861     		str	r0, [r7, #24]
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxNewQueue != NULL )
 224              		.loc 1 408 0
 225 003a BB69     		ldr	r3, [r7, #24]
 226 003c 002B     		cmp	r3, #0
 227 003e 0BD0     		beq	.L14
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			storage area. */
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 228              		.loc 1 412 0
 229 0040 BB69     		ldr	r3, [r7, #24]
 230 0042 4833     		adds	r3, r3, #72
 231 0044 7B61     		str	r3, [r7, #20]
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				note this task was created dynamically in case it is later
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				deleted. */
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 232              		.loc 1 423 0
 233 0046 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 234 0048 BB69     		ldr	r3, [r7, #24]
 235 004a 0093     		str	r3, [sp]
 236 004c 1346     		mov	r3, r2
 237 004e 7A69     		ldr	r2, [r7, #20]
 238 0050 B968     		ldr	r1, [r7, #8]
 239 0052 F868     		ldr	r0, [r7, #12]
 240 0054 FFF7FEFF 		bl	prvInitialiseNewQueue
 241              	.L14:
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return pxNewQueue;
 242              		.loc 1 426 0
 243 0058 BB69     		ldr	r3, [r7, #24]
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 244              		.loc 1 427 0
 245 005a 1846     		mov	r0, r3
 246 005c 2037     		adds	r7, r7, #32
 247              		.cfi_def_cfa_offset 8
 248 005e BD46     		mov	sp, r7
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 0060 80BD     		pop	{r7, pc}
 252              		.cfi_endproc
 253              	.LFE130:
 254              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 255 0062 00BF     		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 256              		.align	2
 257              		.thumb
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 13


 258              		.thumb_func
 259              		.type	prvInitialiseNewQueue, %function
 260              	prvInitialiseNewQueue:
 261              	.LFB131:
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 262              		.loc 1 433 0
 263              		.cfi_startproc
 264              		@ args = 4, pretend = 0, frame = 16
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266 0000 80B5     		push	{r7, lr}
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 7, -8
 269              		.cfi_offset 14, -4
 270 0002 84B0     		sub	sp, sp, #16
 271              		.cfi_def_cfa_offset 24
 272 0004 00AF     		add	r7, sp, #0
 273              		.cfi_def_cfa_register 7
 274 0006 F860     		str	r0, [r7, #12]
 275 0008 B960     		str	r1, [r7, #8]
 276 000a 7A60     		str	r2, [r7, #4]
 277 000c FB70     		strb	r3, [r7, #3]
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	( void ) ucQueueType;
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 278              		.loc 1 438 0
 279 000e BB68     		ldr	r3, [r7, #8]
 280 0010 002B     		cmp	r3, #0
 281 0012 03D1     		bne	.L17
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		value that is known to be within the memory map. */
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 282              		.loc 1 444 0
 283 0014 BB69     		ldr	r3, [r7, #24]
 284 0016 BA69     		ldr	r2, [r7, #24]
 285 0018 1A60     		str	r2, [r3]
 286 001a 02E0     		b	.L18
 287              	.L17:
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	else
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 288              		.loc 1 449 0
 289 001c BB69     		ldr	r3, [r7, #24]
 290 001e 7A68     		ldr	r2, [r7, #4]
 291 0020 1A60     		str	r2, [r3]
 292              	.L18:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 14


 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	defined. */
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 293              		.loc 1 454 0
 294 0022 BB69     		ldr	r3, [r7, #24]
 295 0024 FA68     		ldr	r2, [r7, #12]
 296 0026 DA63     		str	r2, [r3, #60]
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 297              		.loc 1 455 0
 298 0028 BB69     		ldr	r3, [r7, #24]
 299 002a BA68     		ldr	r2, [r7, #8]
 300 002c 1A64     		str	r2, [r3, #64]
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 301              		.loc 1 456 0
 302 002e 0121     		movs	r1, #1
 303 0030 B869     		ldr	r0, [r7, #24]
 304 0032 FFF7FEFF 		bl	xQueueGenericReset
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 305              		.loc 1 471 0
 306 0036 00BF     		nop
 307 0038 1037     		adds	r7, r7, #16
 308              		.cfi_def_cfa_offset 8
 309 003a BD46     		mov	sp, r7
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 003c 80BD     		pop	{r7, pc}
 313              		.cfi_endproc
 314              	.LFE131:
 315              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 316 003e 00BF     		.section	.text.xQueueGenericSend,"ax",%progbits
 317              		.align	2
 318              		.global	xQueueGenericSend
 319              		.thumb
 320              		.thumb_func
 321              		.type	xQueueGenericSend, %function
 322              	xQueueGenericSend:
 323              	.LFB132:
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 15


 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxNewQueue != NULL )
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* The queue create function will set all the queue structure members
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			in particular the information required for priority inheritance. */
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* In case this is a recursive mutex. */
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_MUTEXES */
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t *pxNewQueue;
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return pxNewQueue;
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_MUTEXES */
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t *pxNewQueue;
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		( void ) ucQueueType;
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 16


 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return pxNewQueue;
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_MUTEXES */
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	void *pxReturn;
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		following critical section exiting and the function returning. */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		taskENTER_CRITICAL();
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxReturn = NULL;
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		taskEXIT_CRITICAL();
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return pxReturn;
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xReturn;
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( pxMutex );
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 17


 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			uxRecursiveCallCount member. */
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				task that might be waiting to access the mutex. */
 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdPASS;
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			holder. */
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdFAIL;
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xReturn;
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xReturn;
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( pxMutex );
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdPASS;
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 18


 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			before reaching here. */
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( xReturn != pdFAIL )
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xReturn;
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xHandle;
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( xHandle != NULL )
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xHandle;
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	QueueHandle_t xHandle;
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 19


 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( xHandle != NULL )
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xHandle;
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 324              		.loc 1 724 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 40
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 8AB0     		sub	sp, sp, #40
 333              		.cfi_def_cfa_offset 48
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 336 0006 F860     		str	r0, [r7, #12]
 337 0008 B960     		str	r1, [r7, #8]
 338 000a 7A60     		str	r2, [r7, #4]
 339 000c 3B60     		str	r3, [r7]
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 340              		.loc 1 725 0
 341 000e 0023     		movs	r3, #0
 342 0010 7B62     		str	r3, [r7, #36]
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** TimeOut_t xTimeOut;
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 343              		.loc 1 727 0
 344 0012 FB68     		ldr	r3, [r7, #12]
 345 0014 3B62     		str	r3, [r7, #32]
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 346              		.loc 1 729 0
 347 0016 3B6A     		ldr	r3, [r7, #32]
 348 0018 002B     		cmp	r3, #0
 349 001a 01D1     		bne	.L20
 350              		.loc 1 729 0 is_stmt 0 discriminator 1
 351              		.syntax unified
 352              	@ 729 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 353 001c 72B6     		 cpsid i 
 354              	@ 0 "" 2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 20


 355              		.thumb
 356              		.syntax unified
 357              	.L21:
 358 001e FEE7     		b	.L21
 359              	.L20:
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 360              		.loc 1 730 0 is_stmt 1
 361 0020 BB68     		ldr	r3, [r7, #8]
 362 0022 002B     		cmp	r3, #0
 363 0024 03D1     		bne	.L22
 364              		.loc 1 730 0 is_stmt 0 discriminator 2
 365 0026 3B6A     		ldr	r3, [r7, #32]
 366 0028 1B6C     		ldr	r3, [r3, #64]
 367 002a 002B     		cmp	r3, #0
 368 002c 01D1     		bne	.L23
 369              	.L22:
 370              		.loc 1 730 0 discriminator 3
 371 002e 0123     		movs	r3, #1
 372 0030 00E0     		b	.L24
 373              	.L23:
 374              		.loc 1 730 0 discriminator 4
 375 0032 0023     		movs	r3, #0
 376              	.L24:
 377              		.loc 1 730 0 discriminator 6
 378 0034 002B     		cmp	r3, #0
 379 0036 01D1     		bne	.L25
 380              		.loc 1 730 0 discriminator 7
 381              		.syntax unified
 382              	@ 730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 383 0038 72B6     		 cpsid i 
 384              	@ 0 "" 2
 385              		.thumb
 386              		.syntax unified
 387              	.L26:
 388              		.loc 1 730 0 discriminator 2
 389 003a FEE7     		b	.L26
 390              	.L25:
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 391              		.loc 1 731 0 is_stmt 1
 392 003c 3B68     		ldr	r3, [r7]
 393 003e 022B     		cmp	r3, #2
 394 0040 03D1     		bne	.L27
 395              		.loc 1 731 0 is_stmt 0 discriminator 2
 396 0042 3B6A     		ldr	r3, [r7, #32]
 397 0044 DB6B     		ldr	r3, [r3, #60]
 398 0046 012B     		cmp	r3, #1
 399 0048 01D1     		bne	.L28
 400              	.L27:
 401              		.loc 1 731 0 discriminator 3
 402 004a 0123     		movs	r3, #1
 403 004c 00E0     		b	.L29
 404              	.L28:
 405              		.loc 1 731 0 discriminator 4
 406 004e 0023     		movs	r3, #0
 407              	.L29:
 408              		.loc 1 731 0 discriminator 6
 409 0050 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 21


 410 0052 01D1     		bne	.L30
 411              		.loc 1 731 0 discriminator 7
 412              		.syntax unified
 413              	@ 731 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 414 0054 72B6     		 cpsid i 
 415              	@ 0 "" 2
 416              		.thumb
 417              		.syntax unified
 418              	.L31:
 419              		.loc 1 731 0 discriminator 3
 420 0056 FEE7     		b	.L31
 421              	.L30:
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 422              		.loc 1 734 0 is_stmt 1
 423 0058 FFF7FEFF 		bl	xTaskGetSchedulerState
 424 005c 0346     		mov	r3, r0
 425 005e 002B     		cmp	r3, #0
 426 0060 02D1     		bne	.L32
 427              		.loc 1 734 0 is_stmt 0 discriminator 2
 428 0062 7B68     		ldr	r3, [r7, #4]
 429 0064 002B     		cmp	r3, #0
 430 0066 01D1     		bne	.L33
 431              	.L32:
 432              		.loc 1 734 0 discriminator 3
 433 0068 0123     		movs	r3, #1
 434 006a 00E0     		b	.L34
 435              	.L33:
 436              		.loc 1 734 0 discriminator 4
 437 006c 0023     		movs	r3, #0
 438              	.L34:
 439              		.loc 1 734 0 discriminator 6
 440 006e 002B     		cmp	r3, #0
 441 0070 01D1     		bne	.L35
 442              		.loc 1 734 0 discriminator 7
 443              		.syntax unified
 444              	@ 734 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 445 0072 72B6     		 cpsid i 
 446              	@ 0 "" 2
 447              		.thumb
 448              		.syntax unified
 449              	.L36:
 450              		.loc 1 734 0 discriminator 4
 451 0074 FEE7     		b	.L36
 452              	.L35:
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	statements within the function itself.  This is done in the interest
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	of execution time efficiency. */
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	for( ;; )
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		taskENTER_CRITICAL();
 453              		.loc 1 744 0 is_stmt 1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 22


 454 0076 FFF7FEFF 		bl	vPortEnterCritical
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			queue is full. */
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 455              		.loc 1 750 0
 456 007a 3B6A     		ldr	r3, [r7, #32]
 457 007c 9A6B     		ldr	r2, [r3, #56]
 458 007e 3B6A     		ldr	r3, [r7, #32]
 459 0080 DB6B     		ldr	r3, [r3, #60]
 460 0082 9A42     		cmp	r2, r3
 461 0084 02D3     		bcc	.L37
 462              		.loc 1 750 0 is_stmt 0 discriminator 1
 463 0086 3B68     		ldr	r3, [r7]
 464 0088 022B     		cmp	r3, #2
 465 008a 29D1     		bne	.L38
 466              	.L37:
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 467              		.loc 1 753 0 is_stmt 1
 468 008c 3A68     		ldr	r2, [r7]
 469 008e B968     		ldr	r1, [r7, #8]
 470 0090 386A     		ldr	r0, [r7, #32]
 471 0092 FFF7FEFF 		bl	prvCopyDataToQueue
 472 0096 F861     		str	r0, [r7, #28]
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							to the queue set caused a higher priority task to
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							unblock. A context switch is required. */
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						queue then unblock it now. */
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								/* The unblocked task has a priority higher than
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								do this from within the critical section - the
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								kernel takes care of that. */
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 23


 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							else
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* This path is a special case that will only get
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							executed if the task was holding multiple mutexes
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							and the mutexes were given back in an order that is
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							different to that in which they were taken. */
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					queue then unblock it now. */
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 473              		.loc 1 808 0
 474 0098 3B6A     		ldr	r3, [r7, #32]
 475 009a 5B6A     		ldr	r3, [r3, #36]
 476 009c 002B     		cmp	r3, #0
 477 009e 10D0     		beq	.L39
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 478              		.loc 1 810 0
 479 00a0 3B6A     		ldr	r3, [r7, #32]
 480 00a2 2433     		adds	r3, r3, #36
 481 00a4 1846     		mov	r0, r3
 482 00a6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 483 00aa 0346     		mov	r3, r0
 484 00ac 002B     		cmp	r3, #0
 485 00ae 13D0     		beq	.L40
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The unblocked task has a priority higher than
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							this from within the critical section - the kernel
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							takes care of that. */
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 486              		.loc 1 816 0
 487 00b0 3F4B     		ldr	r3, .L52
 488 00b2 4FF08052 		mov	r2, #268435456
 489 00b6 1A60     		str	r2, [r3]
 490              		.syntax unified
 491              	@ 816 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 492 00b8 BFF34F8F 		dsb
 493              	@ 0 "" 2
 494              	@ 816 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 495 00bc BFF36F8F 		isb
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 24


 496              	@ 0 "" 2
 497              		.thumb
 498              		.syntax unified
 499 00c0 0AE0     		b	.L40
 500              	.L39:
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 501              		.loc 1 823 0
 502 00c2 FB69     		ldr	r3, [r7, #28]
 503 00c4 002B     		cmp	r3, #0
 504 00c6 07D0     		beq	.L40
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						/* This path is a special case that will only get
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						executed if the task was holding multiple mutexes and
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						the mutexes were given back in an order that is
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						different to that in which they were taken. */
 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 505              		.loc 1 829 0
 506 00c8 394B     		ldr	r3, .L52
 507 00ca 4FF08052 		mov	r2, #268435456
 508 00ce 1A60     		str	r2, [r3]
 509              		.syntax unified
 510              	@ 829 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 511 00d0 BFF34F8F 		dsb
 512              	@ 0 "" 2
 513              	@ 829 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 514 00d4 BFF36F8F 		isb
 515              	@ 0 "" 2
 516              		.thumb
 517              		.syntax unified
 518              	.L40:
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				taskEXIT_CRITICAL();
 519              		.loc 1 838 0
 520 00d8 FFF7FEFF 		bl	vPortExitCritical
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				return pdPASS;
 521              		.loc 1 839 0
 522 00dc 0123     		movs	r3, #1
 523 00de 63E0     		b	.L51
 524              	.L38:
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 525              		.loc 1 843 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 25


 526 00e0 7B68     		ldr	r3, [r7, #4]
 527 00e2 002B     		cmp	r3, #0
 528 00e4 03D1     		bne	.L42
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* The queue was full and no block time is specified (or
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					the block time has expired) so leave now. */
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					taskEXIT_CRITICAL();
 529              		.loc 1 847 0
 530 00e6 FFF7FEFF 		bl	vPortExitCritical
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* Return to the original privilege level before exiting
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					the function. */
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					return errQUEUE_FULL;
 531              		.loc 1 852 0
 532 00ea 0023     		movs	r3, #0
 533 00ec 5CE0     		b	.L51
 534              	.L42:
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 535              		.loc 1 854 0
 536 00ee 7B6A     		ldr	r3, [r7, #36]
 537 00f0 002B     		cmp	r3, #0
 538 00f2 06D1     		bne	.L43
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* The queue was full and a block time was specified so
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					configure the timeout structure. */
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 539              		.loc 1 858 0
 540 00f4 07F11403 		add	r3, r7, #20
 541 00f8 1846     		mov	r0, r3
 542 00fa FFF7FEFF 		bl	vTaskSetTimeOutState
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 543              		.loc 1 859 0
 544 00fe 0123     		movs	r3, #1
 545 0100 7B62     		str	r3, [r7, #36]
 546              	.L43:
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* Entry time was already set. */
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		taskEXIT_CRITICAL();
 547              		.loc 1 868 0
 548 0102 FFF7FEFF 		bl	vPortExitCritical
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		now the critical section has been exited. */
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		vTaskSuspendAll();
 549              		.loc 1 873 0
 550 0106 FFF7FEFF 		bl	vTaskSuspendAll
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		prvLockQueue( pxQueue );
 551              		.loc 1 874 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 26


 552 010a FFF7FEFF 		bl	vPortEnterCritical
 553 010e 3B6A     		ldr	r3, [r7, #32]
 554 0110 93F84430 		ldrb	r3, [r3, #68]
 555 0114 5BB2     		sxtb	r3, r3
 556 0116 B3F1FF3F 		cmp	r3, #-1
 557 011a 03D1     		bne	.L44
 558              		.loc 1 874 0 is_stmt 0 discriminator 1
 559 011c 3B6A     		ldr	r3, [r7, #32]
 560 011e 0022     		movs	r2, #0
 561 0120 83F84420 		strb	r2, [r3, #68]
 562              	.L44:
 563              		.loc 1 874 0 discriminator 3
 564 0124 3B6A     		ldr	r3, [r7, #32]
 565 0126 93F84530 		ldrb	r3, [r3, #69]
 566 012a 5BB2     		sxtb	r3, r3
 567 012c B3F1FF3F 		cmp	r3, #-1
 568 0130 03D1     		bne	.L45
 569              		.loc 1 874 0 discriminator 4
 570 0132 3B6A     		ldr	r3, [r7, #32]
 571 0134 0022     		movs	r2, #0
 572 0136 83F84520 		strb	r2, [r3, #69]
 573              	.L45:
 574              		.loc 1 874 0 discriminator 6
 575 013a FFF7FEFF 		bl	vPortExitCritical
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 576              		.loc 1 877 0 is_stmt 1 discriminator 6
 577 013e 3A1D     		adds	r2, r7, #4
 578 0140 07F11403 		add	r3, r7, #20
 579 0144 1146     		mov	r1, r2
 580 0146 1846     		mov	r0, r3
 581 0148 FFF7FEFF 		bl	xTaskCheckForTimeOut
 582 014c 0346     		mov	r3, r0
 583 014e 002B     		cmp	r3, #0
 584 0150 24D1     		bne	.L46
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 585              		.loc 1 879 0
 586 0152 386A     		ldr	r0, [r7, #32]
 587 0154 FFF7FEFF 		bl	prvIsQueueFull
 588 0158 0346     		mov	r3, r0
 589 015a 002B     		cmp	r3, #0
 590 015c 18D0     		beq	.L47
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 591              		.loc 1 882 0
 592 015e 3B6A     		ldr	r3, [r7, #32]
 593 0160 1033     		adds	r3, r3, #16
 594 0162 7A68     		ldr	r2, [r7, #4]
 595 0164 1146     		mov	r1, r2
 596 0166 1846     		mov	r0, r3
 597 0168 FFF7FEFF 		bl	vTaskPlaceOnEventList
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				event list.  It is possible	that interrupts occurring now
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 27


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				remove this task from the event	list again - but as the
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				ready last instead of the actual ready list. */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 598              		.loc 1 889 0
 599 016c 386A     		ldr	r0, [r7, #32]
 600 016e FFF7FEFF 		bl	prvUnlockQueue
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				task is already in a ready list before it yields - in which
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				case the yield will not cause a context switch unless there
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 601              		.loc 1 896 0
 602 0172 FFF7FEFF 		bl	xTaskResumeAll
 603 0176 0346     		mov	r3, r0
 604 0178 002B     		cmp	r3, #0
 605 017a 7FF47CAF 		bne	.L35
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					portYIELD_WITHIN_API();
 606              		.loc 1 898 0
 607 017e 0C4B     		ldr	r3, .L52
 608 0180 4FF08052 		mov	r2, #268435456
 609 0184 1A60     		str	r2, [r3]
 610              		.syntax unified
 611              	@ 898 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 612 0186 BFF34F8F 		dsb
 613              	@ 0 "" 2
 614              	@ 898 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 615 018a BFF36F8F 		isb
 616              	@ 0 "" 2
 617              		.thumb
 618              		.syntax unified
 619 018e 72E7     		b	.L35
 620              	.L47:
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Try again. */
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 621              		.loc 1 904 0
 622 0190 386A     		ldr	r0, [r7, #32]
 623 0192 FFF7FEFF 		bl	prvUnlockQueue
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				( void ) xTaskResumeAll();
 624              		.loc 1 905 0
 625 0196 FFF7FEFF 		bl	xTaskResumeAll
 626 019a 6CE7     		b	.L35
 627              	.L46:
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* The timeout has expired. */
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			prvUnlockQueue( pxQueue );
 628              		.loc 1 911 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 28


 629 019c 386A     		ldr	r0, [r7, #32]
 630 019e FFF7FEFF 		bl	prvUnlockQueue
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( void ) xTaskResumeAll();
 631              		.loc 1 912 0
 632 01a2 FFF7FEFF 		bl	xTaskResumeAll
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			return errQUEUE_FULL;
 633              		.loc 1 915 0
 634 01a6 0023     		movs	r3, #0
 635              	.L51:
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 636              		.loc 1 918 0 discriminator 7
 637 01a8 1846     		mov	r0, r3
 638 01aa 2837     		adds	r7, r7, #40
 639              		.cfi_def_cfa_offset 8
 640 01ac BD46     		mov	sp, r7
 641              		.cfi_def_cfa_register 13
 642              		@ sp needed
 643 01ae 80BD     		pop	{r7, pc}
 644              	.L53:
 645              		.align	2
 646              	.L52:
 647 01b0 04ED00E0 		.word	-536810236
 648              		.cfi_endproc
 649              	.LFE132:
 650              		.size	xQueueGenericSend, .-xQueueGenericSend
 651              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 652              		.align	2
 653              		.global	xQueueGenericSendFromISR
 654              		.thumb
 655              		.thumb_func
 656              		.type	xQueueGenericSendFromISR, %function
 657              	xQueueGenericSendFromISR:
 658              	.LFB133:
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 659              		.loc 1 922 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 48
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 80B5     		push	{r7, lr}
 664              		.cfi_def_cfa_offset 8
 665              		.cfi_offset 7, -8
 666              		.cfi_offset 14, -4
 667 0002 8CB0     		sub	sp, sp, #48
 668              		.cfi_def_cfa_offset 56
 669 0004 00AF     		add	r7, sp, #0
 670              		.cfi_def_cfa_register 7
 671 0006 F860     		str	r0, [r7, #12]
 672 0008 B960     		str	r1, [r7, #8]
 673 000a 7A60     		str	r2, [r7, #4]
 674 000c 3B60     		str	r3, [r7]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 29


 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 675              		.loc 1 925 0
 676 000e FB68     		ldr	r3, [r7, #12]
 677 0010 BB62     		str	r3, [r7, #40]
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 678              		.loc 1 927 0
 679 0012 BB6A     		ldr	r3, [r7, #40]
 680 0014 002B     		cmp	r3, #0
 681 0016 01D1     		bne	.L55
 682              		.loc 1 927 0 is_stmt 0 discriminator 1
 683              		.syntax unified
 684              	@ 927 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 685 0018 72B6     		 cpsid i 
 686              	@ 0 "" 2
 687              		.thumb
 688              		.syntax unified
 689              	.L56:
 690 001a FEE7     		b	.L56
 691              	.L55:
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 692              		.loc 1 928 0 is_stmt 1
 693 001c BB68     		ldr	r3, [r7, #8]
 694 001e 002B     		cmp	r3, #0
 695 0020 03D1     		bne	.L57
 696              		.loc 1 928 0 is_stmt 0 discriminator 2
 697 0022 BB6A     		ldr	r3, [r7, #40]
 698 0024 1B6C     		ldr	r3, [r3, #64]
 699 0026 002B     		cmp	r3, #0
 700 0028 01D1     		bne	.L58
 701              	.L57:
 702              		.loc 1 928 0 discriminator 3
 703 002a 0123     		movs	r3, #1
 704 002c 00E0     		b	.L59
 705              	.L58:
 706              		.loc 1 928 0 discriminator 4
 707 002e 0023     		movs	r3, #0
 708              	.L59:
 709              		.loc 1 928 0 discriminator 6
 710 0030 002B     		cmp	r3, #0
 711 0032 01D1     		bne	.L60
 712              		.loc 1 928 0 discriminator 7
 713              		.syntax unified
 714              	@ 928 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 715 0034 72B6     		 cpsid i 
 716              	@ 0 "" 2
 717              		.thumb
 718              		.syntax unified
 719              	.L61:
 720              		.loc 1 928 0 discriminator 2
 721 0036 FEE7     		b	.L61
 722              	.L60:
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 723              		.loc 1 929 0 is_stmt 1
 724 0038 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 30


 725 003a 022B     		cmp	r3, #2
 726 003c 03D1     		bne	.L62
 727              		.loc 1 929 0 is_stmt 0 discriminator 2
 728 003e BB6A     		ldr	r3, [r7, #40]
 729 0040 DB6B     		ldr	r3, [r3, #60]
 730 0042 012B     		cmp	r3, #1
 731 0044 01D1     		bne	.L63
 732              	.L62:
 733              		.loc 1 929 0 discriminator 3
 734 0046 0123     		movs	r3, #1
 735 0048 00E0     		b	.L64
 736              	.L63:
 737              		.loc 1 929 0 discriminator 4
 738 004a 0023     		movs	r3, #0
 739              	.L64:
 740              		.loc 1 929 0 discriminator 6
 741 004c 002B     		cmp	r3, #0
 742 004e 01D1     		bne	.L65
 743              		.loc 1 929 0 discriminator 7
 744              		.syntax unified
 745              	@ 929 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 746 0050 72B6     		 cpsid i 
 747              	@ 0 "" 2
 748              		.thumb
 749              		.syntax unified
 750              	.L66:
 751              		.loc 1 929 0 discriminator 3
 752 0052 FEE7     		b	.L66
 753              	.L65:
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 754              		.loc 1 945 0 is_stmt 1
 755 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 756              	.LBB23:
 757              	.LBB24:
 758              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 31


   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 32


  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** */
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  */
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR        char
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT       float
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE      double
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG        long
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT       short
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE  uint32_t
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE   long
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint16_t TickType_t;
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffff
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #else
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint32_t TickType_t;
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     not need to be guarded with a critical section. */
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC 1
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH              ( -1 )
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS            ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT            8
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 33


 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD()                                                            \
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {                                                                              \
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Set a PendSV to request a context switch. */                            \
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;                            \
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****                                                                                \
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Barriers are normally not required but do ensure the code is completely \
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     within the specified behaviour for the architecture. */                    \
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "dsb" );                                                   \
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "isb" );                                                   \
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }                                                                              \
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG         ( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT        ( 1UL << 28UL )
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )       portEND_SWITCHING_ISR( x )
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()       ulPortRaiseBASEPRI()
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)    vPortSetBASEPRI(x)
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                __asm volatile   ( " cpsid i " )
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                 __asm volatile   ( " cpsie i " )
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()                    vPortEnterCritical()
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()                     vPortExitCritical()
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site. */
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()     vPortValidateInterruptPriority()
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE    __inline
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portFORCE_INLINE inline __attribute__(( always_inline))
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 34


 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdFALSE;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     else
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdTRUE;
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 191:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return xReturn;
 192:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 193:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 195:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 197:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 198:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 199:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 200:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 201:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %0, %1                                                 \n" \
 202:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %0                                            \n" \
 203:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 204:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 205:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 206:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 207:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 208:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 209:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 211:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 213:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 759              		.loc 2 215 0
 760              		.syntax unified
 761              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 762 0058 EFF31182 		    mrs r2, basepri                                            
 763 005c 4FF0BF03 	    mov r3, #191                                                 
 764 0060 83F31188 	    msr basepri, r3                                            
 765 0064 BFF36F8F 	    isb                                                        
 766 0068 BFF34F8F 	    dsb                                                        
 767              	
 768              	@ 0 "" 2
 769              		.thumb
 770              		.syntax unified
 771 006c BA61     		str	r2, [r7, #24]
 772 006e 7B61     		str	r3, [r7, #20]
 216:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 217:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mrs %0, basepri                                            \n" \
 218:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %1, %2                                                 \n" \
 219:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %1                                            \n" \
 220:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 221:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 35


 222:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY
 223:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 224:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 225:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* This return will not be reached but is necessary to prevent compiler
 226:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     warnings. */
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return ulOriginalBASEPRI;
 773              		.loc 2 227 0
 774 0070 BB69     		ldr	r3, [r7, #24]
 775              	.LBE24:
 776              	.LBE23:
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	post). */
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 777              		.loc 1 952 0
 778 0072 3B62     		str	r3, [r7, #32]
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 779              		.loc 1 954 0
 780 0074 BB6A     		ldr	r3, [r7, #40]
 781 0076 9A6B     		ldr	r2, [r3, #56]
 782 0078 BB6A     		ldr	r3, [r7, #40]
 783 007a DB6B     		ldr	r3, [r3, #60]
 784 007c 9A42     		cmp	r2, r3
 785 007e 02D3     		bcc	.L68
 786              		.loc 1 954 0 is_stmt 0 discriminator 1
 787 0080 3B68     		ldr	r3, [r7]
 788 0082 022B     		cmp	r3, #2
 789 0084 2AD1     		bne	.L69
 790              	.L68:
 791              	.LBB25:
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 792              		.loc 1 956 0 is_stmt 1
 793 0086 BB6A     		ldr	r3, [r7, #40]
 794 0088 93F84530 		ldrb	r3, [r3, #69]
 795 008c FB77     		strb	r3, [r7, #31]
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			called here even though the disinherit function does not check if
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 796              		.loc 1 965 0
 797 008e 3A68     		ldr	r2, [r7]
 798 0090 B968     		ldr	r1, [r7, #8]
 799 0092 B86A     		ldr	r0, [r7, #40]
 800 0094 FFF7FEFF 		bl	prvCopyDataToQueue
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			be done when the queue is unlocked later. */
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 36


 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 801              		.loc 1 969 0
 802 0098 97F91F30 		ldrsb	r3, [r7, #31]
 803 009c B3F1FF3F 		cmp	r3, #-1
 804 00a0 12D1     		bne	.L70
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							to the queue set caused a higher priority task to
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							unblock.  A context switch is required. */
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							else
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								/* The task waiting has a higher priority so
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								record that a context switch is required. */
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								{
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								}
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								else
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								{
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								}
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							else
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 37


1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 805              		.loc 1 1024 0
 806 00a2 BB6A     		ldr	r3, [r7, #40]
 807 00a4 5B6A     		ldr	r3, [r3, #36]
 808 00a6 002B     		cmp	r3, #0
 809 00a8 15D0     		beq	.L71
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 810              		.loc 1 1026 0
 811 00aa BB6A     		ldr	r3, [r7, #40]
 812 00ac 2433     		adds	r3, r3, #36
 813 00ae 1846     		mov	r0, r3
 814 00b0 FFF7FEFF 		bl	xTaskRemoveFromEventList
 815 00b4 0346     		mov	r3, r0
 816 00b6 002B     		cmp	r3, #0
 817 00b8 0DD0     		beq	.L71
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							context	switch is required. */
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 818              		.loc 1 1030 0
 819 00ba 7B68     		ldr	r3, [r7, #4]
 820 00bc 002B     		cmp	r3, #0
 821 00be 0AD0     		beq	.L71
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 822              		.loc 1 1032 0
 823 00c0 7B68     		ldr	r3, [r7, #4]
 824 00c2 0122     		movs	r2, #1
 825 00c4 1A60     		str	r2, [r3]
 826 00c6 06E0     		b	.L71
 827              	.L70:
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							else
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				knows that data was posted while it was locked. */
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 38


 828              		.loc 1 1055 0
 829 00c8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 830 00ca 0133     		adds	r3, r3, #1
 831 00cc DBB2     		uxtb	r3, r3
 832 00ce 5AB2     		sxtb	r2, r3
 833 00d0 BB6A     		ldr	r3, [r7, #40]
 834 00d2 83F84520 		strb	r2, [r3, #69]
 835              	.L71:
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdPASS;
 836              		.loc 1 1058 0
 837 00d6 0123     		movs	r3, #1
 838 00d8 FB62     		str	r3, [r7, #44]
 839              	.LBE25:
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 840              		.loc 1 955 0
 841 00da 01E0     		b	.L72
 842              	.L69:
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = errQUEUE_FULL;
 843              		.loc 1 1063 0
 844 00dc 0023     		movs	r3, #0
 845 00de FB62     		str	r3, [r7, #44]
 846              	.L72:
 847 00e0 3B6A     		ldr	r3, [r7, #32]
 848 00e2 7B62     		str	r3, [r7, #36]
 849              	.LBB26:
 850              	.LBB27:
 228:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 229:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 231:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 233:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 851              		.loc 2 233 0
 852 00e4 7B6A     		ldr	r3, [r7, #36]
 853              		.syntax unified
 854              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 855 00e6 83F31188 		    msr basepri, r3  
 856              	@ 0 "" 2
 857              		.thumb
 858              		.syntax unified
 859              	.LBE27:
 860              	.LBE26:
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 861              		.loc 1 1068 0
 862 00ea FB6A     		ldr	r3, [r7, #44]
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 863              		.loc 1 1069 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 39


 864 00ec 1846     		mov	r0, r3
 865 00ee 3037     		adds	r7, r7, #48
 866              		.cfi_def_cfa_offset 8
 867 00f0 BD46     		mov	sp, r7
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 00f2 80BD     		pop	{r7, pc}
 871              		.cfi_endproc
 872              	.LFE133:
 873              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 874              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 875              		.align	2
 876              		.global	xQueueGiveFromISR
 877              		.thumb
 878              		.thumb_func
 879              		.type	xQueueGiveFromISR, %function
 880              	xQueueGiveFromISR:
 881              	.LFB134:
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 882              		.loc 1 1073 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 40
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 8AB0     		sub	sp, sp, #40
 891              		.cfi_def_cfa_offset 48
 892 0004 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 894 0006 7860     		str	r0, [r7, #4]
 895 0008 3960     		str	r1, [r7]
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 896              		.loc 1 1076 0
 897 000a 7B68     		ldr	r3, [r7, #4]
 898 000c 3B62     		str	r3, [r7, #32]
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	post). */
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 899              		.loc 1 1084 0
 900 000e 3B6A     		ldr	r3, [r7, #32]
 901 0010 002B     		cmp	r3, #0
 902 0012 01D1     		bne	.L75
 903              		.loc 1 1084 0 is_stmt 0 discriminator 1
 904              		.syntax unified
 905              	@ 1084 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 40


 906 0014 72B6     		 cpsid i 
 907              	@ 0 "" 2
 908              		.thumb
 909              		.syntax unified
 910              	.L76:
 911 0016 FEE7     		b	.L76
 912              	.L75:
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	if the item size is not 0. */
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
 913              		.loc 1 1088 0 is_stmt 1
 914 0018 3B6A     		ldr	r3, [r7, #32]
 915 001a 1B6C     		ldr	r3, [r3, #64]
 916 001c 002B     		cmp	r3, #0
 917 001e 01D0     		beq	.L77
 918              		.loc 1 1088 0 is_stmt 0 discriminator 1
 919              		.syntax unified
 920              	@ 1088 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 921 0020 72B6     		 cpsid i 
 922              	@ 0 "" 2
 923              		.thumb
 924              		.syntax unified
 925              	.L78:
 926              		.loc 1 1088 0 discriminator 2
 927 0022 FEE7     		b	.L78
 928              	.L77:
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	interrupts, only tasks. */
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
 929              		.loc 1 1093 0 is_stmt 1
 930 0024 3B6A     		ldr	r3, [r7, #32]
 931 0026 1B68     		ldr	r3, [r3]
 932 0028 002B     		cmp	r3, #0
 933 002a 03D1     		bne	.L79
 934              		.loc 1 1093 0 is_stmt 0 discriminator 2
 935 002c 3B6A     		ldr	r3, [r7, #32]
 936 002e 5B68     		ldr	r3, [r3, #4]
 937 0030 002B     		cmp	r3, #0
 938 0032 01D1     		bne	.L80
 939              	.L79:
 940              		.loc 1 1093 0 discriminator 3
 941 0034 0123     		movs	r3, #1
 942 0036 00E0     		b	.L81
 943              	.L80:
 944              		.loc 1 1093 0 discriminator 4
 945 0038 0023     		movs	r3, #0
 946              	.L81:
 947              		.loc 1 1093 0 discriminator 6
 948 003a 002B     		cmp	r3, #0
 949 003c 01D1     		bne	.L82
 950              		.loc 1 1093 0 discriminator 7
 951              		.syntax unified
 952              	@ 1093 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 953 003e 72B6     		 cpsid i 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 41


 954              	@ 0 "" 2
 955              		.thumb
 956              		.syntax unified
 957              	.L83:
 958              		.loc 1 1093 0 discriminator 3
 959 0040 FEE7     		b	.L83
 960              	.L82:
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 961              		.loc 1 1109 0 is_stmt 1
 962 0042 FFF7FEFF 		bl	vPortValidateInterruptPriority
 963              	.LBB28:
 964              	.LBB29:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 965              		.loc 2 215 0
 966              		.syntax unified
 967              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 968 0046 EFF31182 		    mrs r2, basepri                                            
 969 004a 4FF0BF03 	    mov r3, #191                                                 
 970 004e 83F31188 	    msr basepri, r3                                            
 971 0052 BFF36F8F 	    isb                                                        
 972 0056 BFF34F8F 	    dsb                                                        
 973              	
 974              	@ 0 "" 2
 975              		.thumb
 976              		.syntax unified
 977 005a FA60     		str	r2, [r7, #12]
 978 005c BB60     		str	r3, [r7, #8]
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 979              		.loc 2 227 0
 980 005e FB68     		ldr	r3, [r7, #12]
 981              	.LBE29:
 982              	.LBE28:
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 983              		.loc 1 1111 0
 984 0060 BB61     		str	r3, [r7, #24]
 985              	.LBB30:
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 986              		.loc 1 1113 0
 987 0062 3B6A     		ldr	r3, [r7, #32]
 988 0064 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 42


 989 0066 7B61     		str	r3, [r7, #20]
1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		space'. */
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
 990              		.loc 1 1118 0
 991 0068 3B6A     		ldr	r3, [r7, #32]
 992 006a DA6B     		ldr	r2, [r3, #60]
 993 006c 7B69     		ldr	r3, [r7, #20]
 994 006e 9A42     		cmp	r2, r3
 995 0070 29D9     		bls	.L85
 996              	.LBB31:
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 997              		.loc 1 1120 0
 998 0072 3B6A     		ldr	r3, [r7, #32]
 999 0074 93F84530 		ldrb	r3, [r3, #69]
 1000 0078 FB74     		strb	r3, [r7, #19]
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			messages (semaphores) available. */
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
 1001              		.loc 1 1130 0
 1002 007a 7B69     		ldr	r3, [r7, #20]
 1003 007c 5A1C     		adds	r2, r3, #1
 1004 007e 3B6A     		ldr	r3, [r7, #32]
 1005 0080 9A63     		str	r2, [r3, #56]
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			be done when the queue is unlocked later. */
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 1006              		.loc 1 1134 0
 1007 0082 97F91330 		ldrsb	r3, [r7, #19]
 1008 0086 B3F1FF3F 		cmp	r3, #-1
 1009 008a 12D1     		bne	.L86
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							posting	to the queue set caused a higher priority
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							task to	unblock.  A context switch is required. */
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							else
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 43


1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								/* The task waiting has a higher priority so
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								record that a context switch is required. */
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								{
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								}
1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								else
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								{
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								}
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							else
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1010              		.loc 1 1189 0
 1011 008c 3B6A     		ldr	r3, [r7, #32]
 1012 008e 5B6A     		ldr	r3, [r3, #36]
 1013 0090 002B     		cmp	r3, #0
 1014 0092 15D0     		beq	.L87
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1015              		.loc 1 1191 0
 1016 0094 3B6A     		ldr	r3, [r7, #32]
 1017 0096 2433     		adds	r3, r3, #36
 1018 0098 1846     		mov	r0, r3
 1019 009a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1020 009e 0346     		mov	r3, r0
 1021 00a0 002B     		cmp	r3, #0
 1022 00a2 0DD0     		beq	.L87
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The task waiting has a higher priority so record that a
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 44


1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							context	switch is required. */
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 1023              		.loc 1 1195 0
 1024 00a4 3B68     		ldr	r3, [r7]
 1025 00a6 002B     		cmp	r3, #0
 1026 00a8 0AD0     		beq	.L87
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 1027              		.loc 1 1197 0
 1028 00aa 3B68     		ldr	r3, [r7]
 1029 00ac 0122     		movs	r2, #1
 1030 00ae 1A60     		str	r2, [r3]
 1031 00b0 06E0     		b	.L87
 1032              	.L86:
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							else
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							{
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							}
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				knows that data was posted while it was locked. */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 1033              		.loc 1 1220 0
 1034 00b2 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1035 00b4 0133     		adds	r3, r3, #1
 1036 00b6 DBB2     		uxtb	r3, r3
 1037 00b8 5AB2     		sxtb	r2, r3
 1038 00ba 3B6A     		ldr	r3, [r7, #32]
 1039 00bc 83F84520 		strb	r2, [r3, #69]
 1040              	.L87:
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdPASS;
 1041              		.loc 1 1223 0
 1042 00c0 0123     		movs	r3, #1
 1043 00c2 7B62     		str	r3, [r7, #36]
 1044              	.LBE31:
 1045 00c4 01E0     		b	.L88
 1046              	.L85:
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 45


1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = errQUEUE_FULL;
 1047              		.loc 1 1228 0
 1048 00c6 0023     		movs	r3, #0
 1049 00c8 7B62     		str	r3, [r7, #36]
 1050              	.L88:
 1051 00ca BB69     		ldr	r3, [r7, #24]
 1052 00cc FB61     		str	r3, [r7, #28]
 1053              	.LBE30:
 1054              	.LBB32:
 1055              	.LBB33:
 1056              		.loc 2 233 0
 1057 00ce FB69     		ldr	r3, [r7, #28]
 1058              		.syntax unified
 1059              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1060 00d0 83F31188 		    msr basepri, r3  
 1061              	@ 0 "" 2
 1062              		.thumb
 1063              		.syntax unified
 1064              	.LBE33:
 1065              	.LBE32:
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 1066              		.loc 1 1233 0
 1067 00d4 7B6A     		ldr	r3, [r7, #36]
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 1068              		.loc 1 1234 0
 1069 00d6 1846     		mov	r0, r3
 1070 00d8 2837     		adds	r7, r7, #40
 1071              		.cfi_def_cfa_offset 8
 1072 00da BD46     		mov	sp, r7
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 00dc 80BD     		pop	{r7, pc}
 1076              		.cfi_endproc
 1077              	.LFE134:
 1078              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1079 00de 00BF     		.section	.text.xQueueGenericReceive,"ax",%progbits
 1080              		.align	2
 1081              		.global	xQueueGenericReceive
 1082              		.thumb
 1083              		.thumb_func
 1084              		.type	xQueueGenericReceive, %function
 1085              	xQueueGenericReceive:
 1086              	.LFB135:
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 1087              		.loc 1 1238 0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 40
 1090              		@ frame_needed = 1, uses_anonymous_args = 0
 1091 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 46


 1092              		.cfi_def_cfa_offset 8
 1093              		.cfi_offset 7, -8
 1094              		.cfi_offset 14, -4
 1095 0002 8AB0     		sub	sp, sp, #40
 1096              		.cfi_def_cfa_offset 48
 1097 0004 00AF     		add	r7, sp, #0
 1098              		.cfi_def_cfa_register 7
 1099 0006 F860     		str	r0, [r7, #12]
 1100 0008 B960     		str	r1, [r7, #8]
 1101 000a 7A60     		str	r2, [r7, #4]
 1102 000c 3B60     		str	r3, [r7]
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1103              		.loc 1 1239 0
 1104 000e 0023     		movs	r3, #0
 1105 0010 7B62     		str	r3, [r7, #36]
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** TimeOut_t xTimeOut;
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** int8_t *pcOriginalReadPosition;
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1106              		.loc 1 1242 0
 1107 0012 FB68     		ldr	r3, [r7, #12]
 1108 0014 3B62     		str	r3, [r7, #32]
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 1109              		.loc 1 1244 0
 1110 0016 3B6A     		ldr	r3, [r7, #32]
 1111 0018 002B     		cmp	r3, #0
 1112 001a 01D1     		bne	.L91
 1113              		.loc 1 1244 0 is_stmt 0 discriminator 1
 1114              		.syntax unified
 1115              	@ 1244 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1116 001c 72B6     		 cpsid i 
 1117              	@ 0 "" 2
 1118              		.thumb
 1119              		.syntax unified
 1120              	.L92:
 1121 001e FEE7     		b	.L92
 1122              	.L91:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1123              		.loc 1 1245 0 is_stmt 1
 1124 0020 BB68     		ldr	r3, [r7, #8]
 1125 0022 002B     		cmp	r3, #0
 1126 0024 03D1     		bne	.L93
 1127              		.loc 1 1245 0 is_stmt 0 discriminator 2
 1128 0026 3B6A     		ldr	r3, [r7, #32]
 1129 0028 1B6C     		ldr	r3, [r3, #64]
 1130 002a 002B     		cmp	r3, #0
 1131 002c 01D1     		bne	.L94
 1132              	.L93:
 1133              		.loc 1 1245 0 discriminator 3
 1134 002e 0123     		movs	r3, #1
 1135 0030 00E0     		b	.L95
 1136              	.L94:
 1137              		.loc 1 1245 0 discriminator 4
 1138 0032 0023     		movs	r3, #0
 1139              	.L95:
 1140              		.loc 1 1245 0 discriminator 6
 1141 0034 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 47


 1142 0036 01D1     		bne	.L96
 1143              		.loc 1 1245 0 discriminator 7
 1144              		.syntax unified
 1145              	@ 1245 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1146 0038 72B6     		 cpsid i 
 1147              	@ 0 "" 2
 1148              		.thumb
 1149              		.syntax unified
 1150              	.L97:
 1151              		.loc 1 1245 0 discriminator 2
 1152 003a FEE7     		b	.L97
 1153              	.L96:
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 1154              		.loc 1 1248 0 is_stmt 1
 1155 003c FFF7FEFF 		bl	xTaskGetSchedulerState
 1156 0040 0346     		mov	r3, r0
 1157 0042 002B     		cmp	r3, #0
 1158 0044 02D1     		bne	.L98
 1159              		.loc 1 1248 0 is_stmt 0 discriminator 2
 1160 0046 7B68     		ldr	r3, [r7, #4]
 1161 0048 002B     		cmp	r3, #0
 1162 004a 01D1     		bne	.L99
 1163              	.L98:
 1164              		.loc 1 1248 0 discriminator 3
 1165 004c 0123     		movs	r3, #1
 1166 004e 00E0     		b	.L100
 1167              	.L99:
 1168              		.loc 1 1248 0 discriminator 4
 1169 0050 0023     		movs	r3, #0
 1170              	.L100:
 1171              		.loc 1 1248 0 discriminator 6
 1172 0052 002B     		cmp	r3, #0
 1173 0054 01D1     		bne	.L101
 1174              		.loc 1 1248 0 discriminator 7
 1175              		.syntax unified
 1176              	@ 1248 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1177 0056 72B6     		 cpsid i 
 1178              	@ 0 "" 2
 1179              		.thumb
 1180              		.syntax unified
 1181              	.L102:
 1182              		.loc 1 1248 0 discriminator 3
 1183 0058 FEE7     		b	.L102
 1184              	.L101:
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	statements within the function itself.  This is done in the interest
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	of execution time efficiency. */
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	for( ;; )
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		taskENTER_CRITICAL();
 1185              		.loc 1 1258 0 is_stmt 1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 48


 1186 005a FFF7FEFF 		bl	vPortEnterCritical
 1187              	.LBB34:
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1188              		.loc 1 1260 0
 1189 005e 3B6A     		ldr	r3, [r7, #32]
 1190 0060 9B6B     		ldr	r3, [r3, #56]
 1191 0062 FB61     		str	r3, [r7, #28]
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 1192              		.loc 1 1264 0
 1193 0064 FB69     		ldr	r3, [r7, #28]
 1194 0066 002B     		cmp	r3, #0
 1195 0068 3DD0     		beq	.L103
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Remember the read position in case the queue is only being
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				peeked. */
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1196              		.loc 1 1268 0
 1197 006a 3B6A     		ldr	r3, [r7, #32]
 1198 006c DB68     		ldr	r3, [r3, #12]
 1199 006e BB61     		str	r3, [r7, #24]
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
 1200              		.loc 1 1270 0
 1201 0070 B968     		ldr	r1, [r7, #8]
 1202 0072 386A     		ldr	r0, [r7, #32]
 1203 0074 FFF7FEFF 		bl	prvCopyDataFromQueue
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xJustPeeking == pdFALSE )
 1204              		.loc 1 1272 0
 1205 0078 3B68     		ldr	r3, [r7]
 1206 007a 002B     		cmp	r3, #0
 1207 007c 18D1     		bne	.L104
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* Actually removing data, not just peeking. */
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 1208              		.loc 1 1277 0
 1209 007e FB69     		ldr	r3, [r7, #28]
 1210 0080 5A1E     		subs	r2, r3, #1
 1211 0082 3B6A     		ldr	r3, [r7, #32]
 1212 0084 9A63     		str	r2, [r3, #56]
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* Record the information required to implement
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							priority inheritance should it become necessary. */
1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 49


1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 1213              		.loc 1 1294 0
 1214 0086 3B6A     		ldr	r3, [r7, #32]
 1215 0088 1B69     		ldr	r3, [r3, #16]
 1216 008a 002B     		cmp	r3, #0
 1217 008c 27D0     		beq	.L105
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1218              		.loc 1 1296 0
 1219 008e 3B6A     		ldr	r3, [r7, #32]
 1220 0090 1033     		adds	r3, r3, #16
 1221 0092 1846     		mov	r0, r3
 1222 0094 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1223 0098 0346     		mov	r3, r0
 1224 009a 002B     		cmp	r3, #0
 1225 009c 1FD0     		beq	.L105
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1226              		.loc 1 1298 0
 1227 009e 494B     		ldr	r3, .L116
 1228 00a0 4FF08052 		mov	r2, #268435456
 1229 00a4 1A60     		str	r2, [r3]
 1230              		.syntax unified
 1231              	@ 1298 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1232 00a6 BFF34F8F 		dsb
 1233              	@ 0 "" 2
 1234              	@ 1298 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1235 00aa BFF36F8F 		isb
 1236              	@ 0 "" 2
 1237              		.thumb
 1238              		.syntax unified
 1239 00ae 16E0     		b	.L105
 1240              	.L104:
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* The data is not being removed, so reset the read
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					pointer. */
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1241              		.loc 1 1316 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 50


 1242 00b0 3B6A     		ldr	r3, [r7, #32]
 1243 00b2 BA69     		ldr	r2, [r7, #24]
 1244 00b4 DA60     		str	r2, [r3, #12]
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* The data is being left in the queue, so see if there are
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					any other tasks waiting for the data. */
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 1245              		.loc 1 1320 0
 1246 00b6 3B6A     		ldr	r3, [r7, #32]
 1247 00b8 5B6A     		ldr	r3, [r3, #36]
 1248 00ba 002B     		cmp	r3, #0
 1249 00bc 0FD0     		beq	.L105
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 1250              		.loc 1 1322 0
 1251 00be 3B6A     		ldr	r3, [r7, #32]
 1252 00c0 2433     		adds	r3, r3, #36
 1253 00c2 1846     		mov	r0, r3
 1254 00c4 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1255 00c8 0346     		mov	r3, r0
 1256 00ca 002B     		cmp	r3, #0
 1257 00cc 07D0     		beq	.L105
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The task waiting has a higher priority than this task. */
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 1258              		.loc 1 1325 0
 1259 00ce 3D4B     		ldr	r3, .L116
 1260 00d0 4FF08052 		mov	r2, #268435456
 1261 00d4 1A60     		str	r2, [r3]
 1262              		.syntax unified
 1263              	@ 1325 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1264 00d6 BFF34F8F 		dsb
 1265              	@ 0 "" 2
 1266              	@ 1325 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1267 00da BFF36F8F 		isb
 1268              	@ 0 "" 2
 1269              		.thumb
 1270              		.syntax unified
 1271              	.L105:
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				taskEXIT_CRITICAL();
 1272              		.loc 1 1338 0
 1273 00de FFF7FEFF 		bl	vPortExitCritical
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				return pdPASS;
 1274              		.loc 1 1339 0
 1275 00e2 0123     		movs	r3, #1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 51


 1276 00e4 6AE0     		b	.L115
 1277              	.L103:
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 1278              		.loc 1 1343 0
 1279 00e6 7B68     		ldr	r3, [r7, #4]
 1280 00e8 002B     		cmp	r3, #0
 1281 00ea 03D1     		bne	.L107
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					the block time has expired) so leave now. */
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					taskEXIT_CRITICAL();
 1282              		.loc 1 1347 0
 1283 00ec FFF7FEFF 		bl	vPortExitCritical
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					return errQUEUE_EMPTY;
 1284              		.loc 1 1349 0
 1285 00f0 0023     		movs	r3, #0
 1286 00f2 63E0     		b	.L115
 1287              	.L107:
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 1288              		.loc 1 1351 0
 1289 00f4 7B6A     		ldr	r3, [r7, #36]
 1290 00f6 002B     		cmp	r3, #0
 1291 00f8 06D1     		bne	.L108
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* The queue was empty and a block time was specified so
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					configure the timeout structure. */
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 1292              		.loc 1 1355 0
 1293 00fa 07F11003 		add	r3, r7, #16
 1294 00fe 1846     		mov	r0, r3
 1295 0100 FFF7FEFF 		bl	vTaskSetTimeOutState
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1296              		.loc 1 1356 0
 1297 0104 0123     		movs	r3, #1
 1298 0106 7B62     		str	r3, [r7, #36]
 1299              	.L108:
 1300              	.LBE34:
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* Entry time was already set. */
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		taskEXIT_CRITICAL();
 1301              		.loc 1 1365 0
 1302 0108 FFF7FEFF 		bl	vPortExitCritical
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		now the critical section has been exited. */
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 52


1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		vTaskSuspendAll();
 1303              		.loc 1 1370 0
 1304 010c FFF7FEFF 		bl	vTaskSuspendAll
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		prvLockQueue( pxQueue );
 1305              		.loc 1 1371 0
 1306 0110 FFF7FEFF 		bl	vPortEnterCritical
 1307 0114 3B6A     		ldr	r3, [r7, #32]
 1308 0116 93F84430 		ldrb	r3, [r3, #68]
 1309 011a 5BB2     		sxtb	r3, r3
 1310 011c B3F1FF3F 		cmp	r3, #-1
 1311 0120 03D1     		bne	.L109
 1312              		.loc 1 1371 0 is_stmt 0 discriminator 1
 1313 0122 3B6A     		ldr	r3, [r7, #32]
 1314 0124 0022     		movs	r2, #0
 1315 0126 83F84420 		strb	r2, [r3, #68]
 1316              	.L109:
 1317              		.loc 1 1371 0 discriminator 3
 1318 012a 3B6A     		ldr	r3, [r7, #32]
 1319 012c 93F84530 		ldrb	r3, [r3, #69]
 1320 0130 5BB2     		sxtb	r3, r3
 1321 0132 B3F1FF3F 		cmp	r3, #-1
 1322 0136 03D1     		bne	.L110
 1323              		.loc 1 1371 0 discriminator 4
 1324 0138 3B6A     		ldr	r3, [r7, #32]
 1325 013a 0022     		movs	r2, #0
 1326 013c 83F84520 		strb	r2, [r3, #69]
 1327              	.L110:
 1328              		.loc 1 1371 0 discriminator 6
 1329 0140 FFF7FEFF 		bl	vPortExitCritical
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 1330              		.loc 1 1374 0 is_stmt 1 discriminator 6
 1331 0144 3A1D     		adds	r2, r7, #4
 1332 0146 07F11003 		add	r3, r7, #16
 1333 014a 1146     		mov	r1, r2
 1334 014c 1846     		mov	r0, r3
 1335 014e FFF7FEFF 		bl	xTaskCheckForTimeOut
 1336 0152 0346     		mov	r3, r0
 1337 0154 002B     		cmp	r3, #0
 1338 0156 24D1     		bne	.L111
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1339              		.loc 1 1376 0
 1340 0158 386A     		ldr	r0, [r7, #32]
 1341 015a FFF7FEFF 		bl	prvIsQueueEmpty
 1342 015e 0346     		mov	r3, r0
 1343 0160 002B     		cmp	r3, #0
 1344 0162 18D0     		beq	.L112
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						taskENTER_CRITICAL();
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 53


1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						taskEXIT_CRITICAL();
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				#endif
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 1345              		.loc 1 1397 0
 1346 0164 3B6A     		ldr	r3, [r7, #32]
 1347 0166 2433     		adds	r3, r3, #36
 1348 0168 7A68     		ldr	r2, [r7, #4]
 1349 016a 1146     		mov	r1, r2
 1350 016c 1846     		mov	r0, r3
 1351 016e FFF7FEFF 		bl	vTaskPlaceOnEventList
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				prvUnlockQueue( pxQueue );
 1352              		.loc 1 1398 0
 1353 0172 386A     		ldr	r0, [r7, #32]
 1354 0174 FFF7FEFF 		bl	prvUnlockQueue
1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1355              		.loc 1 1399 0
 1356 0178 FFF7FEFF 		bl	xTaskResumeAll
 1357 017c 0346     		mov	r3, r0
 1358 017e 002B     		cmp	r3, #0
 1359 0180 7FF46BAF 		bne	.L101
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					portYIELD_WITHIN_API();
 1360              		.loc 1 1401 0
 1361 0184 0F4B     		ldr	r3, .L116
 1362 0186 4FF08052 		mov	r2, #268435456
 1363 018a 1A60     		str	r2, [r3]
 1364              		.syntax unified
 1365              	@ 1401 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1366 018c BFF34F8F 		dsb
 1367              	@ 0 "" 2
 1368              	@ 1401 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1369 0190 BFF36F8F 		isb
 1370              	@ 0 "" 2
 1371              		.thumb
 1372              		.syntax unified
 1373 0194 61E7     		b	.L101
 1374              	.L112:
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Try again. */
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				prvUnlockQueue( pxQueue );
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 54


 1375              		.loc 1 1411 0
 1376 0196 386A     		ldr	r0, [r7, #32]
 1377 0198 FFF7FEFF 		bl	prvUnlockQueue
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				( void ) xTaskResumeAll();
 1378              		.loc 1 1412 0
 1379 019c FFF7FEFF 		bl	xTaskResumeAll
 1380 01a0 5BE7     		b	.L101
 1381              	.L111:
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			prvUnlockQueue( pxQueue );
 1382              		.loc 1 1417 0
 1383 01a2 386A     		ldr	r0, [r7, #32]
 1384 01a4 FFF7FEFF 		bl	prvUnlockQueue
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( void ) xTaskResumeAll();
 1385              		.loc 1 1418 0
 1386 01a8 FFF7FEFF 		bl	xTaskResumeAll
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 1387              		.loc 1 1420 0
 1388 01ac 386A     		ldr	r0, [r7, #32]
 1389 01ae FFF7FEFF 		bl	prvIsQueueEmpty
 1390 01b2 0346     		mov	r3, r0
 1391 01b4 002B     		cmp	r3, #0
 1392 01b6 3FF450AF 		beq	.L101
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				return errQUEUE_EMPTY;
 1393              		.loc 1 1423 0
 1394 01ba 0023     		movs	r3, #0
 1395              	.L115:
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 1396              		.loc 1 1431 0 discriminator 7
 1397 01bc 1846     		mov	r0, r3
 1398 01be 2837     		adds	r7, r7, #40
 1399              		.cfi_def_cfa_offset 8
 1400 01c0 BD46     		mov	sp, r7
 1401              		.cfi_def_cfa_register 13
 1402              		@ sp needed
 1403 01c2 80BD     		pop	{r7, pc}
 1404              	.L117:
 1405              		.align	2
 1406              	.L116:
 1407 01c4 04ED00E0 		.word	-536810236
 1408              		.cfi_endproc
 1409              	.LFE135:
 1410              		.size	xQueueGenericReceive, .-xQueueGenericReceive
 1411              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 55


 1412              		.align	2
 1413              		.global	xQueueReceiveFromISR
 1414              		.thumb
 1415              		.thumb_func
 1416              		.type	xQueueReceiveFromISR, %function
 1417              	xQueueReceiveFromISR:
 1418              	.LFB136:
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 1419              		.loc 1 1435 0
 1420              		.cfi_startproc
 1421              		@ args = 0, pretend = 0, frame = 48
 1422              		@ frame_needed = 1, uses_anonymous_args = 0
 1423 0000 80B5     		push	{r7, lr}
 1424              		.cfi_def_cfa_offset 8
 1425              		.cfi_offset 7, -8
 1426              		.cfi_offset 14, -4
 1427 0002 8CB0     		sub	sp, sp, #48
 1428              		.cfi_def_cfa_offset 56
 1429 0004 00AF     		add	r7, sp, #0
 1430              		.cfi_def_cfa_register 7
 1431 0006 F860     		str	r0, [r7, #12]
 1432 0008 B960     		str	r1, [r7, #8]
 1433 000a 7A60     		str	r2, [r7, #4]
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1434              		.loc 1 1438 0
 1435 000c FB68     		ldr	r3, [r7, #12]
 1436 000e BB62     		str	r3, [r7, #40]
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 1437              		.loc 1 1440 0
 1438 0010 BB6A     		ldr	r3, [r7, #40]
 1439 0012 002B     		cmp	r3, #0
 1440 0014 01D1     		bne	.L119
 1441              		.loc 1 1440 0 is_stmt 0 discriminator 1
 1442              		.syntax unified
 1443              	@ 1440 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1444 0016 72B6     		 cpsid i 
 1445              	@ 0 "" 2
 1446              		.thumb
 1447              		.syntax unified
 1448              	.L120:
 1449 0018 FEE7     		b	.L120
 1450              	.L119:
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1451              		.loc 1 1441 0 is_stmt 1
 1452 001a BB68     		ldr	r3, [r7, #8]
 1453 001c 002B     		cmp	r3, #0
 1454 001e 03D1     		bne	.L121
 1455              		.loc 1 1441 0 is_stmt 0 discriminator 2
 1456 0020 BB6A     		ldr	r3, [r7, #40]
 1457 0022 1B6C     		ldr	r3, [r3, #64]
 1458 0024 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 56


 1459 0026 01D1     		bne	.L122
 1460              	.L121:
 1461              		.loc 1 1441 0 discriminator 3
 1462 0028 0123     		movs	r3, #1
 1463 002a 00E0     		b	.L123
 1464              	.L122:
 1465              		.loc 1 1441 0 discriminator 4
 1466 002c 0023     		movs	r3, #0
 1467              	.L123:
 1468              		.loc 1 1441 0 discriminator 6
 1469 002e 002B     		cmp	r3, #0
 1470 0030 01D1     		bne	.L124
 1471              		.loc 1 1441 0 discriminator 7
 1472              		.syntax unified
 1473              	@ 1441 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1474 0032 72B6     		 cpsid i 
 1475              	@ 0 "" 2
 1476              		.thumb
 1477              		.syntax unified
 1478              	.L125:
 1479              		.loc 1 1441 0 discriminator 2
 1480 0034 FEE7     		b	.L125
 1481              	.L124:
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1482              		.loc 1 1457 0 is_stmt 1
 1483 0036 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1484              	.LBB35:
 1485              	.LBB36:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 1486              		.loc 2 215 0
 1487              		.syntax unified
 1488              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1489 003a EFF31182 		    mrs r2, basepri                                            
 1490 003e 4FF0BF03 	    mov r3, #191                                                 
 1491 0042 83F31188 	    msr basepri, r3                                            
 1492 0046 BFF36F8F 	    isb                                                        
 1493 004a BFF34F8F 	    dsb                                                        
 1494              	
 1495              	@ 0 "" 2
 1496              		.thumb
 1497              		.syntax unified
 1498 004e 7A61     		str	r2, [r7, #20]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 57


 1499 0050 3B61     		str	r3, [r7, #16]
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 1500              		.loc 2 227 0
 1501 0052 7B69     		ldr	r3, [r7, #20]
 1502              	.LBE36:
 1503              	.LBE35:
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1504              		.loc 1 1459 0
 1505 0054 3B62     		str	r3, [r7, #32]
 1506              	.LBB37:
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 1507              		.loc 1 1461 0
 1508 0056 BB6A     		ldr	r3, [r7, #40]
 1509 0058 9B6B     		ldr	r3, [r3, #56]
 1510 005a FB61     		str	r3, [r7, #28]
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 1511              		.loc 1 1464 0
 1512 005c FB69     		ldr	r3, [r7, #28]
 1513 005e 002B     		cmp	r3, #0
 1514 0060 2DD0     		beq	.L127
 1515              	.LBB38:
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
 1516              		.loc 1 1466 0
 1517 0062 BB6A     		ldr	r3, [r7, #40]
 1518 0064 93F84430 		ldrb	r3, [r3, #68]
 1519 0068 FB76     		strb	r3, [r7, #27]
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1520              		.loc 1 1470 0
 1521 006a B968     		ldr	r1, [r7, #8]
 1522 006c B86A     		ldr	r0, [r7, #40]
 1523 006e FFF7FEFF 		bl	prvCopyDataFromQueue
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 1524              		.loc 1 1471 0
 1525 0072 FB69     		ldr	r3, [r7, #28]
 1526 0074 5A1E     		subs	r2, r3, #1
 1527 0076 BB6A     		ldr	r3, [r7, #40]
 1528 0078 9A63     		str	r2, [r3, #56]
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			will know that an ISR has removed data while the queue was
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			locked. */
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
 1529              		.loc 1 1477 0
 1530 007a 97F91B30 		ldrsb	r3, [r7, #27]
 1531 007e B3F1FF3F 		cmp	r3, #-1
 1532 0082 12D1     		bne	.L128
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 58


 1533              		.loc 1 1479 0
 1534 0084 BB6A     		ldr	r3, [r7, #40]
 1535 0086 1B69     		ldr	r3, [r3, #16]
 1536 0088 002B     		cmp	r3, #0
 1537 008a 15D0     		beq	.L129
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 1538              		.loc 1 1481 0
 1539 008c BB6A     		ldr	r3, [r7, #40]
 1540 008e 1033     		adds	r3, r3, #16
 1541 0090 1846     		mov	r0, r3
 1542 0092 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1543 0096 0346     		mov	r3, r0
 1544 0098 002B     		cmp	r3, #0
 1545 009a 0DD0     		beq	.L129
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						/* The task waiting has a higher priority than us so
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						force a context switch. */
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
 1546              		.loc 1 1485 0
 1547 009c 7B68     		ldr	r3, [r7, #4]
 1548 009e 002B     		cmp	r3, #0
 1549 00a0 0AD0     		beq	.L129
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
 1550              		.loc 1 1487 0
 1551 00a2 7B68     		ldr	r3, [r7, #4]
 1552 00a4 0122     		movs	r2, #1
 1553 00a6 1A60     		str	r2, [r3]
 1554 00a8 06E0     		b	.L129
 1555              	.L128:
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				knows that data was removed while it was locked. */
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 1556              		.loc 1 1508 0
 1557 00aa FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 1558 00ac 0133     		adds	r3, r3, #1
 1559 00ae DBB2     		uxtb	r3, r3
 1560 00b0 5AB2     		sxtb	r2, r3
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 59


 1561 00b2 BB6A     		ldr	r3, [r7, #40]
 1562 00b4 83F84420 		strb	r2, [r3, #68]
 1563              	.L129:
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdPASS;
 1564              		.loc 1 1511 0
 1565 00b8 0123     		movs	r3, #1
 1566 00ba FB62     		str	r3, [r7, #44]
 1567              	.LBE38:
 1568 00bc 01E0     		b	.L130
 1569              	.L127:
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdFAIL;
 1570              		.loc 1 1515 0
 1571 00be 0023     		movs	r3, #0
 1572 00c0 FB62     		str	r3, [r7, #44]
 1573              	.L130:
 1574 00c2 3B6A     		ldr	r3, [r7, #32]
 1575 00c4 7B62     		str	r3, [r7, #36]
 1576              	.LBE37:
 1577              	.LBB39:
 1578              	.LBB40:
 1579              		.loc 2 233 0
 1580 00c6 7B6A     		ldr	r3, [r7, #36]
 1581              		.syntax unified
 1582              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1583 00c8 83F31188 		    msr basepri, r3  
 1584              	@ 0 "" 2
 1585              		.thumb
 1586              		.syntax unified
 1587              	.LBE40:
 1588              	.LBE39:
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 1589              		.loc 1 1521 0
 1590 00cc FB6A     		ldr	r3, [r7, #44]
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 1591              		.loc 1 1522 0
 1592 00ce 1846     		mov	r0, r3
 1593 00d0 3037     		adds	r7, r7, #48
 1594              		.cfi_def_cfa_offset 8
 1595 00d2 BD46     		mov	sp, r7
 1596              		.cfi_def_cfa_register 13
 1597              		@ sp needed
 1598 00d4 80BD     		pop	{r7, pc}
 1599              		.cfi_endproc
 1600              	.LFE136:
 1601              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1602 00d6 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1603              		.align	2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 60


 1604              		.global	xQueuePeekFromISR
 1605              		.thumb
 1606              		.thumb_func
 1607              		.type	xQueuePeekFromISR, %function
 1608              	xQueuePeekFromISR:
 1609              	.LFB137:
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 1610              		.loc 1 1526 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 40
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614 0000 80B5     		push	{r7, lr}
 1615              		.cfi_def_cfa_offset 8
 1616              		.cfi_offset 7, -8
 1617              		.cfi_offset 14, -4
 1618 0002 8AB0     		sub	sp, sp, #40
 1619              		.cfi_def_cfa_offset 48
 1620 0004 00AF     		add	r7, sp, #0
 1621              		.cfi_def_cfa_register 7
 1622 0006 7860     		str	r0, [r7, #4]
 1623 0008 3960     		str	r1, [r7]
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** int8_t *pcOriginalReadPosition;
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1624              		.loc 1 1530 0
 1625 000a 7B68     		ldr	r3, [r7, #4]
 1626 000c 3B62     		str	r3, [r7, #32]
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 1627              		.loc 1 1532 0
 1628 000e 3B6A     		ldr	r3, [r7, #32]
 1629 0010 002B     		cmp	r3, #0
 1630 0012 01D1     		bne	.L133
 1631              		.loc 1 1532 0 is_stmt 0 discriminator 1
 1632              		.syntax unified
 1633              	@ 1532 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1634 0014 72B6     		 cpsid i 
 1635              	@ 0 "" 2
 1636              		.thumb
 1637              		.syntax unified
 1638              	.L134:
 1639 0016 FEE7     		b	.L134
 1640              	.L133:
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1641              		.loc 1 1533 0 is_stmt 1
 1642 0018 3B68     		ldr	r3, [r7]
 1643 001a 002B     		cmp	r3, #0
 1644 001c 03D1     		bne	.L135
 1645              		.loc 1 1533 0 is_stmt 0 discriminator 2
 1646 001e 3B6A     		ldr	r3, [r7, #32]
 1647 0020 1B6C     		ldr	r3, [r3, #64]
 1648 0022 002B     		cmp	r3, #0
 1649 0024 01D1     		bne	.L136
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 61


 1650              	.L135:
 1651              		.loc 1 1533 0 discriminator 3
 1652 0026 0123     		movs	r3, #1
 1653 0028 00E0     		b	.L137
 1654              	.L136:
 1655              		.loc 1 1533 0 discriminator 4
 1656 002a 0023     		movs	r3, #0
 1657              	.L137:
 1658              		.loc 1 1533 0 discriminator 6
 1659 002c 002B     		cmp	r3, #0
 1660 002e 01D1     		bne	.L138
 1661              		.loc 1 1533 0 discriminator 7
 1662              		.syntax unified
 1663              	@ 1533 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1664 0030 72B6     		 cpsid i 
 1665              	@ 0 "" 2
 1666              		.thumb
 1667              		.syntax unified
 1668              	.L139:
 1669              		.loc 1 1533 0 discriminator 2
 1670 0032 FEE7     		b	.L139
 1671              	.L138:
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 1672              		.loc 1 1534 0 is_stmt 1
 1673 0034 3B6A     		ldr	r3, [r7, #32]
 1674 0036 1B6C     		ldr	r3, [r3, #64]
 1675 0038 002B     		cmp	r3, #0
 1676 003a 01D1     		bne	.L140
 1677              		.loc 1 1534 0 is_stmt 0 discriminator 1
 1678              		.syntax unified
 1679              	@ 1534 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1680 003c 72B6     		 cpsid i 
 1681              	@ 0 "" 2
 1682              		.thumb
 1683              		.syntax unified
 1684              	.L141:
 1685              		.loc 1 1534 0 discriminator 3
 1686 003e FEE7     		b	.L141
 1687              	.L140:
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1688              		.loc 1 1550 0 is_stmt 1
 1689 0040 FFF7FEFF 		bl	vPortValidateInterruptPriority
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 62


 1690              	.LBB41:
 1691              	.LBB42:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 1692              		.loc 2 215 0
 1693              		.syntax unified
 1694              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1695 0044 EFF31182 		    mrs r2, basepri                                            
 1696 0048 4FF0BF03 	    mov r3, #191                                                 
 1697 004c 83F31188 	    msr basepri, r3                                            
 1698 0050 BFF36F8F 	    isb                                                        
 1699 0054 BFF34F8F 	    dsb                                                        
 1700              	
 1701              	@ 0 "" 2
 1702              		.thumb
 1703              		.syntax unified
 1704 0058 3A61     		str	r2, [r7, #16]
 1705 005a FB60     		str	r3, [r7, #12]
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 1706              		.loc 2 227 0
 1707 005c 3B69     		ldr	r3, [r7, #16]
 1708              	.LBE42:
 1709              	.LBE41:
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 1710              		.loc 1 1552 0
 1711 005e BB61     		str	r3, [r7, #24]
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
 1712              		.loc 1 1555 0
 1713 0060 3B6A     		ldr	r3, [r7, #32]
 1714 0062 9B6B     		ldr	r3, [r3, #56]
 1715 0064 002B     		cmp	r3, #0
 1716 0066 0CD0     		beq	.L143
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			actually being removed from the queue. */
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
 1717              		.loc 1 1561 0
 1718 0068 3B6A     		ldr	r3, [r7, #32]
 1719 006a DB68     		ldr	r3, [r3, #12]
 1720 006c 7B61     		str	r3, [r7, #20]
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1721              		.loc 1 1562 0
 1722 006e 3968     		ldr	r1, [r7]
 1723 0070 386A     		ldr	r0, [r7, #32]
 1724 0072 FFF7FEFF 		bl	prvCopyDataFromQueue
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1725              		.loc 1 1563 0
 1726 0076 3B6A     		ldr	r3, [r7, #32]
 1727 0078 7A69     		ldr	r2, [r7, #20]
 1728 007a DA60     		str	r2, [r3, #12]
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdPASS;
 1729              		.loc 1 1565 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 63


 1730 007c 0123     		movs	r3, #1
 1731 007e 7B62     		str	r3, [r7, #36]
 1732 0080 01E0     		b	.L144
 1733              	.L143:
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdFAIL;
 1734              		.loc 1 1569 0
 1735 0082 0023     		movs	r3, #0
 1736 0084 7B62     		str	r3, [r7, #36]
 1737              	.L144:
 1738 0086 BB69     		ldr	r3, [r7, #24]
 1739 0088 FB61     		str	r3, [r7, #28]
 1740              	.LBB43:
 1741              	.LBB44:
 1742              		.loc 2 233 0
 1743 008a FB69     		ldr	r3, [r7, #28]
 1744              		.syntax unified
 1745              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1746 008c 83F31188 		    msr basepri, r3  
 1747              	@ 0 "" 2
 1748              		.thumb
 1749              		.syntax unified
 1750              	.LBE44:
 1751              	.LBE43:
1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 1752              		.loc 1 1575 0
 1753 0090 7B6A     		ldr	r3, [r7, #36]
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 1754              		.loc 1 1576 0
 1755 0092 1846     		mov	r0, r3
 1756 0094 2837     		adds	r7, r7, #40
 1757              		.cfi_def_cfa_offset 8
 1758 0096 BD46     		mov	sp, r7
 1759              		.cfi_def_cfa_register 13
 1760              		@ sp needed
 1761 0098 80BD     		pop	{r7, pc}
 1762              		.cfi_endproc
 1763              	.LFE137:
 1764              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 1765 009a 00BF     		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 1766              		.align	2
 1767              		.global	uxQueueMessagesWaiting
 1768              		.thumb
 1769              		.thumb_func
 1770              		.type	uxQueueMessagesWaiting, %function
 1771              	uxQueueMessagesWaiting:
 1772              	.LFB138:
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 64


1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 1773              		.loc 1 1580 0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 16
 1776              		@ frame_needed = 1, uses_anonymous_args = 0
 1777 0000 80B5     		push	{r7, lr}
 1778              		.cfi_def_cfa_offset 8
 1779              		.cfi_offset 7, -8
 1780              		.cfi_offset 14, -4
 1781 0002 84B0     		sub	sp, sp, #16
 1782              		.cfi_def_cfa_offset 24
 1783 0004 00AF     		add	r7, sp, #0
 1784              		.cfi_def_cfa_register 7
 1785 0006 7860     		str	r0, [r7, #4]
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxReturn;
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( xQueue );
 1786              		.loc 1 1583 0
 1787 0008 7B68     		ldr	r3, [r7, #4]
 1788 000a 002B     		cmp	r3, #0
 1789 000c 01D1     		bne	.L147
 1790              		.loc 1 1583 0 is_stmt 0 discriminator 1
 1791              		.syntax unified
 1792              	@ 1583 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1793 000e 72B6     		 cpsid i 
 1794              	@ 0 "" 2
 1795              		.thumb
 1796              		.syntax unified
 1797              	.L148:
 1798 0010 FEE7     		b	.L148
 1799              	.L147:
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();
 1800              		.loc 1 1585 0 is_stmt 1
 1801 0012 FFF7FEFF 		bl	vPortEnterCritical
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1802              		.loc 1 1587 0
 1803 0016 7B68     		ldr	r3, [r7, #4]
 1804 0018 9B6B     		ldr	r3, [r3, #56]
 1805 001a FB60     		str	r3, [r7, #12]
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL();
 1806              		.loc 1 1589 0
 1807 001c FFF7FEFF 		bl	vPortExitCritical
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return uxReturn;
 1808              		.loc 1 1591 0
 1809 0020 FB68     		ldr	r3, [r7, #12]
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1810              		.loc 1 1592 0
 1811 0022 1846     		mov	r0, r3
 1812 0024 1037     		adds	r7, r7, #16
 1813              		.cfi_def_cfa_offset 8
 1814 0026 BD46     		mov	sp, r7
 1815              		.cfi_def_cfa_register 13
 1816              		@ sp needed
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 65


 1817 0028 80BD     		pop	{r7, pc}
 1818              		.cfi_endproc
 1819              	.LFE138:
 1820              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 1821 002a 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 1822              		.align	2
 1823              		.global	uxQueueSpacesAvailable
 1824              		.thumb
 1825              		.thumb_func
 1826              		.type	uxQueueSpacesAvailable, %function
 1827              	uxQueueSpacesAvailable:
 1828              	.LFB139:
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 1829              		.loc 1 1596 0
 1830              		.cfi_startproc
 1831              		@ args = 0, pretend = 0, frame = 16
 1832              		@ frame_needed = 1, uses_anonymous_args = 0
 1833 0000 80B5     		push	{r7, lr}
 1834              		.cfi_def_cfa_offset 8
 1835              		.cfi_offset 7, -8
 1836              		.cfi_offset 14, -4
 1837 0002 84B0     		sub	sp, sp, #16
 1838              		.cfi_def_cfa_offset 24
 1839 0004 00AF     		add	r7, sp, #0
 1840              		.cfi_def_cfa_register 7
 1841 0006 7860     		str	r0, [r7, #4]
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxReturn;
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t *pxQueue;
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
 1842              		.loc 1 1600 0
 1843 0008 7B68     		ldr	r3, [r7, #4]
 1844 000a FB60     		str	r3, [r7, #12]
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 1845              		.loc 1 1601 0
 1846 000c FB68     		ldr	r3, [r7, #12]
 1847 000e 002B     		cmp	r3, #0
 1848 0010 01D1     		bne	.L151
 1849              		.loc 1 1601 0 is_stmt 0 discriminator 1
 1850              		.syntax unified
 1851              	@ 1601 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1852 0012 72B6     		 cpsid i 
 1853              	@ 0 "" 2
 1854              		.thumb
 1855              		.syntax unified
 1856              	.L152:
 1857 0014 FEE7     		b	.L152
 1858              	.L151:
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();
 1859              		.loc 1 1603 0 is_stmt 1
 1860 0016 FFF7FEFF 		bl	vPortEnterCritical
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 66


 1861              		.loc 1 1605 0
 1862 001a FB68     		ldr	r3, [r7, #12]
 1863 001c DA6B     		ldr	r2, [r3, #60]
 1864 001e FB68     		ldr	r3, [r7, #12]
 1865 0020 9B6B     		ldr	r3, [r3, #56]
 1866 0022 D31A     		subs	r3, r2, r3
 1867 0024 BB60     		str	r3, [r7, #8]
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL();
 1868              		.loc 1 1607 0
 1869 0026 FFF7FEFF 		bl	vPortExitCritical
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return uxReturn;
 1870              		.loc 1 1609 0
 1871 002a BB68     		ldr	r3, [r7, #8]
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1872              		.loc 1 1610 0
 1873 002c 1846     		mov	r0, r3
 1874 002e 1037     		adds	r7, r7, #16
 1875              		.cfi_def_cfa_offset 8
 1876 0030 BD46     		mov	sp, r7
 1877              		.cfi_def_cfa_register 13
 1878              		@ sp needed
 1879 0032 80BD     		pop	{r7, pc}
 1880              		.cfi_endproc
 1881              	.LFE139:
 1882              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 1883              		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1884              		.align	2
 1885              		.global	uxQueueMessagesWaitingFromISR
 1886              		.thumb
 1887              		.thumb_func
 1888              		.type	uxQueueMessagesWaitingFromISR, %function
 1889              	uxQueueMessagesWaitingFromISR:
 1890              	.LFB140:
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 1891              		.loc 1 1614 0
 1892              		.cfi_startproc
 1893              		@ args = 0, pretend = 0, frame = 16
 1894              		@ frame_needed = 1, uses_anonymous_args = 0
 1895              		@ link register save eliminated.
 1896 0000 80B4     		push	{r7}
 1897              		.cfi_def_cfa_offset 4
 1898              		.cfi_offset 7, -4
 1899 0002 85B0     		sub	sp, sp, #20
 1900              		.cfi_def_cfa_offset 24
 1901 0004 00AF     		add	r7, sp, #0
 1902              		.cfi_def_cfa_register 7
 1903 0006 7860     		str	r0, [r7, #4]
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxReturn;
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( xQueue );
 1904              		.loc 1 1617 0
 1905 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 67


 1906 000a 002B     		cmp	r3, #0
 1907 000c 01D1     		bne	.L155
 1908              		.loc 1 1617 0 is_stmt 0 discriminator 1
 1909              		.syntax unified
 1910              	@ 1617 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1911 000e 72B6     		 cpsid i 
 1912              	@ 0 "" 2
 1913              		.thumb
 1914              		.syntax unified
 1915              	.L156:
 1916 0010 FEE7     		b	.L156
 1917              	.L155:
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
 1918              		.loc 1 1619 0 is_stmt 1
 1919 0012 7B68     		ldr	r3, [r7, #4]
 1920 0014 9B6B     		ldr	r3, [r3, #56]
 1921 0016 FB60     		str	r3, [r7, #12]
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return uxReturn;
 1922              		.loc 1 1621 0
 1923 0018 FB68     		ldr	r3, [r7, #12]
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
 1924              		.loc 1 1622 0
 1925 001a 1846     		mov	r0, r3
 1926 001c 1437     		adds	r7, r7, #20
 1927              		.cfi_def_cfa_offset 4
 1928 001e BD46     		mov	sp, r7
 1929              		.cfi_def_cfa_register 13
 1930              		@ sp needed
 1931 0020 5DF8047B 		ldr	r7, [sp], #4
 1932              		.cfi_restore 7
 1933              		.cfi_def_cfa_offset 0
 1934 0024 7047     		bx	lr
 1935              		.cfi_endproc
 1936              	.LFE140:
 1937              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 1938 0026 00BF     		.section	.text.vQueueDelete,"ax",%progbits
 1939              		.align	2
 1940              		.global	vQueueDelete
 1941              		.thumb
 1942              		.thumb_func
 1943              		.type	vQueueDelete, %function
 1944              	vQueueDelete:
 1945              	.LFB141:
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 1946              		.loc 1 1626 0
 1947              		.cfi_startproc
 1948              		@ args = 0, pretend = 0, frame = 16
 1949              		@ frame_needed = 1, uses_anonymous_args = 0
 1950 0000 80B5     		push	{r7, lr}
 1951              		.cfi_def_cfa_offset 8
 1952              		.cfi_offset 7, -8
 1953              		.cfi_offset 14, -4
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 68


 1954 0002 84B0     		sub	sp, sp, #16
 1955              		.cfi_def_cfa_offset 24
 1956 0004 00AF     		add	r7, sp, #0
 1957              		.cfi_def_cfa_register 7
 1958 0006 7860     		str	r0, [r7, #4]
1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 1959              		.loc 1 1627 0
 1960 0008 7B68     		ldr	r3, [r7, #4]
 1961 000a FB60     		str	r3, [r7, #12]
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( pxQueue );
 1962              		.loc 1 1629 0
 1963 000c FB68     		ldr	r3, [r7, #12]
 1964 000e 002B     		cmp	r3, #0
 1965 0010 01D1     		bne	.L159
 1966              		.loc 1 1629 0 is_stmt 0 discriminator 1
 1967              		.syntax unified
 1968              	@ 1629 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 1969 0012 72B6     		 cpsid i 
 1970              	@ 0 "" 2
 1971              		.thumb
 1972              		.syntax unified
 1973              	.L160:
 1974 0014 FEE7     		b	.L160
 1975              	.L159:
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
 1976              		.loc 1 1634 0 is_stmt 1
 1977 0016 F868     		ldr	r0, [r7, #12]
 1978 0018 FFF7FEFF 		bl	vQueueUnregisterQueue
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		again. */
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		vPortFree( pxQueue );
 1979              		.loc 1 1642 0
 1980 001c F868     		ldr	r0, [r7, #12]
 1981 001e FFF7FEFF 		bl	vPortFree
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		check before attempting to free the memory. */
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			vPortFree( pxQueue );
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 69


1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#else
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		( void ) pxQueue;
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 1982              		.loc 1 1664 0
 1983 0022 00BF     		nop
 1984 0024 1037     		adds	r7, r7, #16
 1985              		.cfi_def_cfa_offset 8
 1986 0026 BD46     		mov	sp, r7
 1987              		.cfi_def_cfa_register 13
 1988              		@ sp needed
 1989 0028 80BD     		pop	{r7, pc}
 1990              		.cfi_endproc
 1991              	.LFE141:
 1992              		.size	vQueueDelete, .-vQueueDelete
 1993 002a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 1994              		.align	2
 1995              		.thumb
 1996              		.thumb_func
 1997              		.type	prvCopyDataToQueue, %function
 1998              	prvCopyDataToQueue:
 1999              	.LFB142:
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 70


1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 2000              		.loc 1 1698 0
 2001              		.cfi_startproc
 2002              		@ args = 0, pretend = 0, frame = 24
 2003              		@ frame_needed = 1, uses_anonymous_args = 0
 2004 0000 80B5     		push	{r7, lr}
 2005              		.cfi_def_cfa_offset 8
 2006              		.cfi_offset 7, -8
 2007              		.cfi_offset 14, -4
 2008 0002 86B0     		sub	sp, sp, #24
 2009              		.cfi_def_cfa_offset 32
 2010 0004 00AF     		add	r7, sp, #0
 2011              		.cfi_def_cfa_register 7
 2012 0006 F860     		str	r0, [r7, #12]
 2013 0008 B960     		str	r1, [r7, #8]
 2014 000a 7A60     		str	r2, [r7, #4]
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn = pdFALSE;
 2015              		.loc 1 1699 0
 2016 000c 0023     		movs	r3, #0
 2017 000e 3B61     		str	r3, [r7, #16]
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** UBaseType_t uxMessagesWaiting;
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* This function is called from a critical section. */
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 2018              		.loc 1 1704 0
 2019 0010 FB68     		ldr	r3, [r7, #12]
 2020 0012 9B6B     		ldr	r3, [r3, #56]
 2021 0014 7B61     		str	r3, [r7, #20]
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 2022              		.loc 1 1706 0
 2023 0016 FB68     		ldr	r3, [r7, #12]
 2024 0018 1B6C     		ldr	r3, [r3, #64]
 2025 001a 002B     		cmp	r3, #0
 2026 001c 43D0     		beq	.L162
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* The mutex is no longer being held. */
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		#endif /* configUSE_MUTEXES */
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
 2027              		.loc 1 1723 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 71


 2028 001e 7B68     		ldr	r3, [r7, #4]
 2029 0020 002B     		cmp	r3, #0
 2030 0022 19D1     		bne	.L163
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
 2031              		.loc 1 1725 0
 2032 0024 FB68     		ldr	r3, [r7, #12]
 2033 0026 9868     		ldr	r0, [r3, #8]
 2034 0028 FB68     		ldr	r3, [r7, #12]
 2035 002a 1B6C     		ldr	r3, [r3, #64]
 2036 002c 1A46     		mov	r2, r3
 2037 002e B968     		ldr	r1, [r7, #8]
 2038 0030 FFF7FEFF 		bl	memcpy
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 2039              		.loc 1 1726 0
 2040 0034 FB68     		ldr	r3, [r7, #12]
 2041 0036 9A68     		ldr	r2, [r3, #8]
 2042 0038 FB68     		ldr	r3, [r7, #12]
 2043 003a 1B6C     		ldr	r3, [r3, #64]
 2044 003c 1A44     		add	r2, r2, r3
 2045 003e FB68     		ldr	r3, [r7, #12]
 2046 0040 9A60     		str	r2, [r3, #8]
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 2047              		.loc 1 1727 0
 2048 0042 FB68     		ldr	r3, [r7, #12]
 2049 0044 9A68     		ldr	r2, [r3, #8]
 2050 0046 FB68     		ldr	r3, [r7, #12]
 2051 0048 5B68     		ldr	r3, [r3, #4]
 2052 004a 9A42     		cmp	r2, r3
 2053 004c 2BD3     		bcc	.L162
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
 2054              		.loc 1 1729 0
 2055 004e FB68     		ldr	r3, [r7, #12]
 2056 0050 1A68     		ldr	r2, [r3]
 2057 0052 FB68     		ldr	r3, [r7, #12]
 2058 0054 9A60     		str	r2, [r3, #8]
 2059 0056 26E0     		b	.L162
 2060              	.L163:
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	else
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
 2061              		.loc 1 1738 0
 2062 0058 FB68     		ldr	r3, [r7, #12]
 2063 005a D868     		ldr	r0, [r3, #12]
 2064 005c FB68     		ldr	r3, [r7, #12]
 2065 005e 1B6C     		ldr	r3, [r3, #64]
 2066 0060 1A46     		mov	r2, r3
 2067 0062 B968     		ldr	r1, [r7, #8]
 2068 0064 FFF7FEFF 		bl	memcpy
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 72


 2069              		.loc 1 1739 0
 2070 0068 FB68     		ldr	r3, [r7, #12]
 2071 006a DA68     		ldr	r2, [r3, #12]
 2072 006c FB68     		ldr	r3, [r7, #12]
 2073 006e 1B6C     		ldr	r3, [r3, #64]
 2074 0070 5B42     		negs	r3, r3
 2075 0072 1A44     		add	r2, r2, r3
 2076 0074 FB68     		ldr	r3, [r7, #12]
 2077 0076 DA60     		str	r2, [r3, #12]
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 2078              		.loc 1 1740 0
 2079 0078 FB68     		ldr	r3, [r7, #12]
 2080 007a DA68     		ldr	r2, [r3, #12]
 2081 007c FB68     		ldr	r3, [r7, #12]
 2082 007e 1B68     		ldr	r3, [r3]
 2083 0080 9A42     		cmp	r2, r3
 2084 0082 07D2     		bcs	.L164
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
 2085              		.loc 1 1742 0
 2086 0084 FB68     		ldr	r3, [r7, #12]
 2087 0086 5A68     		ldr	r2, [r3, #4]
 2088 0088 FB68     		ldr	r3, [r7, #12]
 2089 008a 1B6C     		ldr	r3, [r3, #64]
 2090 008c 5B42     		negs	r3, r3
 2091 008e 1A44     		add	r2, r2, r3
 2092 0090 FB68     		ldr	r3, [r7, #12]
 2093 0092 DA60     		str	r2, [r3, #12]
 2094              	.L164:
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( xPosition == queueOVERWRITE )
 2095              		.loc 1 1749 0
 2096 0094 7B68     		ldr	r3, [r7, #4]
 2097 0096 022B     		cmp	r3, #2
 2098 0098 05D1     		bne	.L162
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 2099              		.loc 1 1751 0
 2100 009a 7B69     		ldr	r3, [r7, #20]
 2101 009c 002B     		cmp	r3, #0
 2102 009e 02D0     		beq	.L162
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				one from the recorded number of items in the queue so when
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				one is added again below the number of recorded items remains
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				correct. */
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				--uxMessagesWaiting;
 2103              		.loc 1 1757 0
 2104 00a0 7B69     		ldr	r3, [r7, #20]
 2105 00a2 013B     		subs	r3, r3, #1
 2106 00a4 7B61     		str	r3, [r7, #20]
 2107              	.L162:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 73


1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
 2108              		.loc 1 1770 0
 2109 00a6 7B69     		ldr	r3, [r7, #20]
 2110 00a8 5A1C     		adds	r2, r3, #1
 2111 00aa FB68     		ldr	r3, [r7, #12]
 2112 00ac 9A63     		str	r2, [r3, #56]
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 2113              		.loc 1 1772 0
 2114 00ae 3B69     		ldr	r3, [r7, #16]
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 2115              		.loc 1 1773 0
 2116 00b0 1846     		mov	r0, r3
 2117 00b2 1837     		adds	r7, r7, #24
 2118              		.cfi_def_cfa_offset 8
 2119 00b4 BD46     		mov	sp, r7
 2120              		.cfi_def_cfa_register 13
 2121              		@ sp needed
 2122 00b6 80BD     		pop	{r7, pc}
 2123              		.cfi_endproc
 2124              	.LFE142:
 2125              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 2126              		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 2127              		.align	2
 2128              		.thumb
 2129              		.thumb_func
 2130              		.type	prvCopyDataFromQueue, %function
 2131              	prvCopyDataFromQueue:
 2132              	.LFB143:
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 2133              		.loc 1 1777 0
 2134              		.cfi_startproc
 2135              		@ args = 0, pretend = 0, frame = 8
 2136              		@ frame_needed = 1, uses_anonymous_args = 0
 2137 0000 80B5     		push	{r7, lr}
 2138              		.cfi_def_cfa_offset 8
 2139              		.cfi_offset 7, -8
 2140              		.cfi_offset 14, -4
 2141 0002 82B0     		sub	sp, sp, #8
 2142              		.cfi_def_cfa_offset 16
 2143 0004 00AF     		add	r7, sp, #0
 2144              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 74


 2145 0006 7860     		str	r0, [r7, #4]
 2146 0008 3960     		str	r1, [r7]
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 2147              		.loc 1 1778 0
 2148 000a 7B68     		ldr	r3, [r7, #4]
 2149 000c 1B6C     		ldr	r3, [r3, #64]
 2150 000e 002B     		cmp	r3, #0
 2151 0010 18D0     		beq	.L169
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
 2152              		.loc 1 1780 0
 2153 0012 7B68     		ldr	r3, [r7, #4]
 2154 0014 DA68     		ldr	r2, [r3, #12]
 2155 0016 7B68     		ldr	r3, [r7, #4]
 2156 0018 1B6C     		ldr	r3, [r3, #64]
 2157 001a 1A44     		add	r2, r2, r3
 2158 001c 7B68     		ldr	r3, [r7, #4]
 2159 001e DA60     		str	r2, [r3, #12]
1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 2160              		.loc 1 1781 0
 2161 0020 7B68     		ldr	r3, [r7, #4]
 2162 0022 DA68     		ldr	r2, [r3, #12]
 2163 0024 7B68     		ldr	r3, [r7, #4]
 2164 0026 5B68     		ldr	r3, [r3, #4]
 2165 0028 9A42     		cmp	r2, r3
 2166 002a 03D3     		bcc	.L168
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
 2167              		.loc 1 1783 0
 2168 002c 7B68     		ldr	r3, [r7, #4]
 2169 002e 1A68     		ldr	r2, [r3]
 2170 0030 7B68     		ldr	r3, [r7, #4]
 2171 0032 DA60     		str	r2, [r3, #12]
 2172              	.L168:
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
 2173              		.loc 1 1789 0
 2174 0034 7B68     		ldr	r3, [r7, #4]
 2175 0036 D968     		ldr	r1, [r3, #12]
 2176 0038 7B68     		ldr	r3, [r7, #4]
 2177 003a 1B6C     		ldr	r3, [r3, #64]
 2178 003c 1A46     		mov	r2, r3
 2179 003e 3868     		ldr	r0, [r7]
 2180 0040 FFF7FEFF 		bl	memcpy
 2181              	.L169:
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 2182              		.loc 1 1791 0
 2183 0044 00BF     		nop
 2184 0046 0837     		adds	r7, r7, #8
 2185              		.cfi_def_cfa_offset 8
 2186 0048 BD46     		mov	sp, r7
 2187              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 75


 2188              		@ sp needed
 2189 004a 80BD     		pop	{r7, pc}
 2190              		.cfi_endproc
 2191              	.LFE143:
 2192              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 2193              		.section	.text.prvUnlockQueue,"ax",%progbits
 2194              		.align	2
 2195              		.thumb
 2196              		.thumb_func
 2197              		.type	prvUnlockQueue, %function
 2198              	prvUnlockQueue:
 2199              	.LFB144:
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 2200              		.loc 1 1795 0
 2201              		.cfi_startproc
 2202              		@ args = 0, pretend = 0, frame = 16
 2203              		@ frame_needed = 1, uses_anonymous_args = 0
 2204 0000 80B5     		push	{r7, lr}
 2205              		.cfi_def_cfa_offset 8
 2206              		.cfi_offset 7, -8
 2207              		.cfi_offset 14, -4
 2208 0002 84B0     		sub	sp, sp, #16
 2209              		.cfi_def_cfa_offset 24
 2210 0004 00AF     		add	r7, sp, #0
 2211              		.cfi_def_cfa_register 7
 2212 0006 7860     		str	r0, [r7, #4]
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	updated. */
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();
 2213              		.loc 1 1802 0
 2214 0008 FFF7FEFF 		bl	vPortEnterCritical
 2215              	.LBB45:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
 2216              		.loc 1 1804 0
 2217 000c 7B68     		ldr	r3, [r7, #4]
 2218 000e 93F84530 		ldrb	r3, [r3, #69]
 2219 0012 FB73     		strb	r3, [r7, #15]
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
 2220              		.loc 1 1807 0
 2221 0014 11E0     		b	.L171
 2222              	.L175:
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			blocked waiting for data to become available? */
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 76


1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						the queue set caused a higher priority task to unblock.
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						A context switch is required. */
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						vTaskMissedYield();
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* Tasks that are removed from the event list will get
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					added to the pending ready list as the scheduler is still
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					suspended. */
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							context	switch is required. */
1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							vTaskMissedYield();
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						else
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						{
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						}
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						break;
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 2223              		.loc 1 1855 0
 2224 0016 7B68     		ldr	r3, [r7, #4]
 2225 0018 5B6A     		ldr	r3, [r3, #36]
 2226 001a 002B     		cmp	r3, #0
 2227 001c 12D0     		beq	.L181
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 2228              		.loc 1 1857 0
 2229 001e 7B68     		ldr	r3, [r7, #4]
 2230 0020 2433     		adds	r3, r3, #36
 2231 0022 1846     		mov	r0, r3
 2232 0024 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2233 0028 0346     		mov	r3, r0
 2234 002a 002B     		cmp	r3, #0
 2235 002c 01D0     		beq	.L173
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 77


1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						/* The task waiting has a higher priority so record that
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						a context switch is required. */
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						vTaskMissedYield();
 2236              		.loc 1 1861 0
 2237 002e FFF7FEFF 		bl	vTaskMissedYield
 2238              	.L173:
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					break;
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			--cTxLock;
 2239              		.loc 1 1875 0
 2240 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2241 0034 013B     		subs	r3, r3, #1
 2242 0036 DBB2     		uxtb	r3, r3
 2243 0038 FB73     		strb	r3, [r7, #15]
 2244              	.L171:
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2245              		.loc 1 1807 0
 2246 003a 97F90F30 		ldrsb	r3, [r7, #15]
 2247 003e 002B     		cmp	r3, #0
 2248 0040 E9DC     		bgt	.L175
 2249 0042 00E0     		b	.L174
 2250              	.L181:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
 2251              		.loc 1 1870 0
 2252 0044 00BF     		nop
 2253              	.L174:
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 2254              		.loc 1 1878 0
 2255 0046 7B68     		ldr	r3, [r7, #4]
 2256 0048 FF22     		movs	r2, #255
 2257 004a 83F84520 		strb	r2, [r3, #69]
 2258              	.LBE45:
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL();
 2259              		.loc 1 1880 0
 2260 004e FFF7FEFF 		bl	vPortExitCritical
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	/* Do the same for the Rx lock. */
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();
 2261              		.loc 1 1883 0
 2262 0052 FFF7FEFF 		bl	vPortEnterCritical
 2263              	.LBB46:
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 78


1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
 2264              		.loc 1 1885 0
 2265 0056 7B68     		ldr	r3, [r7, #4]
 2266 0058 93F84430 		ldrb	r3, [r3, #68]
 2267 005c BB73     		strb	r3, [r7, #14]
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
 2268              		.loc 1 1887 0
 2269 005e 11E0     		b	.L176
 2270              	.L180:
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 2271              		.loc 1 1889 0
 2272 0060 7B68     		ldr	r3, [r7, #4]
 2273 0062 1B69     		ldr	r3, [r3, #16]
 2274 0064 002B     		cmp	r3, #0
 2275 0066 12D0     		beq	.L182
1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 2276              		.loc 1 1891 0
 2277 0068 7B68     		ldr	r3, [r7, #4]
 2278 006a 1033     		adds	r3, r3, #16
 2279 006c 1846     		mov	r0, r3
 2280 006e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2281 0072 0346     		mov	r3, r0
 2282 0074 002B     		cmp	r3, #0
 2283 0076 01D0     		beq	.L178
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					vTaskMissedYield();
 2284              		.loc 1 1893 0
 2285 0078 FFF7FEFF 		bl	vTaskMissedYield
 2286              	.L178:
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				--cRxLock;
 2287              		.loc 1 1900 0
 2288 007c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 2289 007e 013B     		subs	r3, r3, #1
 2290 0080 DBB2     		uxtb	r3, r3
 2291 0082 BB73     		strb	r3, [r7, #14]
 2292              	.L176:
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2293              		.loc 1 1887 0
 2294 0084 97F90E30 		ldrsb	r3, [r7, #14]
 2295 0088 002B     		cmp	r3, #0
 2296 008a E9DC     		bgt	.L180
 2297 008c 00E0     		b	.L179
 2298              	.L182:
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				break;
 2299              		.loc 1 1904 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 79


 2300 008e 00BF     		nop
 2301              	.L179:
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 2302              		.loc 1 1908 0
 2303 0090 7B68     		ldr	r3, [r7, #4]
 2304 0092 FF22     		movs	r2, #255
 2305 0094 83F84420 		strb	r2, [r3, #68]
 2306              	.LBE46:
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL();
 2307              		.loc 1 1910 0
 2308 0098 FFF7FEFF 		bl	vPortExitCritical
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 2309              		.loc 1 1911 0
 2310 009c 00BF     		nop
 2311 009e 1037     		adds	r7, r7, #16
 2312              		.cfi_def_cfa_offset 8
 2313 00a0 BD46     		mov	sp, r7
 2314              		.cfi_def_cfa_register 13
 2315              		@ sp needed
 2316 00a2 80BD     		pop	{r7, pc}
 2317              		.cfi_endproc
 2318              	.LFE144:
 2319              		.size	prvUnlockQueue, .-prvUnlockQueue
 2320              		.section	.text.prvIsQueueEmpty,"ax",%progbits
 2321              		.align	2
 2322              		.thumb
 2323              		.thumb_func
 2324              		.type	prvIsQueueEmpty, %function
 2325              	prvIsQueueEmpty:
 2326              	.LFB145:
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 2327              		.loc 1 1915 0
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 16
 2330              		@ frame_needed = 1, uses_anonymous_args = 0
 2331 0000 80B5     		push	{r7, lr}
 2332              		.cfi_def_cfa_offset 8
 2333              		.cfi_offset 7, -8
 2334              		.cfi_offset 14, -4
 2335 0002 84B0     		sub	sp, sp, #16
 2336              		.cfi_def_cfa_offset 24
 2337 0004 00AF     		add	r7, sp, #0
 2338              		.cfi_def_cfa_register 7
 2339 0006 7860     		str	r0, [r7, #4]
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();
 2340              		.loc 1 1918 0
 2341 0008 FFF7FEFF 		bl	vPortEnterCritical
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 80


1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 2342              		.loc 1 1920 0
 2343 000c 7B68     		ldr	r3, [r7, #4]
 2344 000e 9B6B     		ldr	r3, [r3, #56]
 2345 0010 002B     		cmp	r3, #0
 2346 0012 02D1     		bne	.L184
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdTRUE;
 2347              		.loc 1 1922 0
 2348 0014 0123     		movs	r3, #1
 2349 0016 FB60     		str	r3, [r7, #12]
 2350 0018 01E0     		b	.L185
 2351              	.L184:
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdFALSE;
 2352              		.loc 1 1926 0
 2353 001a 0023     		movs	r3, #0
 2354 001c FB60     		str	r3, [r7, #12]
 2355              	.L185:
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL();
 2356              		.loc 1 1929 0
 2357 001e FFF7FEFF 		bl	vPortExitCritical
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 2358              		.loc 1 1931 0
 2359 0022 FB68     		ldr	r3, [r7, #12]
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 2360              		.loc 1 1932 0
 2361 0024 1846     		mov	r0, r3
 2362 0026 1037     		adds	r7, r7, #16
 2363              		.cfi_def_cfa_offset 8
 2364 0028 BD46     		mov	sp, r7
 2365              		.cfi_def_cfa_register 13
 2366              		@ sp needed
 2367 002a 80BD     		pop	{r7, pc}
 2368              		.cfi_endproc
 2369              	.LFE145:
 2370              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 2371              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2372              		.align	2
 2373              		.global	xQueueIsQueueEmptyFromISR
 2374              		.thumb
 2375              		.thumb_func
 2376              		.type	xQueueIsQueueEmptyFromISR, %function
 2377              	xQueueIsQueueEmptyFromISR:
 2378              	.LFB146:
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 2379              		.loc 1 1936 0
 2380              		.cfi_startproc
 2381              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 81


 2382              		@ frame_needed = 1, uses_anonymous_args = 0
 2383              		@ link register save eliminated.
 2384 0000 80B4     		push	{r7}
 2385              		.cfi_def_cfa_offset 4
 2386              		.cfi_offset 7, -4
 2387 0002 85B0     		sub	sp, sp, #20
 2388              		.cfi_def_cfa_offset 24
 2389 0004 00AF     		add	r7, sp, #0
 2390              		.cfi_def_cfa_register 7
 2391 0006 7860     		str	r0, [r7, #4]
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( xQueue );
 2392              		.loc 1 1939 0
 2393 0008 7B68     		ldr	r3, [r7, #4]
 2394 000a 002B     		cmp	r3, #0
 2395 000c 01D1     		bne	.L188
 2396              		.loc 1 1939 0 is_stmt 0 discriminator 1
 2397              		.syntax unified
 2398              	@ 1939 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 2399 000e 72B6     		 cpsid i 
 2400              	@ 0 "" 2
 2401              		.thumb
 2402              		.syntax unified
 2403              	.L189:
 2404 0010 FEE7     		b	.L189
 2405              	.L188:
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 2406              		.loc 1 1940 0 is_stmt 1
 2407 0012 7B68     		ldr	r3, [r7, #4]
 2408 0014 9B6B     		ldr	r3, [r3, #56]
 2409 0016 002B     		cmp	r3, #0
 2410 0018 02D1     		bne	.L190
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		xReturn = pdTRUE;
 2411              		.loc 1 1942 0
 2412 001a 0123     		movs	r3, #1
 2413 001c FB60     		str	r3, [r7, #12]
 2414 001e 01E0     		b	.L191
 2415              	.L190:
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	else
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		xReturn = pdFALSE;
 2416              		.loc 1 1946 0
 2417 0020 0023     		movs	r3, #0
 2418 0022 FB60     		str	r3, [r7, #12]
 2419              	.L191:
1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 2420              		.loc 1 1949 0
 2421 0024 FB68     		ldr	r3, [r7, #12]
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2422              		.loc 1 1950 0
 2423 0026 1846     		mov	r0, r3
 2424 0028 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 82


 2425              		.cfi_def_cfa_offset 4
 2426 002a BD46     		mov	sp, r7
 2427              		.cfi_def_cfa_register 13
 2428              		@ sp needed
 2429 002c 5DF8047B 		ldr	r7, [sp], #4
 2430              		.cfi_restore 7
 2431              		.cfi_def_cfa_offset 0
 2432 0030 7047     		bx	lr
 2433              		.cfi_endproc
 2434              	.LFE146:
 2435              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2436 0032 00BF     		.section	.text.prvIsQueueFull,"ax",%progbits
 2437              		.align	2
 2438              		.thumb
 2439              		.thumb_func
 2440              		.type	prvIsQueueFull, %function
 2441              	prvIsQueueFull:
 2442              	.LFB147:
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 2443              		.loc 1 1954 0
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 16
 2446              		@ frame_needed = 1, uses_anonymous_args = 0
 2447 0000 80B5     		push	{r7, lr}
 2448              		.cfi_def_cfa_offset 8
 2449              		.cfi_offset 7, -8
 2450              		.cfi_offset 14, -4
 2451 0002 84B0     		sub	sp, sp, #16
 2452              		.cfi_def_cfa_offset 24
 2453 0004 00AF     		add	r7, sp, #0
 2454              		.cfi_def_cfa_register 7
 2455 0006 7860     		str	r0, [r7, #4]
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskENTER_CRITICAL();
 2456              		.loc 1 1957 0
 2457 0008 FFF7FEFF 		bl	vPortEnterCritical
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 2458              		.loc 1 1959 0
 2459 000c 7B68     		ldr	r3, [r7, #4]
 2460 000e 9A6B     		ldr	r2, [r3, #56]
 2461 0010 7B68     		ldr	r3, [r7, #4]
 2462 0012 DB6B     		ldr	r3, [r3, #60]
 2463 0014 9A42     		cmp	r2, r3
 2464 0016 02D1     		bne	.L194
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdTRUE;
 2465              		.loc 1 1961 0
 2466 0018 0123     		movs	r3, #1
 2467 001a FB60     		str	r3, [r7, #12]
 2468 001c 01E0     		b	.L195
 2469              	.L194:
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 83


1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdFALSE;
 2470              		.loc 1 1965 0
 2471 001e 0023     		movs	r3, #0
 2472 0020 FB60     		str	r3, [r7, #12]
 2473              	.L195:
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	taskEXIT_CRITICAL();
 2474              		.loc 1 1968 0
 2475 0022 FFF7FEFF 		bl	vPortExitCritical
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 2476              		.loc 1 1970 0
 2477 0026 FB68     		ldr	r3, [r7, #12]
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** }
 2478              		.loc 1 1971 0
 2479 0028 1846     		mov	r0, r3
 2480 002a 1037     		adds	r7, r7, #16
 2481              		.cfi_def_cfa_offset 8
 2482 002c BD46     		mov	sp, r7
 2483              		.cfi_def_cfa_register 13
 2484              		@ sp needed
 2485 002e 80BD     		pop	{r7, pc}
 2486              		.cfi_endproc
 2487              	.LFE147:
 2488              		.size	prvIsQueueFull, .-prvIsQueueFull
 2489              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2490              		.align	2
 2491              		.global	xQueueIsQueueFullFromISR
 2492              		.thumb
 2493              		.thumb_func
 2494              		.type	xQueueIsQueueFullFromISR, %function
 2495              	xQueueIsQueueFullFromISR:
 2496              	.LFB148:
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** {
 2497              		.loc 1 1975 0
 2498              		.cfi_startproc
 2499              		@ args = 0, pretend = 0, frame = 16
 2500              		@ frame_needed = 1, uses_anonymous_args = 0
 2501              		@ link register save eliminated.
 2502 0000 80B4     		push	{r7}
 2503              		.cfi_def_cfa_offset 4
 2504              		.cfi_offset 7, -4
 2505 0002 85B0     		sub	sp, sp, #20
 2506              		.cfi_def_cfa_offset 24
 2507 0004 00AF     		add	r7, sp, #0
 2508              		.cfi_def_cfa_register 7
 2509 0006 7860     		str	r0, [r7, #4]
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** BaseType_t xReturn;
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	configASSERT( xQueue );
 2510              		.loc 1 1978 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 84


 2511 0008 7B68     		ldr	r3, [r7, #4]
 2512 000a 002B     		cmp	r3, #0
 2513 000c 01D1     		bne	.L198
 2514              		.loc 1 1978 0 is_stmt 0 discriminator 1
 2515              		.syntax unified
 2516              	@ 1978 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\queue.c" 1
 2517 000e 72B6     		 cpsid i 
 2518              	@ 0 "" 2
 2519              		.thumb
 2520              		.syntax unified
 2521              	.L199:
 2522 0010 FEE7     		b	.L199
 2523              	.L198:
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2524              		.loc 1 1979 0 is_stmt 1
 2525 0012 7B68     		ldr	r3, [r7, #4]
 2526 0014 9A6B     		ldr	r2, [r3, #56]
 2527 0016 7B68     		ldr	r3, [r7, #4]
 2528 0018 DB6B     		ldr	r3, [r3, #60]
 2529 001a 9A42     		cmp	r2, r3
 2530 001c 02D1     		bne	.L200
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		xReturn = pdTRUE;
 2531              		.loc 1 1981 0
 2532 001e 0123     		movs	r3, #1
 2533 0020 FB60     		str	r3, [r7, #12]
 2534 0022 01E0     		b	.L201
 2535              	.L200:
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	else
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		xReturn = pdFALSE;
 2536              		.loc 1 1985 0
 2537 0024 0023     		movs	r3, #0
 2538 0026 FB60     		str	r3, [r7, #12]
 2539              	.L201:
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	return xReturn;
 2540              		.loc 1 1988 0
 2541 0028 FB68     		ldr	r3, [r7, #12]
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2542              		.loc 1 1989 0
 2543 002a 1846     		mov	r0, r3
 2544 002c 1437     		adds	r7, r7, #20
 2545              		.cfi_def_cfa_offset 4
 2546 002e BD46     		mov	sp, r7
 2547              		.cfi_def_cfa_register 13
 2548              		@ sp needed
 2549 0030 5DF8047B 		ldr	r7, [sp], #4
 2550              		.cfi_restore 7
 2551              		.cfi_def_cfa_offset 0
 2552 0034 7047     		bx	lr
 2553              		.cfi_endproc
 2554              	.LFE148:
 2555              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2556 0036 00BF     		.section	.text.vQueueAddToRegistry,"ax",%progbits
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 85


 2557              		.align	2
 2558              		.global	vQueueAddToRegistry
 2559              		.thumb
 2560              		.thumb_func
 2561              		.type	vQueueAddToRegistry, %function
 2562              	vQueueAddToRegistry:
 2563              	.LFB149:
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xReturn;
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				posting? */
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					return indicating that we need to block. */
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					portENABLE_INTERRUPTS();
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					return errQUEUE_BLOCKED;
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					portENABLE_INTERRUPTS();
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					return errQUEUE_FULL;
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portENABLE_INTERRUPTS();
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xReturn = pdPASS;
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					into the ready list as we are within a critical section.
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					the event were caused from within an interrupt. */
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 86


2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						that a yield might be appropriate. */
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xReturn = errQUEUE_FULL;
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portENABLE_INTERRUPTS();
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xReturn;
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xReturn;
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				leave with nothing? */
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					indicating that we need to block. */
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					portENABLE_INTERRUPTS();
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					return errQUEUE_BLOCKED;
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					portENABLE_INTERRUPTS();
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					return errQUEUE_FULL;
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 87


2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portENABLE_INTERRUPTS();
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portDISABLE_INTERRUPTS();
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Data is available from the queue. */
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xReturn = pdPASS;
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					into the ready list as we are within a critical section.
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					the event were caused from within an interrupt. */
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xReturn = pdFAIL;
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		portENABLE_INTERRUPTS();
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xReturn;
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 88


2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		exit without doing anything. */
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			co-routine has not already been woken. */
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						return pdTRUE;
2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 89


2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	BaseType_t xReturn;
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		not then just leave without doing anything. */
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* Copy the data from the queue. */
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					else
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					{
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					}
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				else
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				{
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				}
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdPASS;
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			xReturn = pdFAIL;
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return xReturn;
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 90


2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 2564              		.loc 1 2270 0
 2565              		.cfi_startproc
 2566              		@ args = 0, pretend = 0, frame = 16
 2567              		@ frame_needed = 1, uses_anonymous_args = 0
 2568              		@ link register save eliminated.
 2569 0000 80B4     		push	{r7}
 2570              		.cfi_def_cfa_offset 4
 2571              		.cfi_offset 7, -4
 2572 0002 85B0     		sub	sp, sp, #20
 2573              		.cfi_def_cfa_offset 24
 2574 0004 00AF     		add	r7, sp, #0
 2575              		.cfi_def_cfa_register 7
 2576 0006 7860     		str	r0, [r7, #4]
 2577 0008 3960     		str	r1, [r7]
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	UBaseType_t ux;
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		a free slot. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2578              		.loc 1 2275 0
 2579 000a 0023     		movs	r3, #0
 2580 000c FB60     		str	r3, [r7, #12]
 2581 000e 14E0     		b	.L204
 2582              	.L207:
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2583              		.loc 1 2277 0
 2584 0010 0E4A     		ldr	r2, .L208
 2585 0012 FB68     		ldr	r3, [r7, #12]
 2586 0014 52F83330 		ldr	r3, [r2, r3, lsl #3]
 2587 0018 002B     		cmp	r3, #0
 2588 001a 0BD1     		bne	.L205
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Store the information on this queue. */
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2589              		.loc 1 2280 0
 2590 001c 0B49     		ldr	r1, .L208
 2591 001e FB68     		ldr	r3, [r7, #12]
 2592 0020 3A68     		ldr	r2, [r7]
 2593 0022 41F83320 		str	r2, [r1, r3, lsl #3]
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2594              		.loc 1 2281 0
 2595 0026 094A     		ldr	r2, .L208
 2596 0028 FB68     		ldr	r3, [r7, #12]
 2597 002a DB00     		lsls	r3, r3, #3
 2598 002c 1344     		add	r3, r3, r2
 2599 002e 7A68     		ldr	r2, [r7, #4]
 2600 0030 5A60     		str	r2, [r3, #4]
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				break;
 2601              		.loc 1 2284 0
 2602 0032 05E0     		b	.L206
 2603              	.L205:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 91


2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2604              		.loc 1 2275 0 discriminator 2
 2605 0034 FB68     		ldr	r3, [r7, #12]
 2606 0036 0133     		adds	r3, r3, #1
 2607 0038 FB60     		str	r3, [r7, #12]
 2608              	.L204:
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2609              		.loc 1 2275 0 is_stmt 0 discriminator 1
 2610 003a FB68     		ldr	r3, [r7, #12]
 2611 003c 092B     		cmp	r3, #9
 2612 003e E7D9     		bls	.L207
 2613              	.L206:
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 2614              		.loc 1 2291 0 is_stmt 1
 2615 0040 00BF     		nop
 2616 0042 1437     		adds	r7, r7, #20
 2617              		.cfi_def_cfa_offset 4
 2618 0044 BD46     		mov	sp, r7
 2619              		.cfi_def_cfa_register 13
 2620              		@ sp needed
 2621 0046 5DF8047B 		ldr	r7, [sp], #4
 2622              		.cfi_restore 7
 2623              		.cfi_def_cfa_offset 0
 2624 004a 7047     		bx	lr
 2625              	.L209:
 2626              		.align	2
 2627              	.L208:
 2628 004c 00000000 		.word	xQueueRegistry
 2629              		.cfi_endproc
 2630              	.LFE149:
 2631              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 2632              		.section	.text.pcQueueGetName,"ax",%progbits
 2633              		.align	2
 2634              		.global	pcQueueGetName
 2635              		.thumb
 2636              		.thumb_func
 2637              		.type	pcQueueGetName, %function
 2638              	pcQueueGetName:
 2639              	.LFB150:
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 2640              		.loc 1 2299 0
 2641              		.cfi_startproc
 2642              		@ args = 0, pretend = 0, frame = 16
 2643              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 92


 2644              		@ link register save eliminated.
 2645 0000 80B4     		push	{r7}
 2646              		.cfi_def_cfa_offset 4
 2647              		.cfi_offset 7, -4
 2648 0002 85B0     		sub	sp, sp, #20
 2649              		.cfi_def_cfa_offset 24
 2650 0004 00AF     		add	r7, sp, #0
 2651              		.cfi_def_cfa_register 7
 2652 0006 7860     		str	r0, [r7, #4]
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	UBaseType_t ux;
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
 2653              		.loc 1 2301 0
 2654 0008 0023     		movs	r3, #0
 2655 000a BB60     		str	r3, [r7, #8]
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		removing entries from the registry while it is being searched. */
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2656              		.loc 1 2305 0
 2657 000c 0023     		movs	r3, #0
 2658 000e FB60     		str	r3, [r7, #12]
 2659 0010 10E0     		b	.L211
 2660              	.L214:
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2661              		.loc 1 2307 0
 2662 0012 0D4A     		ldr	r2, .L216
 2663 0014 FB68     		ldr	r3, [r7, #12]
 2664 0016 DB00     		lsls	r3, r3, #3
 2665 0018 1344     		add	r3, r3, r2
 2666 001a 5A68     		ldr	r2, [r3, #4]
 2667 001c 7B68     		ldr	r3, [r7, #4]
 2668 001e 9A42     		cmp	r2, r3
 2669 0020 05D1     		bne	.L212
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2670              		.loc 1 2309 0
 2671 0022 094A     		ldr	r2, .L216
 2672 0024 FB68     		ldr	r3, [r7, #12]
 2673 0026 52F83330 		ldr	r3, [r2, r3, lsl #3]
 2674 002a BB60     		str	r3, [r7, #8]
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				break;
 2675              		.loc 1 2310 0
 2676 002c 05E0     		b	.L213
 2677              	.L212:
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2678              		.loc 1 2305 0 discriminator 2
 2679 002e FB68     		ldr	r3, [r7, #12]
 2680 0030 0133     		adds	r3, r3, #1
 2681 0032 FB60     		str	r3, [r7, #12]
 2682              	.L211:
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2683              		.loc 1 2305 0 is_stmt 0 discriminator 1
 2684 0034 FB68     		ldr	r3, [r7, #12]
 2685 0036 092B     		cmp	r3, #9
 2686 0038 EBD9     		bls	.L214
 2687              	.L213:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 93


2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		return pcReturn;
 2688              		.loc 1 2318 0 is_stmt 1
 2689 003a BB68     		ldr	r3, [r7, #8]
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 2690              		.loc 1 2319 0
 2691 003c 1846     		mov	r0, r3
 2692 003e 1437     		adds	r7, r7, #20
 2693              		.cfi_def_cfa_offset 4
 2694 0040 BD46     		mov	sp, r7
 2695              		.cfi_def_cfa_register 13
 2696              		@ sp needed
 2697 0042 5DF8047B 		ldr	r7, [sp], #4
 2698              		.cfi_restore 7
 2699              		.cfi_def_cfa_offset 0
 2700 0046 7047     		bx	lr
 2701              	.L217:
 2702              		.align	2
 2703              	.L216:
 2704 0048 00000000 		.word	xQueueRegistry
 2705              		.cfi_endproc
 2706              	.LFE150:
 2707              		.size	pcQueueGetName, .-pcQueueGetName
 2708              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2709              		.align	2
 2710              		.global	vQueueUnregisterQueue
 2711              		.thumb
 2712              		.thumb_func
 2713              		.type	vQueueUnregisterQueue, %function
 2714              	vQueueUnregisterQueue:
 2715              	.LFB151:
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 2716              		.loc 1 2327 0
 2717              		.cfi_startproc
 2718              		@ args = 0, pretend = 0, frame = 16
 2719              		@ frame_needed = 1, uses_anonymous_args = 0
 2720              		@ link register save eliminated.
 2721 0000 80B4     		push	{r7}
 2722              		.cfi_def_cfa_offset 4
 2723              		.cfi_offset 7, -4
 2724 0002 85B0     		sub	sp, sp, #20
 2725              		.cfi_def_cfa_offset 24
 2726 0004 00AF     		add	r7, sp, #0
 2727              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 94


 2728 0006 7860     		str	r0, [r7, #4]
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	UBaseType_t ux;
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		registry. */
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2729              		.loc 1 2332 0
 2730 0008 0023     		movs	r3, #0
 2731 000a FB60     		str	r3, [r7, #12]
 2732 000c 16E0     		b	.L219
 2733              	.L222:
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2734              		.loc 1 2334 0
 2735 000e 104A     		ldr	r2, .L223
 2736 0010 FB68     		ldr	r3, [r7, #12]
 2737 0012 DB00     		lsls	r3, r3, #3
 2738 0014 1344     		add	r3, r3, r2
 2739 0016 5A68     		ldr	r2, [r3, #4]
 2740 0018 7B68     		ldr	r3, [r7, #4]
 2741 001a 9A42     		cmp	r2, r3
 2742 001c 0BD1     		bne	.L220
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2743              		.loc 1 2337 0
 2744 001e 0C4A     		ldr	r2, .L223
 2745 0020 FB68     		ldr	r3, [r7, #12]
 2746 0022 0021     		movs	r1, #0
 2747 0024 42F83310 		str	r1, [r2, r3, lsl #3]
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				added again. */
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2748              		.loc 1 2342 0
 2749 0028 094A     		ldr	r2, .L223
 2750 002a FB68     		ldr	r3, [r7, #12]
 2751 002c DB00     		lsls	r3, r3, #3
 2752 002e 1344     		add	r3, r3, r2
 2753 0030 0022     		movs	r2, #0
 2754 0032 5A60     		str	r2, [r3, #4]
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				break;
 2755              		.loc 1 2343 0
 2756 0034 05E0     		b	.L221
 2757              	.L220:
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2758              		.loc 1 2332 0 discriminator 2
 2759 0036 FB68     		ldr	r3, [r7, #12]
 2760 0038 0133     		adds	r3, r3, #1
 2761 003a FB60     		str	r3, [r7, #12]
 2762              	.L219:
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
 2763              		.loc 1 2332 0 is_stmt 0 discriminator 1
 2764 003c FB68     		ldr	r3, [r7, #12]
 2765 003e 092B     		cmp	r3, #9
 2766 0040 E5D9     		bls	.L222
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 95


 2767              	.L221:
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			else
2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			{
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			}
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2768              		.loc 1 2351 0 is_stmt 1
 2769 0042 00BF     		nop
 2770 0044 1437     		adds	r7, r7, #20
 2771              		.cfi_def_cfa_offset 4
 2772 0046 BD46     		mov	sp, r7
 2773              		.cfi_def_cfa_register 13
 2774              		@ sp needed
 2775 0048 5DF8047B 		ldr	r7, [sp], #4
 2776              		.cfi_restore 7
 2777              		.cfi_def_cfa_offset 0
 2778 004c 7047     		bx	lr
 2779              	.L224:
 2780 004e 00BF     		.align	2
 2781              	.L223:
 2782 0050 00000000 		.word	xQueueRegistry
 2783              		.cfi_endproc
 2784              	.LFE151:
 2785              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2786              		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 2787              		.align	2
 2788              		.global	vQueueWaitForMessageRestricted
 2789              		.thumb
 2790              		.thumb_func
 2791              		.type	vQueueWaitForMessageRestricted, %function
 2792              	vQueueWaitForMessageRestricted:
 2793              	.LFB152:
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** /*-----------------------------------------------------------*/
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	{
 2794              		.loc 1 2359 0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 24
 2797              		@ frame_needed = 1, uses_anonymous_args = 0
 2798 0000 80B5     		push	{r7, lr}
 2799              		.cfi_def_cfa_offset 8
 2800              		.cfi_offset 7, -8
 2801              		.cfi_offset 14, -4
 2802 0002 86B0     		sub	sp, sp, #24
 2803              		.cfi_def_cfa_offset 32
 2804 0004 00AF     		add	r7, sp, #0
 2805              		.cfi_def_cfa_register 7
 2806 0006 F860     		str	r0, [r7, #12]
 2807 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 96


 2808 000a 7A60     		str	r2, [r7, #4]
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2809              		.loc 1 2360 0
 2810 000c FB68     		ldr	r3, [r7, #12]
 2811 000e 7B61     		str	r3, [r7, #20]
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* This function should not be called by application code hence the
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		section. */
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		prvLockQueue( pxQueue );
 2812              		.loc 1 2376 0
 2813 0010 FFF7FEFF 		bl	vPortEnterCritical
 2814 0014 7B69     		ldr	r3, [r7, #20]
 2815 0016 93F84430 		ldrb	r3, [r3, #68]
 2816 001a 5BB2     		sxtb	r3, r3
 2817 001c B3F1FF3F 		cmp	r3, #-1
 2818 0020 03D1     		bne	.L226
 2819              		.loc 1 2376 0 is_stmt 0 discriminator 1
 2820 0022 7B69     		ldr	r3, [r7, #20]
 2821 0024 0022     		movs	r2, #0
 2822 0026 83F84420 		strb	r2, [r3, #68]
 2823              	.L226:
 2824              		.loc 1 2376 0 discriminator 3
 2825 002a 7B69     		ldr	r3, [r7, #20]
 2826 002c 93F84530 		ldrb	r3, [r3, #69]
 2827 0030 5BB2     		sxtb	r3, r3
 2828 0032 B3F1FF3F 		cmp	r3, #-1
 2829 0036 03D1     		bne	.L227
 2830              		.loc 1 2376 0 discriminator 4
 2831 0038 7B69     		ldr	r3, [r7, #20]
 2832 003a 0022     		movs	r2, #0
 2833 003c 83F84520 		strb	r2, [r3, #69]
 2834              	.L227:
 2835              		.loc 1 2376 0 discriminator 6
 2836 0040 FFF7FEFF 		bl	vPortExitCritical
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 2837              		.loc 1 2377 0 is_stmt 1 discriminator 6
 2838 0044 7B69     		ldr	r3, [r7, #20]
 2839 0046 9B6B     		ldr	r3, [r3, #56]
 2840 0048 002B     		cmp	r3, #0
 2841 004a 06D1     		bne	.L228
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
 2842              		.loc 1 2380 0
 2843 004c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 97


 2844 004e 2433     		adds	r3, r3, #36
 2845 0050 7A68     		ldr	r2, [r7, #4]
 2846 0052 B968     		ldr	r1, [r7, #8]
 2847 0054 1846     		mov	r0, r3
 2848 0056 FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 2849              	.L228:
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		else
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		{
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		}
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 		prvUnlockQueue( pxQueue );
 2850              		.loc 1 2386 0
 2851 005a 7869     		ldr	r0, [r7, #20]
 2852 005c FFF7FEFF 		bl	prvUnlockQueue
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/queue.c **** 	}
 2853              		.loc 1 2387 0
 2854 0060 00BF     		nop
 2855 0062 1837     		adds	r7, r7, #24
 2856              		.cfi_def_cfa_offset 8
 2857 0064 BD46     		mov	sp, r7
 2858              		.cfi_def_cfa_register 13
 2859              		@ sp needed
 2860 0066 80BD     		pop	{r7, pc}
 2861              		.cfi_endproc
 2862              	.LFE152:
 2863              		.size	vQueueWaitForMessageRestricted, .-vQueueWaitForMessageRestricted
 2864              		.text
 2865              	.Letext0:
 2866              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2867              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2868              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2869              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/list.h"
 2870              		.file 7 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 2871              		.file 8 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/queue.h"
 2872              		.file 9 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 2873              		.section	.debug_info,"",%progbits
 2874              	.Ldebug_info0:
 2875 0000 B60D0000 		.4byte	0xdb6
 2876 0004 0400     		.2byte	0x4
 2877 0006 00000000 		.4byte	.Ldebug_abbrev0
 2878 000a 04       		.byte	0x4
 2879 000b 01       		.uleb128 0x1
 2880 000c 04070000 		.4byte	.LASF117
 2881 0010 0C       		.byte	0xc
 2882 0011 42040000 		.4byte	.LASF118
 2883 0015 4D030000 		.4byte	.LASF119
 2884 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2885 001d 00000000 		.4byte	0
 2886 0021 00000000 		.4byte	.Ldebug_line0
 2887 0025 02       		.uleb128 0x2
 2888 0026 4E000000 		.4byte	.LASF3
 2889 002a 03       		.byte	0x3
 2890 002b D8       		.byte	0xd8
 2891 002c 30000000 		.4byte	0x30
 2892 0030 03       		.uleb128 0x3
 2893 0031 04       		.byte	0x4
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 98


 2894 0032 07       		.byte	0x7
 2895 0033 D7040000 		.4byte	.LASF0
 2896 0037 04       		.uleb128 0x4
 2897 0038 04       		.byte	0x4
 2898 0039 05       		.byte	0x5
 2899 003a 696E7400 		.ascii	"int\000"
 2900 003e 03       		.uleb128 0x3
 2901 003f 08       		.byte	0x8
 2902 0040 05       		.byte	0x5
 2903 0041 96010000 		.4byte	.LASF1
 2904 0045 03       		.uleb128 0x3
 2905 0046 08       		.byte	0x8
 2906 0047 04       		.byte	0x4
 2907 0048 AA050000 		.4byte	.LASF2
 2908 004c 02       		.uleb128 0x2
 2909 004d 51010000 		.4byte	.LASF4
 2910 0051 04       		.byte	0x4
 2911 0052 1B       		.byte	0x1b
 2912 0053 57000000 		.4byte	0x57
 2913 0057 03       		.uleb128 0x3
 2914 0058 01       		.byte	0x1
 2915 0059 06       		.byte	0x6
 2916 005a A4010000 		.4byte	.LASF5
 2917 005e 02       		.uleb128 0x2
 2918 005f 97050000 		.4byte	.LASF6
 2919 0063 04       		.byte	0x4
 2920 0064 1D       		.byte	0x1d
 2921 0065 69000000 		.4byte	0x69
 2922 0069 03       		.uleb128 0x3
 2923 006a 01       		.byte	0x1
 2924 006b 08       		.byte	0x8
 2925 006c C9040000 		.4byte	.LASF7
 2926 0070 03       		.uleb128 0x3
 2927 0071 02       		.byte	0x2
 2928 0072 05       		.byte	0x5
 2929 0073 F9040000 		.4byte	.LASF8
 2930 0077 03       		.uleb128 0x3
 2931 0078 02       		.byte	0x2
 2932 0079 07       		.byte	0x7
 2933 007a FE020000 		.4byte	.LASF9
 2934 007e 02       		.uleb128 0x2
 2935 007f 18060000 		.4byte	.LASF10
 2936 0083 04       		.byte	0x4
 2937 0084 3F       		.byte	0x3f
 2938 0085 89000000 		.4byte	0x89
 2939 0089 03       		.uleb128 0x3
 2940 008a 04       		.byte	0x4
 2941 008b 05       		.byte	0x5
 2942 008c D3000000 		.4byte	.LASF11
 2943 0090 02       		.uleb128 0x2
 2944 0091 5B020000 		.4byte	.LASF12
 2945 0095 04       		.byte	0x4
 2946 0096 41       		.byte	0x41
 2947 0097 9B000000 		.4byte	0x9b
 2948 009b 03       		.uleb128 0x3
 2949 009c 04       		.byte	0x4
 2950 009d 07       		.byte	0x7
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 99


 2951 009e B9020000 		.4byte	.LASF13
 2952 00a2 03       		.uleb128 0x3
 2953 00a3 08       		.byte	0x8
 2954 00a4 07       		.byte	0x7
 2955 00a5 09010000 		.4byte	.LASF14
 2956 00a9 03       		.uleb128 0x3
 2957 00aa 04       		.byte	0x4
 2958 00ab 07       		.byte	0x7
 2959 00ac CA060000 		.4byte	.LASF15
 2960 00b0 05       		.uleb128 0x5
 2961 00b1 04       		.byte	0x4
 2962 00b2 03       		.uleb128 0x3
 2963 00b3 01       		.byte	0x1
 2964 00b4 08       		.byte	0x8
 2965 00b5 C9050000 		.4byte	.LASF16
 2966 00b9 06       		.uleb128 0x6
 2967 00ba 04       		.byte	0x4
 2968 00bb BF000000 		.4byte	0xbf
 2969 00bf 07       		.uleb128 0x7
 2970 00c0 B2000000 		.4byte	0xb2
 2971 00c4 06       		.uleb128 0x6
 2972 00c5 04       		.byte	0x4
 2973 00c6 CA000000 		.4byte	0xca
 2974 00ca 08       		.uleb128 0x8
 2975 00cb 02       		.uleb128 0x2
 2976 00cc 5A060000 		.4byte	.LASF17
 2977 00d0 05       		.byte	0x5
 2978 00d1 14       		.byte	0x14
 2979 00d2 4C000000 		.4byte	0x4c
 2980 00d6 02       		.uleb128 0x2
 2981 00d7 AD060000 		.4byte	.LASF18
 2982 00db 05       		.byte	0x5
 2983 00dc 18       		.byte	0x18
 2984 00dd 5E000000 		.4byte	0x5e
 2985 00e1 02       		.uleb128 0x2
 2986 00e2 C1040000 		.4byte	.LASF19
 2987 00e6 05       		.byte	0x5
 2988 00e7 2C       		.byte	0x2c
 2989 00e8 7E000000 		.4byte	0x7e
 2990 00ec 02       		.uleb128 0x2
 2991 00ed 7C050000 		.4byte	.LASF20
 2992 00f1 05       		.byte	0x5
 2993 00f2 30       		.byte	0x30
 2994 00f3 90000000 		.4byte	0x90
 2995 00f7 03       		.uleb128 0x3
 2996 00f8 04       		.byte	0x4
 2997 00f9 04       		.byte	0x4
 2998 00fa 3C040000 		.4byte	.LASF21
 2999 00fe 03       		.uleb128 0x3
 3000 00ff 08       		.byte	0x8
 3001 0100 04       		.byte	0x4
 3002 0101 16020000 		.4byte	.LASF22
 3003 0105 02       		.uleb128 0x2
 3004 0106 28020000 		.4byte	.LASF23
 3005 010a 02       		.byte	0x2
 3006 010b 62       		.byte	0x62
 3007 010c 89000000 		.4byte	0x89
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 100


 3008 0110 02       		.uleb128 0x2
 3009 0111 DD070000 		.4byte	.LASF24
 3010 0115 02       		.byte	0x2
 3011 0116 63       		.byte	0x63
 3012 0117 9B000000 		.4byte	0x9b
 3013 011b 02       		.uleb128 0x2
 3014 011c 0B020000 		.4byte	.LASF25
 3015 0120 02       		.byte	0x2
 3016 0121 69       		.byte	0x69
 3017 0122 EC000000 		.4byte	0xec
 3018 0126 06       		.uleb128 0x6
 3019 0127 04       		.byte	0x4
 3020 0128 D6000000 		.4byte	0xd6
 3021 012c 09       		.uleb128 0x9
 3022 012d F9060000 		.4byte	.LASF32
 3023 0131 14       		.byte	0x14
 3024 0132 06       		.byte	0x6
 3025 0133 B5       		.byte	0xb5
 3026 0134 75010000 		.4byte	0x175
 3027 0138 0A       		.uleb128 0xa
 3028 0139 DC050000 		.4byte	.LASF26
 3029 013d 06       		.byte	0x6
 3030 013e B8       		.byte	0xb8
 3031 013f 1B010000 		.4byte	0x11b
 3032 0143 00       		.byte	0
 3033 0144 0A       		.uleb128 0xa
 3034 0145 D3060000 		.4byte	.LASF27
 3035 0149 06       		.byte	0x6
 3036 014a B9       		.byte	0xb9
 3037 014b 75010000 		.4byte	0x175
 3038 014f 04       		.byte	0x4
 3039 0150 0A       		.uleb128 0xa
 3040 0151 05040000 		.4byte	.LASF28
 3041 0155 06       		.byte	0x6
 3042 0156 BA       		.byte	0xba
 3043 0157 75010000 		.4byte	0x175
 3044 015b 08       		.byte	0x8
 3045 015c 0A       		.uleb128 0xa
 3046 015d 89020000 		.4byte	.LASF29
 3047 0161 06       		.byte	0x6
 3048 0162 BB       		.byte	0xbb
 3049 0163 B0000000 		.4byte	0xb0
 3050 0167 0C       		.byte	0xc
 3051 0168 0A       		.uleb128 0xa
 3052 0169 8F040000 		.4byte	.LASF30
 3053 016d 06       		.byte	0x6
 3054 016e BC       		.byte	0xbc
 3055 016f B0000000 		.4byte	0xb0
 3056 0173 10       		.byte	0x10
 3057 0174 00       		.byte	0
 3058 0175 06       		.uleb128 0x6
 3059 0176 04       		.byte	0x4
 3060 0177 2C010000 		.4byte	0x12c
 3061 017b 02       		.uleb128 0x2
 3062 017c F3030000 		.4byte	.LASF31
 3063 0180 06       		.byte	0x6
 3064 0181 BF       		.byte	0xbf
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 101


 3065 0182 2C010000 		.4byte	0x12c
 3066 0186 09       		.uleb128 0x9
 3067 0187 71010000 		.4byte	.LASF33
 3068 018b 0C       		.byte	0xc
 3069 018c 06       		.byte	0x6
 3070 018d C1       		.byte	0xc1
 3071 018e B7010000 		.4byte	0x1b7
 3072 0192 0A       		.uleb128 0xa
 3073 0193 DC050000 		.4byte	.LASF26
 3074 0197 06       		.byte	0x6
 3075 0198 C4       		.byte	0xc4
 3076 0199 1B010000 		.4byte	0x11b
 3077 019d 00       		.byte	0
 3078 019e 0A       		.uleb128 0xa
 3079 019f D3060000 		.4byte	.LASF27
 3080 01a3 06       		.byte	0x6
 3081 01a4 C5       		.byte	0xc5
 3082 01a5 75010000 		.4byte	0x175
 3083 01a9 04       		.byte	0x4
 3084 01aa 0A       		.uleb128 0xa
 3085 01ab 05040000 		.4byte	.LASF28
 3086 01af 06       		.byte	0x6
 3087 01b0 C6       		.byte	0xc6
 3088 01b1 75010000 		.4byte	0x175
 3089 01b5 08       		.byte	0x8
 3090 01b6 00       		.byte	0
 3091 01b7 02       		.uleb128 0x2
 3092 01b8 55000000 		.4byte	.LASF34
 3093 01bc 06       		.byte	0x6
 3094 01bd C8       		.byte	0xc8
 3095 01be 86010000 		.4byte	0x186
 3096 01c2 09       		.uleb128 0x9
 3097 01c3 4A050000 		.4byte	.LASF35
 3098 01c7 14       		.byte	0x14
 3099 01c8 06       		.byte	0x6
 3100 01c9 CD       		.byte	0xcd
 3101 01ca F3010000 		.4byte	0x1f3
 3102 01ce 0A       		.uleb128 0xa
 3103 01cf A9020000 		.4byte	.LASF36
 3104 01d3 06       		.byte	0x6
 3105 01d4 D0       		.byte	0xd0
 3106 01d5 10010000 		.4byte	0x110
 3107 01d9 00       		.byte	0
 3108 01da 0A       		.uleb128 0xa
 3109 01db 87040000 		.4byte	.LASF37
 3110 01df 06       		.byte	0x6
 3111 01e0 D1       		.byte	0xd1
 3112 01e1 F3010000 		.4byte	0x1f3
 3113 01e5 04       		.byte	0x4
 3114 01e6 0A       		.uleb128 0xa
 3115 01e7 02020000 		.4byte	.LASF38
 3116 01eb 06       		.byte	0x6
 3117 01ec D2       		.byte	0xd2
 3118 01ed B7010000 		.4byte	0x1b7
 3119 01f1 08       		.byte	0x8
 3120 01f2 00       		.byte	0
 3121 01f3 06       		.uleb128 0x6
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 102


 3122 01f4 04       		.byte	0x4
 3123 01f5 7B010000 		.4byte	0x17b
 3124 01f9 02       		.uleb128 0x2
 3125 01fa 50050000 		.4byte	.LASF39
 3126 01fe 06       		.byte	0x6
 3127 01ff D4       		.byte	0xd4
 3128 0200 C2010000 		.4byte	0x1c2
 3129 0204 09       		.uleb128 0x9
 3130 0205 67010000 		.4byte	.LASF40
 3131 0209 08       		.byte	0x8
 3132 020a 07       		.byte	0x7
 3133 020b 87       		.byte	0x87
 3134 020c 29020000 		.4byte	0x229
 3135 0210 0A       		.uleb128 0xa
 3136 0211 66020000 		.4byte	.LASF41
 3137 0215 07       		.byte	0x7
 3138 0216 89       		.byte	0x89
 3139 0217 05010000 		.4byte	0x105
 3140 021b 00       		.byte	0
 3141 021c 0A       		.uleb128 0xa
 3142 021d 99020000 		.4byte	.LASF42
 3143 0221 07       		.byte	0x7
 3144 0222 8A       		.byte	0x8a
 3145 0223 1B010000 		.4byte	0x11b
 3146 0227 04       		.byte	0x4
 3147 0228 00       		.byte	0
 3148 0229 02       		.uleb128 0x2
 3149 022a 64000000 		.4byte	.LASF43
 3150 022e 07       		.byte	0x7
 3151 022f 8B       		.byte	0x8b
 3152 0230 04020000 		.4byte	0x204
 3153 0234 02       		.uleb128 0x2
 3154 0235 6E050000 		.4byte	.LASF44
 3155 0239 08       		.byte	0x8
 3156 023a 58       		.byte	0x58
 3157 023b B0000000 		.4byte	0xb0
 3158 023f 0B       		.uleb128 0xb
 3159 0240 04       		.byte	0x4
 3160 0241 01       		.byte	0x1
 3161 0242 88       		.byte	0x88
 3162 0243 5E020000 		.4byte	0x25e
 3163 0247 0C       		.uleb128 0xc
 3164 0248 1D020000 		.4byte	.LASF45
 3165 024c 01       		.byte	0x1
 3166 024d 8A       		.byte	0x8a
 3167 024e 5E020000 		.4byte	0x25e
 3168 0252 0C       		.uleb128 0xc
 3169 0253 E4040000 		.4byte	.LASF46
 3170 0257 01       		.byte	0x1
 3171 0258 8B       		.byte	0x8b
 3172 0259 10010000 		.4byte	0x110
 3173 025d 00       		.byte	0
 3174 025e 06       		.uleb128 0x6
 3175 025f 04       		.byte	0x4
 3176 0260 CB000000 		.4byte	0xcb
 3177 0264 09       		.uleb128 0x9
 3178 0265 B1040000 		.4byte	.LASF47
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 103


 3179 0269 48       		.byte	0x48
 3180 026a 01       		.byte	0x1
 3181 026b 82       		.byte	0x82
 3182 026c F3020000 		.4byte	0x2f3
 3183 0270 0A       		.uleb128 0xa
 3184 0271 82020000 		.4byte	.LASF48
 3185 0275 01       		.byte	0x1
 3186 0276 84       		.byte	0x84
 3187 0277 5E020000 		.4byte	0x25e
 3188 027b 00       		.byte	0
 3189 027c 0A       		.uleb128 0xa
 3190 027d 11060000 		.4byte	.LASF49
 3191 0281 01       		.byte	0x1
 3192 0282 85       		.byte	0x85
 3193 0283 5E020000 		.4byte	0x25e
 3194 0287 04       		.byte	0x4
 3195 0288 0A       		.uleb128 0xa
 3196 0289 B5060000 		.4byte	.LASF50
 3197 028d 01       		.byte	0x1
 3198 028e 86       		.byte	0x86
 3199 028f 5E020000 		.4byte	0x25e
 3200 0293 08       		.byte	0x8
 3201 0294 0D       		.uleb128 0xd
 3202 0295 7500     		.ascii	"u\000"
 3203 0297 01       		.byte	0x1
 3204 0298 8C       		.byte	0x8c
 3205 0299 3F020000 		.4byte	0x23f
 3206 029d 0C       		.byte	0xc
 3207 029e 0A       		.uleb128 0xa
 3208 029f 7F060000 		.4byte	.LASF51
 3209 02a3 01       		.byte	0x1
 3210 02a4 8E       		.byte	0x8e
 3211 02a5 F9010000 		.4byte	0x1f9
 3212 02a9 10       		.byte	0x10
 3213 02aa 0A       		.uleb128 0xa
 3214 02ab CC030000 		.4byte	.LASF52
 3215 02af 01       		.byte	0x1
 3216 02b0 8F       		.byte	0x8f
 3217 02b1 F9010000 		.4byte	0x1f9
 3218 02b5 24       		.byte	0x24
 3219 02b6 0A       		.uleb128 0xa
 3220 02b7 85050000 		.4byte	.LASF53
 3221 02bb 01       		.byte	0x1
 3222 02bc 91       		.byte	0x91
 3223 02bd F3020000 		.4byte	0x2f3
 3224 02c1 38       		.byte	0x38
 3225 02c2 0A       		.uleb128 0xa
 3226 02c3 AD030000 		.4byte	.LASF54
 3227 02c7 01       		.byte	0x1
 3228 02c8 92       		.byte	0x92
 3229 02c9 10010000 		.4byte	0x110
 3230 02cd 3C       		.byte	0x3c
 3231 02ce 0A       		.uleb128 0xa
 3232 02cf BF060000 		.4byte	.LASF55
 3233 02d3 01       		.byte	0x1
 3234 02d4 93       		.byte	0x93
 3235 02d5 10010000 		.4byte	0x110
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 104


 3236 02d9 40       		.byte	0x40
 3237 02da 0A       		.uleb128 0xa
 3238 02db 03050000 		.4byte	.LASF56
 3239 02df 01       		.byte	0x1
 3240 02e0 95       		.byte	0x95
 3241 02e1 F8020000 		.4byte	0x2f8
 3242 02e5 44       		.byte	0x44
 3243 02e6 0A       		.uleb128 0xa
 3244 02e7 FA010000 		.4byte	.LASF57
 3245 02eb 01       		.byte	0x1
 3246 02ec 96       		.byte	0x96
 3247 02ed F8020000 		.4byte	0x2f8
 3248 02f1 45       		.byte	0x45
 3249 02f2 00       		.byte	0
 3250 02f3 0E       		.uleb128 0xe
 3251 02f4 10010000 		.4byte	0x110
 3252 02f8 0E       		.uleb128 0xe
 3253 02f9 CB000000 		.4byte	0xcb
 3254 02fd 02       		.uleb128 0x2
 3255 02fe 80040000 		.4byte	.LASF58
 3256 0302 01       		.byte	0x1
 3257 0303 A5       		.byte	0xa5
 3258 0304 64020000 		.4byte	0x264
 3259 0308 02       		.uleb128 0x2
 3260 0309 B6030000 		.4byte	.LASF59
 3261 030d 01       		.byte	0x1
 3262 030e A9       		.byte	0xa9
 3263 030f FD020000 		.4byte	0x2fd
 3264 0313 09       		.uleb128 0x9
 3265 0314 3D010000 		.4byte	.LASF60
 3266 0318 08       		.byte	0x8
 3267 0319 01       		.byte	0x1
 3268 031a B6       		.byte	0xb6
 3269 031b 38030000 		.4byte	0x338
 3270 031f 0A       		.uleb128 0xa
 3271 0320 E7050000 		.4byte	.LASF61
 3272 0324 01       		.byte	0x1
 3273 0325 B8       		.byte	0xb8
 3274 0326 B9000000 		.4byte	0xb9
 3275 032a 00       		.byte	0
 3276 032b 0A       		.uleb128 0xa
 3277 032c 9B040000 		.4byte	.LASF62
 3278 0330 01       		.byte	0x1
 3279 0331 B9       		.byte	0xb9
 3280 0332 34020000 		.4byte	0x234
 3281 0336 04       		.byte	0x4
 3282 0337 00       		.byte	0
 3283 0338 02       		.uleb128 0x2
 3284 0339 B0010000 		.4byte	.LASF63
 3285 033d 01       		.byte	0x1
 3286 033e BA       		.byte	0xba
 3287 033f 13030000 		.4byte	0x313
 3288 0343 02       		.uleb128 0x2
 3289 0344 6B060000 		.4byte	.LASF64
 3290 0348 01       		.byte	0x1
 3291 0349 BF       		.byte	0xbf
 3292 034a 38030000 		.4byte	0x338
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 105


 3293 034e 0F       		.uleb128 0xf
 3294 034f E7010000 		.4byte	.LASF120
 3295 0353 02       		.byte	0x2
 3296 0354 D3       		.byte	0xd3
 3297 0355 EC000000 		.4byte	0xec
 3298 0359 03       		.byte	0x3
 3299 035a 75030000 		.4byte	0x375
 3300 035e 10       		.uleb128 0x10
 3301 035f 00000000 		.4byte	.LASF65
 3302 0363 02       		.byte	0x2
 3303 0364 D5       		.byte	0xd5
 3304 0365 EC000000 		.4byte	0xec
 3305 0369 10       		.uleb128 0x10
 3306 036a DC000000 		.4byte	.LASF66
 3307 036e 02       		.byte	0x2
 3308 036f D5       		.byte	0xd5
 3309 0370 EC000000 		.4byte	0xec
 3310 0374 00       		.byte	0
 3311 0375 11       		.uleb128 0x11
 3312 0376 E3030000 		.4byte	.LASF121
 3313 037a 02       		.byte	0x2
 3314 037b E7       		.byte	0xe7
 3315 037c 03       		.byte	0x3
 3316 037d 8D030000 		.4byte	0x38d
 3317 0381 12       		.uleb128 0x12
 3318 0382 6E000000 		.4byte	.LASF122
 3319 0386 02       		.byte	0x2
 3320 0387 E7       		.byte	0xe7
 3321 0388 EC000000 		.4byte	0xec
 3322 038c 00       		.byte	0
 3323 038d 13       		.uleb128 0x13
 3324 038e B6050000 		.4byte	.LASF69
 3325 0392 01       		.byte	0x1
 3326 0393 1701     		.2byte	0x117
 3327 0395 05010000 		.4byte	0x105
 3328 0399 00000000 		.4byte	.LFB129
 3329 039d C0000000 		.4byte	.LFE129-.LFB129
 3330 03a1 01       		.uleb128 0x1
 3331 03a2 9C       		.byte	0x9c
 3332 03a3 D5030000 		.4byte	0x3d5
 3333 03a7 14       		.uleb128 0x14
 3334 03a8 FE030000 		.4byte	.LASF67
 3335 03ac 01       		.byte	0x1
 3336 03ad 1701     		.2byte	0x117
 3337 03af 34020000 		.4byte	0x234
 3338 03b3 02       		.uleb128 0x2
 3339 03b4 91       		.byte	0x91
 3340 03b5 6C       		.sleb128 -20
 3341 03b6 14       		.uleb128 0x14
 3342 03b7 20010000 		.4byte	.LASF68
 3343 03bb 01       		.byte	0x1
 3344 03bc 1701     		.2byte	0x117
 3345 03be 05010000 		.4byte	0x105
 3346 03c2 02       		.uleb128 0x2
 3347 03c3 91       		.byte	0x91
 3348 03c4 68       		.sleb128 -24
 3349 03c5 15       		.uleb128 0x15
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 106


 3350 03c6 A5060000 		.4byte	.LASF73
 3351 03ca 01       		.byte	0x1
 3352 03cb 1901     		.2byte	0x119
 3353 03cd DB030000 		.4byte	0x3db
 3354 03d1 02       		.uleb128 0x2
 3355 03d2 91       		.byte	0x91
 3356 03d3 74       		.sleb128 -12
 3357 03d4 00       		.byte	0
 3358 03d5 06       		.uleb128 0x6
 3359 03d6 04       		.byte	0x4
 3360 03d7 08030000 		.4byte	0x308
 3361 03db 07       		.uleb128 0x7
 3362 03dc D5030000 		.4byte	0x3d5
 3363 03e0 13       		.uleb128 0x13
 3364 03e1 36050000 		.4byte	.LASF70
 3365 03e5 01       		.byte	0x1
 3366 03e6 8201     		.2byte	0x182
 3367 03e8 34020000 		.4byte	0x234
 3368 03ec 00000000 		.4byte	.LFB130
 3369 03f0 62000000 		.4byte	.LFE130-.LFB130
 3370 03f4 01       		.uleb128 0x1
 3371 03f5 9C       		.byte	0x9c
 3372 03f6 55040000 		.4byte	0x455
 3373 03fa 14       		.uleb128 0x14
 3374 03fb BE030000 		.4byte	.LASF71
 3375 03ff 01       		.byte	0x1
 3376 0400 8201     		.2byte	0x182
 3377 0402 55040000 		.4byte	0x455
 3378 0406 02       		.uleb128 0x2
 3379 0407 91       		.byte	0x91
 3380 0408 64       		.sleb128 -28
 3381 0409 14       		.uleb128 0x14
 3382 040a BF060000 		.4byte	.LASF55
 3383 040e 01       		.byte	0x1
 3384 040f 8201     		.2byte	0x182
 3385 0411 55040000 		.4byte	0x455
 3386 0415 02       		.uleb128 0x2
 3387 0416 91       		.byte	0x91
 3388 0417 60       		.sleb128 -32
 3389 0418 14       		.uleb128 0x14
 3390 0419 12000000 		.4byte	.LASF72
 3391 041d 01       		.byte	0x1
 3392 041e 8201     		.2byte	0x182
 3393 0420 5A040000 		.4byte	0x45a
 3394 0424 02       		.uleb128 0x2
 3395 0425 91       		.byte	0x91
 3396 0426 5F       		.sleb128 -33
 3397 0427 15       		.uleb128 0x15
 3398 0428 FE000000 		.4byte	.LASF74
 3399 042c 01       		.byte	0x1
 3400 042d 8401     		.2byte	0x184
 3401 042f D5030000 		.4byte	0x3d5
 3402 0433 02       		.uleb128 0x2
 3403 0434 91       		.byte	0x91
 3404 0435 70       		.sleb128 -16
 3405 0436 15       		.uleb128 0x15
 3406 0437 93060000 		.4byte	.LASF75
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 107


 3407 043b 01       		.byte	0x1
 3408 043c 8501     		.2byte	0x185
 3409 043e 25000000 		.4byte	0x25
 3410 0442 02       		.uleb128 0x2
 3411 0443 91       		.byte	0x91
 3412 0444 74       		.sleb128 -12
 3413 0445 15       		.uleb128 0x15
 3414 0446 22060000 		.4byte	.LASF76
 3415 044a 01       		.byte	0x1
 3416 044b 8601     		.2byte	0x186
 3417 044d 26010000 		.4byte	0x126
 3418 0451 02       		.uleb128 0x2
 3419 0452 91       		.byte	0x91
 3420 0453 6C       		.sleb128 -20
 3421 0454 00       		.byte	0
 3422 0455 07       		.uleb128 0x7
 3423 0456 10010000 		.4byte	0x110
 3424 045a 07       		.uleb128 0x7
 3425 045b D6000000 		.4byte	0xd6
 3426 045f 16       		.uleb128 0x16
 3427 0460 3C020000 		.4byte	.LASF100
 3428 0464 01       		.byte	0x1
 3429 0465 B001     		.2byte	0x1b0
 3430 0467 00000000 		.4byte	.LFB131
 3431 046b 3E000000 		.4byte	.LFE131-.LFB131
 3432 046f 01       		.uleb128 0x1
 3433 0470 9C       		.byte	0x9c
 3434 0471 C1040000 		.4byte	0x4c1
 3435 0475 14       		.uleb128 0x14
 3436 0476 BE030000 		.4byte	.LASF71
 3437 047a 01       		.byte	0x1
 3438 047b B001     		.2byte	0x1b0
 3439 047d 55040000 		.4byte	0x455
 3440 0481 02       		.uleb128 0x2
 3441 0482 91       		.byte	0x91
 3442 0483 74       		.sleb128 -12
 3443 0484 14       		.uleb128 0x14
 3444 0485 BF060000 		.4byte	.LASF55
 3445 0489 01       		.byte	0x1
 3446 048a B001     		.2byte	0x1b0
 3447 048c 55040000 		.4byte	0x455
 3448 0490 02       		.uleb128 0x2
 3449 0491 91       		.byte	0x91
 3450 0492 70       		.sleb128 -16
 3451 0493 14       		.uleb128 0x14
 3452 0494 22060000 		.4byte	.LASF76
 3453 0498 01       		.byte	0x1
 3454 0499 B001     		.2byte	0x1b0
 3455 049b 26010000 		.4byte	0x126
 3456 049f 02       		.uleb128 0x2
 3457 04a0 91       		.byte	0x91
 3458 04a1 6C       		.sleb128 -20
 3459 04a2 14       		.uleb128 0x14
 3460 04a3 12000000 		.4byte	.LASF72
 3461 04a7 01       		.byte	0x1
 3462 04a8 B001     		.2byte	0x1b0
 3463 04aa 5A040000 		.4byte	0x45a
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 108


 3464 04ae 02       		.uleb128 0x2
 3465 04af 91       		.byte	0x91
 3466 04b0 6B       		.sleb128 -21
 3467 04b1 14       		.uleb128 0x14
 3468 04b2 FE000000 		.4byte	.LASF74
 3469 04b6 01       		.byte	0x1
 3470 04b7 B001     		.2byte	0x1b0
 3471 04b9 D5030000 		.4byte	0x3d5
 3472 04bd 02       		.uleb128 0x2
 3473 04be 91       		.byte	0x91
 3474 04bf 00       		.sleb128 0
 3475 04c0 00       		.byte	0
 3476 04c1 13       		.uleb128 0x13
 3477 04c2 EC020000 		.4byte	.LASF77
 3478 04c6 01       		.byte	0x1
 3479 04c7 D302     		.2byte	0x2d3
 3480 04c9 05010000 		.4byte	0x105
 3481 04cd 00000000 		.4byte	.LFB132
 3482 04d1 B4010000 		.4byte	.LFE132-.LFB132
 3483 04d5 01       		.uleb128 0x1
 3484 04d6 9C       		.byte	0x9c
 3485 04d7 54050000 		.4byte	0x554
 3486 04db 14       		.uleb128 0x14
 3487 04dc FE030000 		.4byte	.LASF67
 3488 04e0 01       		.byte	0x1
 3489 04e1 D302     		.2byte	0x2d3
 3490 04e3 34020000 		.4byte	0x234
 3491 04e7 02       		.uleb128 0x2
 3492 04e8 91       		.byte	0x91
 3493 04e9 5C       		.sleb128 -36
 3494 04ea 14       		.uleb128 0x14
 3495 04eb 2E040000 		.4byte	.LASF78
 3496 04ef 01       		.byte	0x1
 3497 04f0 D302     		.2byte	0x2d3
 3498 04f2 54050000 		.4byte	0x554
 3499 04f6 02       		.uleb128 0x2
 3500 04f7 91       		.byte	0x91
 3501 04f8 58       		.sleb128 -40
 3502 04f9 14       		.uleb128 0x14
 3503 04fa C3010000 		.4byte	.LASF79
 3504 04fe 01       		.byte	0x1
 3505 04ff D302     		.2byte	0x2d3
 3506 0501 1B010000 		.4byte	0x11b
 3507 0505 02       		.uleb128 0x2
 3508 0506 91       		.byte	0x91
 3509 0507 54       		.sleb128 -44
 3510 0508 14       		.uleb128 0x14
 3511 0509 CE050000 		.4byte	.LASF80
 3512 050d 01       		.byte	0x1
 3513 050e D302     		.2byte	0x2d3
 3514 0510 59050000 		.4byte	0x559
 3515 0514 02       		.uleb128 0x2
 3516 0515 91       		.byte	0x91
 3517 0516 50       		.sleb128 -48
 3518 0517 15       		.uleb128 0x15
 3519 0518 A3040000 		.4byte	.LASF81
 3520 051c 01       		.byte	0x1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 109


 3521 051d D502     		.2byte	0x2d5
 3522 051f 05010000 		.4byte	0x105
 3523 0523 02       		.uleb128 0x2
 3524 0524 91       		.byte	0x91
 3525 0525 74       		.sleb128 -12
 3526 0526 15       		.uleb128 0x15
 3527 0527 11030000 		.4byte	.LASF82
 3528 052b 01       		.byte	0x1
 3529 052c D502     		.2byte	0x2d5
 3530 052e 05010000 		.4byte	0x105
 3531 0532 02       		.uleb128 0x2
 3532 0533 91       		.byte	0x91
 3533 0534 6C       		.sleb128 -20
 3534 0535 15       		.uleb128 0x15
 3535 0536 33020000 		.4byte	.LASF83
 3536 053a 01       		.byte	0x1
 3537 053b D602     		.2byte	0x2d6
 3538 053d 29020000 		.4byte	0x229
 3539 0541 02       		.uleb128 0x2
 3540 0542 91       		.byte	0x91
 3541 0543 64       		.sleb128 -28
 3542 0544 15       		.uleb128 0x15
 3543 0545 A5060000 		.4byte	.LASF73
 3544 0549 01       		.byte	0x1
 3545 054a D702     		.2byte	0x2d7
 3546 054c DB030000 		.4byte	0x3db
 3547 0550 02       		.uleb128 0x2
 3548 0551 91       		.byte	0x91
 3549 0552 70       		.sleb128 -16
 3550 0553 00       		.byte	0
 3551 0554 07       		.uleb128 0x7
 3552 0555 C4000000 		.4byte	0xc4
 3553 0559 07       		.uleb128 0x7
 3554 055a 05010000 		.4byte	0x105
 3555 055e 13       		.uleb128 0x13
 3556 055f 1E000000 		.4byte	.LASF84
 3557 0563 01       		.byte	0x1
 3558 0564 9903     		.2byte	0x399
 3559 0566 05010000 		.4byte	0x105
 3560 056a 00000000 		.4byte	.LFB133
 3561 056e F4000000 		.4byte	.LFE133-.LFB133
 3562 0572 01       		.uleb128 0x1
 3563 0573 9C       		.byte	0x9c
 3564 0574 47060000 		.4byte	0x647
 3565 0578 14       		.uleb128 0x14
 3566 0579 FE030000 		.4byte	.LASF67
 3567 057d 01       		.byte	0x1
 3568 057e 9903     		.2byte	0x399
 3569 0580 34020000 		.4byte	0x234
 3570 0584 02       		.uleb128 0x2
 3571 0585 91       		.byte	0x91
 3572 0586 54       		.sleb128 -44
 3573 0587 14       		.uleb128 0x14
 3574 0588 2E040000 		.4byte	.LASF78
 3575 058c 01       		.byte	0x1
 3576 058d 9903     		.2byte	0x399
 3577 058f 54050000 		.4byte	0x554
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 110


 3578 0593 02       		.uleb128 0x2
 3579 0594 91       		.byte	0x91
 3580 0595 50       		.sleb128 -48
 3581 0596 14       		.uleb128 0x14
 3582 0597 7D000000 		.4byte	.LASF85
 3583 059b 01       		.byte	0x1
 3584 059c 9903     		.2byte	0x399
 3585 059e 4D060000 		.4byte	0x64d
 3586 05a2 02       		.uleb128 0x2
 3587 05a3 91       		.byte	0x91
 3588 05a4 4C       		.sleb128 -52
 3589 05a5 14       		.uleb128 0x14
 3590 05a6 CE050000 		.4byte	.LASF80
 3591 05aa 01       		.byte	0x1
 3592 05ab 9903     		.2byte	0x399
 3593 05ad 59050000 		.4byte	0x559
 3594 05b1 02       		.uleb128 0x2
 3595 05b2 91       		.byte	0x91
 3596 05b3 48       		.sleb128 -56
 3597 05b4 15       		.uleb128 0x15
 3598 05b5 91020000 		.4byte	.LASF86
 3599 05b9 01       		.byte	0x1
 3600 05ba 9B03     		.2byte	0x39b
 3601 05bc 05010000 		.4byte	0x105
 3602 05c0 02       		.uleb128 0x2
 3603 05c1 91       		.byte	0x91
 3604 05c2 74       		.sleb128 -12
 3605 05c3 15       		.uleb128 0x15
 3606 05c4 57050000 		.4byte	.LASF87
 3607 05c8 01       		.byte	0x1
 3608 05c9 9C03     		.2byte	0x39c
 3609 05cb 10010000 		.4byte	0x110
 3610 05cf 02       		.uleb128 0x2
 3611 05d0 91       		.byte	0x91
 3612 05d1 68       		.sleb128 -24
 3613 05d2 15       		.uleb128 0x15
 3614 05d3 A5060000 		.4byte	.LASF73
 3615 05d7 01       		.byte	0x1
 3616 05d8 9D03     		.2byte	0x39d
 3617 05da DB030000 		.4byte	0x3db
 3618 05de 02       		.uleb128 0x2
 3619 05df 91       		.byte	0x91
 3620 05e0 70       		.sleb128 -16
 3621 05e1 17       		.uleb128 0x17
 3622 05e2 4E030000 		.4byte	0x34e
 3623 05e6 58000000 		.4byte	.LBB23
 3624 05ea 1A000000 		.4byte	.LBE23-.LBB23
 3625 05ee 01       		.byte	0x1
 3626 05ef B803     		.2byte	0x3b8
 3627 05f1 10060000 		.4byte	0x610
 3628 05f5 18       		.uleb128 0x18
 3629 05f6 58000000 		.4byte	.LBB24
 3630 05fa 1A000000 		.4byte	.LBE24-.LBB24
 3631 05fe 19       		.uleb128 0x19
 3632 05ff 5E030000 		.4byte	0x35e
 3633 0603 02       		.uleb128 0x2
 3634 0604 91       		.byte	0x91
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 111


 3635 0605 60       		.sleb128 -32
 3636 0606 19       		.uleb128 0x19
 3637 0607 69030000 		.4byte	0x369
 3638 060b 02       		.uleb128 0x2
 3639 060c 91       		.byte	0x91
 3640 060d 5C       		.sleb128 -36
 3641 060e 00       		.byte	0
 3642 060f 00       		.byte	0
 3643 0610 1A       		.uleb128 0x1a
 3644 0611 86000000 		.4byte	.LBB25
 3645 0615 54000000 		.4byte	.LBE25-.LBB25
 3646 0619 2D060000 		.4byte	0x62d
 3647 061d 15       		.uleb128 0x15
 3648 061e FA010000 		.4byte	.LASF57
 3649 0622 01       		.byte	0x1
 3650 0623 BC03     		.2byte	0x3bc
 3651 0625 52060000 		.4byte	0x652
 3652 0629 02       		.uleb128 0x2
 3653 062a 91       		.byte	0x91
 3654 062b 67       		.sleb128 -25
 3655 062c 00       		.byte	0
 3656 062d 1B       		.uleb128 0x1b
 3657 062e 75030000 		.4byte	0x375
 3658 0632 E4000000 		.4byte	.LBB26
 3659 0636 06000000 		.4byte	.LBE26-.LBB26
 3660 063a 01       		.byte	0x1
 3661 063b 2A04     		.2byte	0x42a
 3662 063d 1C       		.uleb128 0x1c
 3663 063e 81030000 		.4byte	0x381
 3664 0642 02       		.uleb128 0x2
 3665 0643 91       		.byte	0x91
 3666 0644 6C       		.sleb128 -20
 3667 0645 00       		.byte	0
 3668 0646 00       		.byte	0
 3669 0647 06       		.uleb128 0x6
 3670 0648 04       		.byte	0x4
 3671 0649 05010000 		.4byte	0x105
 3672 064d 07       		.uleb128 0x7
 3673 064e 47060000 		.4byte	0x647
 3674 0652 07       		.uleb128 0x7
 3675 0653 CB000000 		.4byte	0xcb
 3676 0657 13       		.uleb128 0x13
 3677 0658 0B050000 		.4byte	.LASF88
 3678 065c 01       		.byte	0x1
 3679 065d 3004     		.2byte	0x430
 3680 065f 05010000 		.4byte	0x105
 3681 0663 00000000 		.4byte	.LFB134
 3682 0667 DE000000 		.4byte	.LFE134-.LFB134
 3683 066b 01       		.uleb128 0x1
 3684 066c 9C       		.byte	0x9c
 3685 066d 3B070000 		.4byte	0x73b
 3686 0671 14       		.uleb128 0x14
 3687 0672 FE030000 		.4byte	.LASF67
 3688 0676 01       		.byte	0x1
 3689 0677 3004     		.2byte	0x430
 3690 0679 34020000 		.4byte	0x234
 3691 067d 02       		.uleb128 0x2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 112


 3692 067e 91       		.byte	0x91
 3693 067f 54       		.sleb128 -44
 3694 0680 14       		.uleb128 0x14
 3695 0681 7D000000 		.4byte	.LASF85
 3696 0685 01       		.byte	0x1
 3697 0686 3004     		.2byte	0x430
 3698 0688 4D060000 		.4byte	0x64d
 3699 068c 02       		.uleb128 0x2
 3700 068d 91       		.byte	0x91
 3701 068e 50       		.sleb128 -48
 3702 068f 15       		.uleb128 0x15
 3703 0690 91020000 		.4byte	.LASF86
 3704 0694 01       		.byte	0x1
 3705 0695 3204     		.2byte	0x432
 3706 0697 05010000 		.4byte	0x105
 3707 069b 02       		.uleb128 0x2
 3708 069c 91       		.byte	0x91
 3709 069d 74       		.sleb128 -12
 3710 069e 15       		.uleb128 0x15
 3711 069f 57050000 		.4byte	.LASF87
 3712 06a3 01       		.byte	0x1
 3713 06a4 3304     		.2byte	0x433
 3714 06a6 10010000 		.4byte	0x110
 3715 06aa 02       		.uleb128 0x2
 3716 06ab 91       		.byte	0x91
 3717 06ac 68       		.sleb128 -24
 3718 06ad 15       		.uleb128 0x15
 3719 06ae A5060000 		.4byte	.LASF73
 3720 06b2 01       		.byte	0x1
 3721 06b3 3404     		.2byte	0x434
 3722 06b5 DB030000 		.4byte	0x3db
 3723 06b9 02       		.uleb128 0x2
 3724 06ba 91       		.byte	0x91
 3725 06bb 70       		.sleb128 -16
 3726 06bc 17       		.uleb128 0x17
 3727 06bd 4E030000 		.4byte	0x34e
 3728 06c1 46000000 		.4byte	.LBB28
 3729 06c5 1A000000 		.4byte	.LBE28-.LBB28
 3730 06c9 01       		.byte	0x1
 3731 06ca 5704     		.2byte	0x457
 3732 06cc EB060000 		.4byte	0x6eb
 3733 06d0 18       		.uleb128 0x18
 3734 06d1 46000000 		.4byte	.LBB29
 3735 06d5 1A000000 		.4byte	.LBE29-.LBB29
 3736 06d9 19       		.uleb128 0x19
 3737 06da 5E030000 		.4byte	0x35e
 3738 06de 02       		.uleb128 0x2
 3739 06df 91       		.byte	0x91
 3740 06e0 5C       		.sleb128 -36
 3741 06e1 19       		.uleb128 0x19
 3742 06e2 69030000 		.4byte	0x369
 3743 06e6 02       		.uleb128 0x2
 3744 06e7 91       		.byte	0x91
 3745 06e8 58       		.sleb128 -40
 3746 06e9 00       		.byte	0
 3747 06ea 00       		.byte	0
 3748 06eb 1A       		.uleb128 0x1a
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 113


 3749 06ec 62000000 		.4byte	.LBB30
 3750 06f0 6C000000 		.4byte	.LBE30-.LBB30
 3751 06f4 21070000 		.4byte	0x721
 3752 06f8 15       		.uleb128 0x15
 3753 06f9 85050000 		.4byte	.LASF53
 3754 06fd 01       		.byte	0x1
 3755 06fe 5904     		.2byte	0x459
 3756 0700 55040000 		.4byte	0x455
 3757 0704 02       		.uleb128 0x2
 3758 0705 91       		.byte	0x91
 3759 0706 64       		.sleb128 -28
 3760 0707 18       		.uleb128 0x18
 3761 0708 72000000 		.4byte	.LBB31
 3762 070c 52000000 		.4byte	.LBE31-.LBB31
 3763 0710 15       		.uleb128 0x15
 3764 0711 FA010000 		.4byte	.LASF57
 3765 0715 01       		.byte	0x1
 3766 0716 6004     		.2byte	0x460
 3767 0718 52060000 		.4byte	0x652
 3768 071c 02       		.uleb128 0x2
 3769 071d 91       		.byte	0x91
 3770 071e 63       		.sleb128 -29
 3771 071f 00       		.byte	0
 3772 0720 00       		.byte	0
 3773 0721 1B       		.uleb128 0x1b
 3774 0722 75030000 		.4byte	0x375
 3775 0726 CE000000 		.4byte	.LBB32
 3776 072a 06000000 		.4byte	.LBE32-.LBB32
 3777 072e 01       		.byte	0x1
 3778 072f CF04     		.2byte	0x4cf
 3779 0731 1C       		.uleb128 0x1c
 3780 0732 81030000 		.4byte	0x381
 3781 0736 02       		.uleb128 0x2
 3782 0737 91       		.byte	0x91
 3783 0738 6C       		.sleb128 -20
 3784 0739 00       		.byte	0
 3785 073a 00       		.byte	0
 3786 073b 13       		.uleb128 0x13
 3787 073c 81010000 		.4byte	.LASF89
 3788 0740 01       		.byte	0x1
 3789 0741 D504     		.2byte	0x4d5
 3790 0743 05010000 		.4byte	0x105
 3791 0747 00000000 		.4byte	.LFB135
 3792 074b C8010000 		.4byte	.LFE135-.LFB135
 3793 074f 01       		.uleb128 0x1
 3794 0750 9C       		.byte	0x9c
 3795 0751 E7070000 		.4byte	0x7e7
 3796 0755 14       		.uleb128 0x14
 3797 0756 FE030000 		.4byte	.LASF67
 3798 075a 01       		.byte	0x1
 3799 075b D504     		.2byte	0x4d5
 3800 075d 34020000 		.4byte	0x234
 3801 0761 02       		.uleb128 0x2
 3802 0762 91       		.byte	0x91
 3803 0763 5C       		.sleb128 -36
 3804 0764 14       		.uleb128 0x14
 3805 0765 A1050000 		.4byte	.LASF90
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 114


 3806 0769 01       		.byte	0x1
 3807 076a D504     		.2byte	0x4d5
 3808 076c E7070000 		.4byte	0x7e7
 3809 0770 02       		.uleb128 0x2
 3810 0771 91       		.byte	0x91
 3811 0772 58       		.sleb128 -40
 3812 0773 14       		.uleb128 0x14
 3813 0774 C3010000 		.4byte	.LASF79
 3814 0778 01       		.byte	0x1
 3815 0779 D504     		.2byte	0x4d5
 3816 077b 1B010000 		.4byte	0x11b
 3817 077f 02       		.uleb128 0x2
 3818 0780 91       		.byte	0x91
 3819 0781 54       		.sleb128 -44
 3820 0782 14       		.uleb128 0x14
 3821 0783 CB020000 		.4byte	.LASF91
 3822 0787 01       		.byte	0x1
 3823 0788 D504     		.2byte	0x4d5
 3824 078a 59050000 		.4byte	0x559
 3825 078e 02       		.uleb128 0x2
 3826 078f 91       		.byte	0x91
 3827 0790 50       		.sleb128 -48
 3828 0791 15       		.uleb128 0x15
 3829 0792 A3040000 		.4byte	.LASF81
 3830 0796 01       		.byte	0x1
 3831 0797 D704     		.2byte	0x4d7
 3832 0799 05010000 		.4byte	0x105
 3833 079d 02       		.uleb128 0x2
 3834 079e 91       		.byte	0x91
 3835 079f 74       		.sleb128 -12
 3836 07a0 15       		.uleb128 0x15
 3837 07a1 33020000 		.4byte	.LASF83
 3838 07a5 01       		.byte	0x1
 3839 07a6 D804     		.2byte	0x4d8
 3840 07a8 29020000 		.4byte	0x229
 3841 07ac 02       		.uleb128 0x2
 3842 07ad 91       		.byte	0x91
 3843 07ae 60       		.sleb128 -32
 3844 07af 15       		.uleb128 0x15
 3845 07b0 D0010000 		.4byte	.LASF92
 3846 07b4 01       		.byte	0x1
 3847 07b5 D904     		.2byte	0x4d9
 3848 07b7 5E020000 		.4byte	0x25e
 3849 07bb 02       		.uleb128 0x2
 3850 07bc 91       		.byte	0x91
 3851 07bd 68       		.sleb128 -24
 3852 07be 15       		.uleb128 0x15
 3853 07bf A5060000 		.4byte	.LASF73
 3854 07c3 01       		.byte	0x1
 3855 07c4 DA04     		.2byte	0x4da
 3856 07c6 DB030000 		.4byte	0x3db
 3857 07ca 02       		.uleb128 0x2
 3858 07cb 91       		.byte	0x91
 3859 07cc 70       		.sleb128 -16
 3860 07cd 18       		.uleb128 0x18
 3861 07ce 5E000000 		.4byte	.LBB34
 3862 07d2 AA000000 		.4byte	.LBE34-.LBB34
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 115


 3863 07d6 15       		.uleb128 0x15
 3864 07d7 85050000 		.4byte	.LASF53
 3865 07db 01       		.byte	0x1
 3866 07dc EC04     		.2byte	0x4ec
 3867 07de 55040000 		.4byte	0x455
 3868 07e2 02       		.uleb128 0x2
 3869 07e3 91       		.byte	0x91
 3870 07e4 6C       		.sleb128 -20
 3871 07e5 00       		.byte	0
 3872 07e6 00       		.byte	0
 3873 07e7 07       		.uleb128 0x7
 3874 07e8 B0000000 		.4byte	0xb0
 3875 07ec 13       		.uleb128 0x13
 3876 07ed 29030000 		.4byte	.LASF93
 3877 07f1 01       		.byte	0x1
 3878 07f2 9A05     		.2byte	0x59a
 3879 07f4 05010000 		.4byte	0x105
 3880 07f8 00000000 		.4byte	.LFB136
 3881 07fc D6000000 		.4byte	.LFE136-.LFB136
 3882 0800 01       		.uleb128 0x1
 3883 0801 9C       		.byte	0x9c
 3884 0802 DF080000 		.4byte	0x8df
 3885 0806 14       		.uleb128 0x14
 3886 0807 FE030000 		.4byte	.LASF67
 3887 080b 01       		.byte	0x1
 3888 080c 9A05     		.2byte	0x59a
 3889 080e 34020000 		.4byte	0x234
 3890 0812 02       		.uleb128 0x2
 3891 0813 91       		.byte	0x91
 3892 0814 54       		.sleb128 -44
 3893 0815 14       		.uleb128 0x14
 3894 0816 A1050000 		.4byte	.LASF90
 3895 081a 01       		.byte	0x1
 3896 081b 9A05     		.2byte	0x59a
 3897 081d E7070000 		.4byte	0x7e7
 3898 0821 02       		.uleb128 0x2
 3899 0822 91       		.byte	0x91
 3900 0823 50       		.sleb128 -48
 3901 0824 14       		.uleb128 0x14
 3902 0825 7D000000 		.4byte	.LASF85
 3903 0829 01       		.byte	0x1
 3904 082a 9A05     		.2byte	0x59a
 3905 082c 4D060000 		.4byte	0x64d
 3906 0830 02       		.uleb128 0x2
 3907 0831 91       		.byte	0x91
 3908 0832 4C       		.sleb128 -52
 3909 0833 15       		.uleb128 0x15
 3910 0834 91020000 		.4byte	.LASF86
 3911 0838 01       		.byte	0x1
 3912 0839 9C05     		.2byte	0x59c
 3913 083b 05010000 		.4byte	0x105
 3914 083f 02       		.uleb128 0x2
 3915 0840 91       		.byte	0x91
 3916 0841 74       		.sleb128 -12
 3917 0842 15       		.uleb128 0x15
 3918 0843 57050000 		.4byte	.LASF87
 3919 0847 01       		.byte	0x1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 116


 3920 0848 9D05     		.2byte	0x59d
 3921 084a 10010000 		.4byte	0x110
 3922 084e 02       		.uleb128 0x2
 3923 084f 91       		.byte	0x91
 3924 0850 68       		.sleb128 -24
 3925 0851 15       		.uleb128 0x15
 3926 0852 A5060000 		.4byte	.LASF73
 3927 0856 01       		.byte	0x1
 3928 0857 9E05     		.2byte	0x59e
 3929 0859 DB030000 		.4byte	0x3db
 3930 085d 02       		.uleb128 0x2
 3931 085e 91       		.byte	0x91
 3932 085f 70       		.sleb128 -16
 3933 0860 17       		.uleb128 0x17
 3934 0861 4E030000 		.4byte	0x34e
 3935 0865 3A000000 		.4byte	.LBB35
 3936 0869 1A000000 		.4byte	.LBE35-.LBB35
 3937 086d 01       		.byte	0x1
 3938 086e B305     		.2byte	0x5b3
 3939 0870 8F080000 		.4byte	0x88f
 3940 0874 18       		.uleb128 0x18
 3941 0875 3A000000 		.4byte	.LBB36
 3942 0879 1A000000 		.4byte	.LBE36-.LBB36
 3943 087d 19       		.uleb128 0x19
 3944 087e 5E030000 		.4byte	0x35e
 3945 0882 02       		.uleb128 0x2
 3946 0883 91       		.byte	0x91
 3947 0884 5C       		.sleb128 -36
 3948 0885 19       		.uleb128 0x19
 3949 0886 69030000 		.4byte	0x369
 3950 088a 02       		.uleb128 0x2
 3951 088b 91       		.byte	0x91
 3952 088c 58       		.sleb128 -40
 3953 088d 00       		.byte	0
 3954 088e 00       		.byte	0
 3955 088f 1A       		.uleb128 0x1a
 3956 0890 56000000 		.4byte	.LBB37
 3957 0894 70000000 		.4byte	.LBE37-.LBB37
 3958 0898 C5080000 		.4byte	0x8c5
 3959 089c 15       		.uleb128 0x15
 3960 089d 85050000 		.4byte	.LASF53
 3961 08a1 01       		.byte	0x1
 3962 08a2 B505     		.2byte	0x5b5
 3963 08a4 55040000 		.4byte	0x455
 3964 08a8 02       		.uleb128 0x2
 3965 08a9 91       		.byte	0x91
 3966 08aa 64       		.sleb128 -28
 3967 08ab 18       		.uleb128 0x18
 3968 08ac 62000000 		.4byte	.LBB38
 3969 08b0 5A000000 		.4byte	.LBE38-.LBB38
 3970 08b4 15       		.uleb128 0x15
 3971 08b5 03050000 		.4byte	.LASF56
 3972 08b9 01       		.byte	0x1
 3973 08ba BA05     		.2byte	0x5ba
 3974 08bc 52060000 		.4byte	0x652
 3975 08c0 02       		.uleb128 0x2
 3976 08c1 91       		.byte	0x91
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 117


 3977 08c2 63       		.sleb128 -29
 3978 08c3 00       		.byte	0
 3979 08c4 00       		.byte	0
 3980 08c5 1B       		.uleb128 0x1b
 3981 08c6 75030000 		.4byte	0x375
 3982 08ca C6000000 		.4byte	.LBB39
 3983 08ce 06000000 		.4byte	.LBE39-.LBB39
 3984 08d2 01       		.byte	0x1
 3985 08d3 EF05     		.2byte	0x5ef
 3986 08d5 1C       		.uleb128 0x1c
 3987 08d6 81030000 		.4byte	0x381
 3988 08da 02       		.uleb128 0x2
 3989 08db 91       		.byte	0x91
 3990 08dc 6C       		.sleb128 -20
 3991 08dd 00       		.byte	0
 3992 08de 00       		.byte	0
 3993 08df 13       		.uleb128 0x13
 3994 08e0 C1000000 		.4byte	.LASF94
 3995 08e4 01       		.byte	0x1
 3996 08e5 F505     		.2byte	0x5f5
 3997 08e7 05010000 		.4byte	0x105
 3998 08eb 00000000 		.4byte	.LFB137
 3999 08ef 9A000000 		.4byte	.LFE137-.LFB137
 4000 08f3 01       		.uleb128 0x1
 4001 08f4 9C       		.byte	0x9c
 4002 08f5 9C090000 		.4byte	0x99c
 4003 08f9 14       		.uleb128 0x14
 4004 08fa FE030000 		.4byte	.LASF67
 4005 08fe 01       		.byte	0x1
 4006 08ff F505     		.2byte	0x5f5
 4007 0901 34020000 		.4byte	0x234
 4008 0905 02       		.uleb128 0x2
 4009 0906 91       		.byte	0x91
 4010 0907 54       		.sleb128 -44
 4011 0908 14       		.uleb128 0x14
 4012 0909 A1050000 		.4byte	.LASF90
 4013 090d 01       		.byte	0x1
 4014 090e F505     		.2byte	0x5f5
 4015 0910 E7070000 		.4byte	0x7e7
 4016 0914 02       		.uleb128 0x2
 4017 0915 91       		.byte	0x91
 4018 0916 50       		.sleb128 -48
 4019 0917 15       		.uleb128 0x15
 4020 0918 91020000 		.4byte	.LASF86
 4021 091c 01       		.byte	0x1
 4022 091d F705     		.2byte	0x5f7
 4023 091f 05010000 		.4byte	0x105
 4024 0923 02       		.uleb128 0x2
 4025 0924 91       		.byte	0x91
 4026 0925 74       		.sleb128 -12
 4027 0926 15       		.uleb128 0x15
 4028 0927 57050000 		.4byte	.LASF87
 4029 092b 01       		.byte	0x1
 4030 092c F805     		.2byte	0x5f8
 4031 092e 10010000 		.4byte	0x110
 4032 0932 02       		.uleb128 0x2
 4033 0933 91       		.byte	0x91
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 118


 4034 0934 68       		.sleb128 -24
 4035 0935 15       		.uleb128 0x15
 4036 0936 D0010000 		.4byte	.LASF92
 4037 093a 01       		.byte	0x1
 4038 093b F905     		.2byte	0x5f9
 4039 093d 5E020000 		.4byte	0x25e
 4040 0941 02       		.uleb128 0x2
 4041 0942 91       		.byte	0x91
 4042 0943 64       		.sleb128 -28
 4043 0944 15       		.uleb128 0x15
 4044 0945 A5060000 		.4byte	.LASF73
 4045 0949 01       		.byte	0x1
 4046 094a FA05     		.2byte	0x5fa
 4047 094c DB030000 		.4byte	0x3db
 4048 0950 02       		.uleb128 0x2
 4049 0951 91       		.byte	0x91
 4050 0952 70       		.sleb128 -16
 4051 0953 17       		.uleb128 0x17
 4052 0954 4E030000 		.4byte	0x34e
 4053 0958 44000000 		.4byte	.LBB41
 4054 095c 1A000000 		.4byte	.LBE41-.LBB41
 4055 0960 01       		.byte	0x1
 4056 0961 1006     		.2byte	0x610
 4057 0963 82090000 		.4byte	0x982
 4058 0967 18       		.uleb128 0x18
 4059 0968 44000000 		.4byte	.LBB42
 4060 096c 1A000000 		.4byte	.LBE42-.LBB42
 4061 0970 19       		.uleb128 0x19
 4062 0971 5E030000 		.4byte	0x35e
 4063 0975 02       		.uleb128 0x2
 4064 0976 91       		.byte	0x91
 4065 0977 60       		.sleb128 -32
 4066 0978 19       		.uleb128 0x19
 4067 0979 69030000 		.4byte	0x369
 4068 097d 02       		.uleb128 0x2
 4069 097e 91       		.byte	0x91
 4070 097f 5C       		.sleb128 -36
 4071 0980 00       		.byte	0
 4072 0981 00       		.byte	0
 4073 0982 1B       		.uleb128 0x1b
 4074 0983 75030000 		.4byte	0x375
 4075 0987 8A000000 		.4byte	.LBB43
 4076 098b 06000000 		.4byte	.LBE43-.LBB43
 4077 098f 01       		.byte	0x1
 4078 0990 2506     		.2byte	0x625
 4079 0992 1C       		.uleb128 0x1c
 4080 0993 81030000 		.4byte	0x381
 4081 0997 02       		.uleb128 0x2
 4082 0998 91       		.byte	0x91
 4083 0999 6C       		.sleb128 -20
 4084 099a 00       		.byte	0
 4085 099b 00       		.byte	0
 4086 099c 13       		.uleb128 0x13
 4087 099d 37000000 		.4byte	.LASF95
 4088 09a1 01       		.byte	0x1
 4089 09a2 2B06     		.2byte	0x62b
 4090 09a4 10010000 		.4byte	0x110
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 119


 4091 09a8 00000000 		.4byte	.LFB138
 4092 09ac 2A000000 		.4byte	.LFE138-.LFB138
 4093 09b0 01       		.uleb128 0x1
 4094 09b1 9C       		.byte	0x9c
 4095 09b2 D5090000 		.4byte	0x9d5
 4096 09b6 14       		.uleb128 0x14
 4097 09b7 FE030000 		.4byte	.LASF67
 4098 09bb 01       		.byte	0x1
 4099 09bc 2B06     		.2byte	0x62b
 4100 09be D5090000 		.4byte	0x9d5
 4101 09c2 02       		.uleb128 0x2
 4102 09c3 91       		.byte	0x91
 4103 09c4 6C       		.sleb128 -20
 4104 09c5 15       		.uleb128 0x15
 4105 09c6 20030000 		.4byte	.LASF96
 4106 09ca 01       		.byte	0x1
 4107 09cb 2D06     		.2byte	0x62d
 4108 09cd 10010000 		.4byte	0x110
 4109 09d1 02       		.uleb128 0x2
 4110 09d2 91       		.byte	0x91
 4111 09d3 74       		.sleb128 -12
 4112 09d4 00       		.byte	0
 4113 09d5 07       		.uleb128 0x7
 4114 09d6 34020000 		.4byte	0x234
 4115 09da 13       		.uleb128 0x13
 4116 09db B7070000 		.4byte	.LASF97
 4117 09df 01       		.byte	0x1
 4118 09e0 3B06     		.2byte	0x63b
 4119 09e2 10010000 		.4byte	0x110
 4120 09e6 00000000 		.4byte	.LFB139
 4121 09ea 34000000 		.4byte	.LFE139-.LFB139
 4122 09ee 01       		.uleb128 0x1
 4123 09ef 9C       		.byte	0x9c
 4124 09f0 220A0000 		.4byte	0xa22
 4125 09f4 14       		.uleb128 0x14
 4126 09f5 FE030000 		.4byte	.LASF67
 4127 09f9 01       		.byte	0x1
 4128 09fa 3B06     		.2byte	0x63b
 4129 09fc D5090000 		.4byte	0x9d5
 4130 0a00 02       		.uleb128 0x2
 4131 0a01 91       		.byte	0x91
 4132 0a02 6C       		.sleb128 -20
 4133 0a03 15       		.uleb128 0x15
 4134 0a04 20030000 		.4byte	.LASF96
 4135 0a08 01       		.byte	0x1
 4136 0a09 3D06     		.2byte	0x63d
 4137 0a0b 10010000 		.4byte	0x110
 4138 0a0f 02       		.uleb128 0x2
 4139 0a10 91       		.byte	0x91
 4140 0a11 70       		.sleb128 -16
 4141 0a12 15       		.uleb128 0x15
 4142 0a13 A5060000 		.4byte	.LASF73
 4143 0a17 01       		.byte	0x1
 4144 0a18 3E06     		.2byte	0x63e
 4145 0a1a D5030000 		.4byte	0x3d5
 4146 0a1e 02       		.uleb128 0x2
 4147 0a1f 91       		.byte	0x91
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 120


 4148 0a20 74       		.sleb128 -12
 4149 0a21 00       		.byte	0
 4150 0a22 1D       		.uleb128 0x1d
 4151 0a23 10040000 		.4byte	.LASF98
 4152 0a27 01       		.byte	0x1
 4153 0a28 4D06     		.2byte	0x64d
 4154 0a2a 10010000 		.4byte	0x110
 4155 0a2e 00000000 		.4byte	.LFB140
 4156 0a32 26000000 		.4byte	.LFE140-.LFB140
 4157 0a36 01       		.uleb128 0x1
 4158 0a37 9C       		.byte	0x9c
 4159 0a38 5B0A0000 		.4byte	0xa5b
 4160 0a3c 14       		.uleb128 0x14
 4161 0a3d FE030000 		.4byte	.LASF67
 4162 0a41 01       		.byte	0x1
 4163 0a42 4D06     		.2byte	0x64d
 4164 0a44 D5090000 		.4byte	0x9d5
 4165 0a48 02       		.uleb128 0x2
 4166 0a49 91       		.byte	0x91
 4167 0a4a 6C       		.sleb128 -20
 4168 0a4b 15       		.uleb128 0x15
 4169 0a4c 20030000 		.4byte	.LASF96
 4170 0a50 01       		.byte	0x1
 4171 0a51 4F06     		.2byte	0x64f
 4172 0a53 10010000 		.4byte	0x110
 4173 0a57 02       		.uleb128 0x2
 4174 0a58 91       		.byte	0x91
 4175 0a59 74       		.sleb128 -12
 4176 0a5a 00       		.byte	0
 4177 0a5b 1E       		.uleb128 0x1e
 4178 0a5c 75020000 		.4byte	.LASF108
 4179 0a60 01       		.byte	0x1
 4180 0a61 5906     		.2byte	0x659
 4181 0a63 00000000 		.4byte	.LFB141
 4182 0a67 2A000000 		.4byte	.LFE141-.LFB141
 4183 0a6b 01       		.uleb128 0x1
 4184 0a6c 9C       		.byte	0x9c
 4185 0a6d 900A0000 		.4byte	0xa90
 4186 0a71 14       		.uleb128 0x14
 4187 0a72 FE030000 		.4byte	.LASF67
 4188 0a76 01       		.byte	0x1
 4189 0a77 5906     		.2byte	0x659
 4190 0a79 34020000 		.4byte	0x234
 4191 0a7d 02       		.uleb128 0x2
 4192 0a7e 91       		.byte	0x91
 4193 0a7f 6C       		.sleb128 -20
 4194 0a80 15       		.uleb128 0x15
 4195 0a81 A5060000 		.4byte	.LASF73
 4196 0a85 01       		.byte	0x1
 4197 0a86 5B06     		.2byte	0x65b
 4198 0a88 DB030000 		.4byte	0x3db
 4199 0a8c 02       		.uleb128 0x2
 4200 0a8d 91       		.byte	0x91
 4201 0a8e 74       		.sleb128 -12
 4202 0a8f 00       		.byte	0
 4203 0a90 1F       		.uleb128 0x1f
 4204 0a91 2A010000 		.4byte	.LASF103
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 121


 4205 0a95 01       		.byte	0x1
 4206 0a96 A106     		.2byte	0x6a1
 4207 0a98 05010000 		.4byte	0x105
 4208 0a9c 00000000 		.4byte	.LFB142
 4209 0aa0 B8000000 		.4byte	.LFE142-.LFB142
 4210 0aa4 01       		.uleb128 0x1
 4211 0aa5 9C       		.byte	0x9c
 4212 0aa6 F60A0000 		.4byte	0xaf6
 4213 0aaa 14       		.uleb128 0x14
 4214 0aab A5060000 		.4byte	.LASF73
 4215 0aaf 01       		.byte	0x1
 4216 0ab0 A106     		.2byte	0x6a1
 4217 0ab2 DB030000 		.4byte	0x3db
 4218 0ab6 02       		.uleb128 0x2
 4219 0ab7 91       		.byte	0x91
 4220 0ab8 6C       		.sleb128 -20
 4221 0ab9 14       		.uleb128 0x14
 4222 0aba 2E040000 		.4byte	.LASF78
 4223 0abe 01       		.byte	0x1
 4224 0abf A106     		.2byte	0x6a1
 4225 0ac1 C4000000 		.4byte	0xc4
 4226 0ac5 02       		.uleb128 0x2
 4227 0ac6 91       		.byte	0x91
 4228 0ac7 68       		.sleb128 -24
 4229 0ac8 14       		.uleb128 0x14
 4230 0ac9 61060000 		.4byte	.LASF99
 4231 0acd 01       		.byte	0x1
 4232 0ace A106     		.2byte	0x6a1
 4233 0ad0 59050000 		.4byte	0x559
 4234 0ad4 02       		.uleb128 0x2
 4235 0ad5 91       		.byte	0x91
 4236 0ad6 64       		.sleb128 -28
 4237 0ad7 15       		.uleb128 0x15
 4238 0ad8 91020000 		.4byte	.LASF86
 4239 0adc 01       		.byte	0x1
 4240 0add A306     		.2byte	0x6a3
 4241 0adf 05010000 		.4byte	0x105
 4242 0ae3 02       		.uleb128 0x2
 4243 0ae4 91       		.byte	0x91
 4244 0ae5 70       		.sleb128 -16
 4245 0ae6 15       		.uleb128 0x15
 4246 0ae7 85050000 		.4byte	.LASF53
 4247 0aeb 01       		.byte	0x1
 4248 0aec A406     		.2byte	0x6a4
 4249 0aee 10010000 		.4byte	0x110
 4250 0af2 02       		.uleb128 0x2
 4251 0af3 91       		.byte	0x91
 4252 0af4 74       		.sleb128 -12
 4253 0af5 00       		.byte	0
 4254 0af6 16       		.uleb128 0x16
 4255 0af7 E9000000 		.4byte	.LASF101
 4256 0afb 01       		.byte	0x1
 4257 0afc F006     		.2byte	0x6f0
 4258 0afe 00000000 		.4byte	.LFB143
 4259 0b02 4C000000 		.4byte	.LFE143-.LFB143
 4260 0b06 01       		.uleb128 0x1
 4261 0b07 9C       		.byte	0x9c
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 122


 4262 0b08 2B0B0000 		.4byte	0xb2b
 4263 0b0c 14       		.uleb128 0x14
 4264 0b0d A5060000 		.4byte	.LASF73
 4265 0b11 01       		.byte	0x1
 4266 0b12 F006     		.2byte	0x6f0
 4267 0b14 DB030000 		.4byte	0x3db
 4268 0b18 02       		.uleb128 0x2
 4269 0b19 91       		.byte	0x91
 4270 0b1a 74       		.sleb128 -12
 4271 0b1b 14       		.uleb128 0x14
 4272 0b1c A1050000 		.4byte	.LASF90
 4273 0b20 01       		.byte	0x1
 4274 0b21 F006     		.2byte	0x6f0
 4275 0b23 E7070000 		.4byte	0x7e7
 4276 0b27 02       		.uleb128 0x2
 4277 0b28 91       		.byte	0x91
 4278 0b29 70       		.sleb128 -16
 4279 0b2a 00       		.byte	0
 4280 0b2b 16       		.uleb128 0x16
 4281 0b2c F3050000 		.4byte	.LASF102
 4282 0b30 01       		.byte	0x1
 4283 0b31 0207     		.2byte	0x702
 4284 0b33 00000000 		.4byte	.LFB144
 4285 0b37 A4000000 		.4byte	.LFE144-.LFB144
 4286 0b3b 01       		.uleb128 0x1
 4287 0b3c 9C       		.byte	0x9c
 4288 0b3d 870B0000 		.4byte	0xb87
 4289 0b41 14       		.uleb128 0x14
 4290 0b42 A5060000 		.4byte	.LASF73
 4291 0b46 01       		.byte	0x1
 4292 0b47 0207     		.2byte	0x702
 4293 0b49 DB030000 		.4byte	0x3db
 4294 0b4d 02       		.uleb128 0x2
 4295 0b4e 91       		.byte	0x91
 4296 0b4f 6C       		.sleb128 -20
 4297 0b50 1A       		.uleb128 0x1a
 4298 0b51 0C000000 		.4byte	.LBB45
 4299 0b55 42000000 		.4byte	.LBE45-.LBB45
 4300 0b59 6D0B0000 		.4byte	0xb6d
 4301 0b5d 15       		.uleb128 0x15
 4302 0b5e FA010000 		.4byte	.LASF57
 4303 0b62 01       		.byte	0x1
 4304 0b63 0C07     		.2byte	0x70c
 4305 0b65 CB000000 		.4byte	0xcb
 4306 0b69 02       		.uleb128 0x2
 4307 0b6a 91       		.byte	0x91
 4308 0b6b 77       		.sleb128 -9
 4309 0b6c 00       		.byte	0
 4310 0b6d 18       		.uleb128 0x18
 4311 0b6e 56000000 		.4byte	.LBB46
 4312 0b72 42000000 		.4byte	.LBE46-.LBB46
 4313 0b76 15       		.uleb128 0x15
 4314 0b77 03050000 		.4byte	.LASF56
 4315 0b7b 01       		.byte	0x1
 4316 0b7c 5D07     		.2byte	0x75d
 4317 0b7e CB000000 		.4byte	0xcb
 4318 0b82 02       		.uleb128 0x2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 123


 4319 0b83 91       		.byte	0x91
 4320 0b84 76       		.sleb128 -10
 4321 0b85 00       		.byte	0
 4322 0b86 00       		.byte	0
 4323 0b87 1F       		.uleb128 0x1f
 4324 0b88 B1000000 		.4byte	.LASF104
 4325 0b8c 01       		.byte	0x1
 4326 0b8d 7A07     		.2byte	0x77a
 4327 0b8f 05010000 		.4byte	0x105
 4328 0b93 00000000 		.4byte	.LFB145
 4329 0b97 2C000000 		.4byte	.LFE145-.LFB145
 4330 0b9b 01       		.uleb128 0x1
 4331 0b9c 9C       		.byte	0x9c
 4332 0b9d C00B0000 		.4byte	0xbc0
 4333 0ba1 14       		.uleb128 0x14
 4334 0ba2 A5060000 		.4byte	.LASF73
 4335 0ba6 01       		.byte	0x1
 4336 0ba7 7A07     		.2byte	0x77a
 4337 0ba9 C00B0000 		.4byte	0xbc0
 4338 0bad 02       		.uleb128 0x2
 4339 0bae 91       		.byte	0x91
 4340 0baf 6C       		.sleb128 -20
 4341 0bb0 15       		.uleb128 0x15
 4342 0bb1 91020000 		.4byte	.LASF86
 4343 0bb5 01       		.byte	0x1
 4344 0bb6 7C07     		.2byte	0x77c
 4345 0bb8 05010000 		.4byte	0x105
 4346 0bbc 02       		.uleb128 0x2
 4347 0bbd 91       		.byte	0x91
 4348 0bbe 74       		.sleb128 -12
 4349 0bbf 00       		.byte	0
 4350 0bc0 06       		.uleb128 0x6
 4351 0bc1 04       		.byte	0x4
 4352 0bc2 C60B0000 		.4byte	0xbc6
 4353 0bc6 07       		.uleb128 0x7
 4354 0bc7 08030000 		.4byte	0x308
 4355 0bcb 1D       		.uleb128 0x1d
 4356 0bcc 97000000 		.4byte	.LASF105
 4357 0bd0 01       		.byte	0x1
 4358 0bd1 8F07     		.2byte	0x78f
 4359 0bd3 05010000 		.4byte	0x105
 4360 0bd7 00000000 		.4byte	.LFB146
 4361 0bdb 32000000 		.4byte	.LFE146-.LFB146
 4362 0bdf 01       		.uleb128 0x1
 4363 0be0 9C       		.byte	0x9c
 4364 0be1 040C0000 		.4byte	0xc04
 4365 0be5 14       		.uleb128 0x14
 4366 0be6 FE030000 		.4byte	.LASF67
 4367 0bea 01       		.byte	0x1
 4368 0beb 8F07     		.2byte	0x78f
 4369 0bed D5090000 		.4byte	0x9d5
 4370 0bf1 02       		.uleb128 0x2
 4371 0bf2 91       		.byte	0x91
 4372 0bf3 6C       		.sleb128 -20
 4373 0bf4 15       		.uleb128 0x15
 4374 0bf5 91020000 		.4byte	.LASF86
 4375 0bf9 01       		.byte	0x1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 124


 4376 0bfa 9107     		.2byte	0x791
 4377 0bfc 05010000 		.4byte	0x105
 4378 0c00 02       		.uleb128 0x2
 4379 0c01 91       		.byte	0x91
 4380 0c02 74       		.sleb128 -12
 4381 0c03 00       		.byte	0
 4382 0c04 1F       		.uleb128 0x1f
 4383 0c05 3E030000 		.4byte	.LASF106
 4384 0c09 01       		.byte	0x1
 4385 0c0a A107     		.2byte	0x7a1
 4386 0c0c 05010000 		.4byte	0x105
 4387 0c10 00000000 		.4byte	.LFB147
 4388 0c14 30000000 		.4byte	.LFE147-.LFB147
 4389 0c18 01       		.uleb128 0x1
 4390 0c19 9C       		.byte	0x9c
 4391 0c1a 3D0C0000 		.4byte	0xc3d
 4392 0c1e 14       		.uleb128 0x14
 4393 0c1f A5060000 		.4byte	.LASF73
 4394 0c23 01       		.byte	0x1
 4395 0c24 A107     		.2byte	0x7a1
 4396 0c26 C00B0000 		.4byte	0xbc0
 4397 0c2a 02       		.uleb128 0x2
 4398 0c2b 91       		.byte	0x91
 4399 0c2c 6C       		.sleb128 -20
 4400 0c2d 15       		.uleb128 0x15
 4401 0c2e 91020000 		.4byte	.LASF86
 4402 0c32 01       		.byte	0x1
 4403 0c33 A307     		.2byte	0x7a3
 4404 0c35 05010000 		.4byte	0x105
 4405 0c39 02       		.uleb128 0x2
 4406 0c3a 91       		.byte	0x91
 4407 0c3b 74       		.sleb128 -12
 4408 0c3c 00       		.byte	0
 4409 0c3d 1D       		.uleb128 0x1d
 4410 0c3e 1D050000 		.4byte	.LASF107
 4411 0c42 01       		.byte	0x1
 4412 0c43 B607     		.2byte	0x7b6
 4413 0c45 05010000 		.4byte	0x105
 4414 0c49 00000000 		.4byte	.LFB148
 4415 0c4d 36000000 		.4byte	.LFE148-.LFB148
 4416 0c51 01       		.uleb128 0x1
 4417 0c52 9C       		.byte	0x9c
 4418 0c53 760C0000 		.4byte	0xc76
 4419 0c57 14       		.uleb128 0x14
 4420 0c58 FE030000 		.4byte	.LASF67
 4421 0c5c 01       		.byte	0x1
 4422 0c5d B607     		.2byte	0x7b6
 4423 0c5f D5090000 		.4byte	0x9d5
 4424 0c63 02       		.uleb128 0x2
 4425 0c64 91       		.byte	0x91
 4426 0c65 6C       		.sleb128 -20
 4427 0c66 15       		.uleb128 0x15
 4428 0c67 91020000 		.4byte	.LASF86
 4429 0c6b 01       		.byte	0x1
 4430 0c6c B807     		.2byte	0x7b8
 4431 0c6e 05010000 		.4byte	0x105
 4432 0c72 02       		.uleb128 0x2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 125


 4433 0c73 91       		.byte	0x91
 4434 0c74 74       		.sleb128 -12
 4435 0c75 00       		.byte	0
 4436 0c76 20       		.uleb128 0x20
 4437 0c77 D8020000 		.4byte	.LASF109
 4438 0c7b 01       		.byte	0x1
 4439 0c7c DD08     		.2byte	0x8dd
 4440 0c7e 00000000 		.4byte	.LFB149
 4441 0c82 50000000 		.4byte	.LFE149-.LFB149
 4442 0c86 01       		.uleb128 0x1
 4443 0c87 9C       		.byte	0x9c
 4444 0c88 B90C0000 		.4byte	0xcb9
 4445 0c8c 14       		.uleb128 0x14
 4446 0c8d FE030000 		.4byte	.LASF67
 4447 0c91 01       		.byte	0x1
 4448 0c92 DD08     		.2byte	0x8dd
 4449 0c94 34020000 		.4byte	0x234
 4450 0c98 02       		.uleb128 0x2
 4451 0c99 91       		.byte	0x91
 4452 0c9a 6C       		.sleb128 -20
 4453 0c9b 14       		.uleb128 0x14
 4454 0c9c E7050000 		.4byte	.LASF61
 4455 0ca0 01       		.byte	0x1
 4456 0ca1 DD08     		.2byte	0x8dd
 4457 0ca3 B9000000 		.4byte	0xb9
 4458 0ca7 02       		.uleb128 0x2
 4459 0ca8 91       		.byte	0x91
 4460 0ca9 68       		.sleb128 -24
 4461 0caa 21       		.uleb128 0x21
 4462 0cab 757800   		.ascii	"ux\000"
 4463 0cae 01       		.byte	0x1
 4464 0caf DF08     		.2byte	0x8df
 4465 0cb1 10010000 		.4byte	0x110
 4466 0cb5 02       		.uleb128 0x2
 4467 0cb6 91       		.byte	0x91
 4468 0cb7 74       		.sleb128 -12
 4469 0cb8 00       		.byte	0
 4470 0cb9 1D       		.uleb128 0x1d
 4471 0cba CE070000 		.4byte	.LASF110
 4472 0cbe 01       		.byte	0x1
 4473 0cbf FA08     		.2byte	0x8fa
 4474 0cc1 B9000000 		.4byte	0xb9
 4475 0cc5 00000000 		.4byte	.LFB150
 4476 0cc9 4C000000 		.4byte	.LFE150-.LFB150
 4477 0ccd 01       		.uleb128 0x1
 4478 0cce 9C       		.byte	0x9c
 4479 0ccf 000D0000 		.4byte	0xd00
 4480 0cd3 14       		.uleb128 0x14
 4481 0cd4 FE030000 		.4byte	.LASF67
 4482 0cd8 01       		.byte	0x1
 4483 0cd9 FA08     		.2byte	0x8fa
 4484 0cdb 34020000 		.4byte	0x234
 4485 0cdf 02       		.uleb128 0x2
 4486 0ce0 91       		.byte	0x91
 4487 0ce1 6C       		.sleb128 -20
 4488 0ce2 21       		.uleb128 0x21
 4489 0ce3 757800   		.ascii	"ux\000"
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 126


 4490 0ce6 01       		.byte	0x1
 4491 0ce7 FC08     		.2byte	0x8fc
 4492 0ce9 10010000 		.4byte	0x110
 4493 0ced 02       		.uleb128 0x2
 4494 0cee 91       		.byte	0x91
 4495 0cef 74       		.sleb128 -12
 4496 0cf0 15       		.uleb128 0x15
 4497 0cf1 52020000 		.4byte	.LASF111
 4498 0cf5 01       		.byte	0x1
 4499 0cf6 FD08     		.2byte	0x8fd
 4500 0cf8 B9000000 		.4byte	0xb9
 4501 0cfc 02       		.uleb128 0x2
 4502 0cfd 91       		.byte	0x91
 4503 0cfe 70       		.sleb128 -16
 4504 0cff 00       		.byte	0
 4505 0d00 20       		.uleb128 0x20
 4506 0d01 44060000 		.4byte	.LASF112
 4507 0d05 01       		.byte	0x1
 4508 0d06 1609     		.2byte	0x916
 4509 0d08 00000000 		.4byte	.LFB151
 4510 0d0c 54000000 		.4byte	.LFE151-.LFB151
 4511 0d10 01       		.uleb128 0x1
 4512 0d11 9C       		.byte	0x9c
 4513 0d12 340D0000 		.4byte	0xd34
 4514 0d16 14       		.uleb128 0x14
 4515 0d17 FE030000 		.4byte	.LASF67
 4516 0d1b 01       		.byte	0x1
 4517 0d1c 1609     		.2byte	0x916
 4518 0d1e 34020000 		.4byte	0x234
 4519 0d22 02       		.uleb128 0x2
 4520 0d23 91       		.byte	0x91
 4521 0d24 6C       		.sleb128 -20
 4522 0d25 21       		.uleb128 0x21
 4523 0d26 757800   		.ascii	"ux\000"
 4524 0d29 01       		.byte	0x1
 4525 0d2a 1809     		.2byte	0x918
 4526 0d2c 10010000 		.4byte	0x110
 4527 0d30 02       		.uleb128 0x2
 4528 0d31 91       		.byte	0x91
 4529 0d32 74       		.sleb128 -12
 4530 0d33 00       		.byte	0
 4531 0d34 1E       		.uleb128 0x1e
 4532 0d35 DA060000 		.4byte	.LASF113
 4533 0d39 01       		.byte	0x1
 4534 0d3a 3609     		.2byte	0x936
 4535 0d3c 00000000 		.4byte	.LFB152
 4536 0d40 68000000 		.4byte	.LFE152-.LFB152
 4537 0d44 01       		.uleb128 0x1
 4538 0d45 9C       		.byte	0x9c
 4539 0d46 870D0000 		.4byte	0xd87
 4540 0d4a 14       		.uleb128 0x14
 4541 0d4b FE030000 		.4byte	.LASF67
 4542 0d4f 01       		.byte	0x1
 4543 0d50 3609     		.2byte	0x936
 4544 0d52 34020000 		.4byte	0x234
 4545 0d56 02       		.uleb128 0x2
 4546 0d57 91       		.byte	0x91
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 127


 4547 0d58 6C       		.sleb128 -20
 4548 0d59 14       		.uleb128 0x14
 4549 0d5a C3010000 		.4byte	.LASF79
 4550 0d5e 01       		.byte	0x1
 4551 0d5f 3609     		.2byte	0x936
 4552 0d61 1B010000 		.4byte	0x11b
 4553 0d65 02       		.uleb128 0x2
 4554 0d66 91       		.byte	0x91
 4555 0d67 68       		.sleb128 -24
 4556 0d68 14       		.uleb128 0x14
 4557 0d69 32060000 		.4byte	.LASF114
 4558 0d6d 01       		.byte	0x1
 4559 0d6e 3609     		.2byte	0x936
 4560 0d70 59050000 		.4byte	0x559
 4561 0d74 02       		.uleb128 0x2
 4562 0d75 91       		.byte	0x91
 4563 0d76 64       		.sleb128 -28
 4564 0d77 15       		.uleb128 0x15
 4565 0d78 A5060000 		.4byte	.LASF73
 4566 0d7c 01       		.byte	0x1
 4567 0d7d 3809     		.2byte	0x938
 4568 0d7f DB030000 		.4byte	0x3db
 4569 0d83 02       		.uleb128 0x2
 4570 0d84 91       		.byte	0x91
 4571 0d85 74       		.sleb128 -12
 4572 0d86 00       		.byte	0
 4573 0d87 22       		.uleb128 0x22
 4574 0d88 5A010000 		.4byte	.LASF115
 4575 0d8c 09       		.byte	0x9
 4576 0d8d EA07     		.2byte	0x7ea
 4577 0d8f 930D0000 		.4byte	0xd93
 4578 0d93 0E       		.uleb128 0xe
 4579 0d94 E1000000 		.4byte	0xe1
 4580 0d98 23       		.uleb128 0x23
 4581 0d99 43030000 		.4byte	0x343
 4582 0d9d A80D0000 		.4byte	0xda8
 4583 0da1 24       		.uleb128 0x24
 4584 0da2 A9000000 		.4byte	0xa9
 4585 0da6 09       		.byte	0x9
 4586 0da7 00       		.byte	0
 4587 0da8 25       		.uleb128 0x25
 4588 0da9 02060000 		.4byte	.LASF116
 4589 0dad 01       		.byte	0x1
 4590 0dae C4       		.byte	0xc4
 4591 0daf 980D0000 		.4byte	0xd98
 4592 0db3 05       		.uleb128 0x5
 4593 0db4 03       		.byte	0x3
 4594 0db5 00000000 		.4byte	xQueueRegistry
 4595 0db9 00       		.byte	0
 4596              		.section	.debug_abbrev,"",%progbits
 4597              	.Ldebug_abbrev0:
 4598 0000 01       		.uleb128 0x1
 4599 0001 11       		.uleb128 0x11
 4600 0002 01       		.byte	0x1
 4601 0003 25       		.uleb128 0x25
 4602 0004 0E       		.uleb128 0xe
 4603 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 128


 4604 0006 0B       		.uleb128 0xb
 4605 0007 03       		.uleb128 0x3
 4606 0008 0E       		.uleb128 0xe
 4607 0009 1B       		.uleb128 0x1b
 4608 000a 0E       		.uleb128 0xe
 4609 000b 55       		.uleb128 0x55
 4610 000c 17       		.uleb128 0x17
 4611 000d 11       		.uleb128 0x11
 4612 000e 01       		.uleb128 0x1
 4613 000f 10       		.uleb128 0x10
 4614 0010 17       		.uleb128 0x17
 4615 0011 00       		.byte	0
 4616 0012 00       		.byte	0
 4617 0013 02       		.uleb128 0x2
 4618 0014 16       		.uleb128 0x16
 4619 0015 00       		.byte	0
 4620 0016 03       		.uleb128 0x3
 4621 0017 0E       		.uleb128 0xe
 4622 0018 3A       		.uleb128 0x3a
 4623 0019 0B       		.uleb128 0xb
 4624 001a 3B       		.uleb128 0x3b
 4625 001b 0B       		.uleb128 0xb
 4626 001c 49       		.uleb128 0x49
 4627 001d 13       		.uleb128 0x13
 4628 001e 00       		.byte	0
 4629 001f 00       		.byte	0
 4630 0020 03       		.uleb128 0x3
 4631 0021 24       		.uleb128 0x24
 4632 0022 00       		.byte	0
 4633 0023 0B       		.uleb128 0xb
 4634 0024 0B       		.uleb128 0xb
 4635 0025 3E       		.uleb128 0x3e
 4636 0026 0B       		.uleb128 0xb
 4637 0027 03       		.uleb128 0x3
 4638 0028 0E       		.uleb128 0xe
 4639 0029 00       		.byte	0
 4640 002a 00       		.byte	0
 4641 002b 04       		.uleb128 0x4
 4642 002c 24       		.uleb128 0x24
 4643 002d 00       		.byte	0
 4644 002e 0B       		.uleb128 0xb
 4645 002f 0B       		.uleb128 0xb
 4646 0030 3E       		.uleb128 0x3e
 4647 0031 0B       		.uleb128 0xb
 4648 0032 03       		.uleb128 0x3
 4649 0033 08       		.uleb128 0x8
 4650 0034 00       		.byte	0
 4651 0035 00       		.byte	0
 4652 0036 05       		.uleb128 0x5
 4653 0037 0F       		.uleb128 0xf
 4654 0038 00       		.byte	0
 4655 0039 0B       		.uleb128 0xb
 4656 003a 0B       		.uleb128 0xb
 4657 003b 00       		.byte	0
 4658 003c 00       		.byte	0
 4659 003d 06       		.uleb128 0x6
 4660 003e 0F       		.uleb128 0xf
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 129


 4661 003f 00       		.byte	0
 4662 0040 0B       		.uleb128 0xb
 4663 0041 0B       		.uleb128 0xb
 4664 0042 49       		.uleb128 0x49
 4665 0043 13       		.uleb128 0x13
 4666 0044 00       		.byte	0
 4667 0045 00       		.byte	0
 4668 0046 07       		.uleb128 0x7
 4669 0047 26       		.uleb128 0x26
 4670 0048 00       		.byte	0
 4671 0049 49       		.uleb128 0x49
 4672 004a 13       		.uleb128 0x13
 4673 004b 00       		.byte	0
 4674 004c 00       		.byte	0
 4675 004d 08       		.uleb128 0x8
 4676 004e 26       		.uleb128 0x26
 4677 004f 00       		.byte	0
 4678 0050 00       		.byte	0
 4679 0051 00       		.byte	0
 4680 0052 09       		.uleb128 0x9
 4681 0053 13       		.uleb128 0x13
 4682 0054 01       		.byte	0x1
 4683 0055 03       		.uleb128 0x3
 4684 0056 0E       		.uleb128 0xe
 4685 0057 0B       		.uleb128 0xb
 4686 0058 0B       		.uleb128 0xb
 4687 0059 3A       		.uleb128 0x3a
 4688 005a 0B       		.uleb128 0xb
 4689 005b 3B       		.uleb128 0x3b
 4690 005c 0B       		.uleb128 0xb
 4691 005d 01       		.uleb128 0x1
 4692 005e 13       		.uleb128 0x13
 4693 005f 00       		.byte	0
 4694 0060 00       		.byte	0
 4695 0061 0A       		.uleb128 0xa
 4696 0062 0D       		.uleb128 0xd
 4697 0063 00       		.byte	0
 4698 0064 03       		.uleb128 0x3
 4699 0065 0E       		.uleb128 0xe
 4700 0066 3A       		.uleb128 0x3a
 4701 0067 0B       		.uleb128 0xb
 4702 0068 3B       		.uleb128 0x3b
 4703 0069 0B       		.uleb128 0xb
 4704 006a 49       		.uleb128 0x49
 4705 006b 13       		.uleb128 0x13
 4706 006c 38       		.uleb128 0x38
 4707 006d 0B       		.uleb128 0xb
 4708 006e 00       		.byte	0
 4709 006f 00       		.byte	0
 4710 0070 0B       		.uleb128 0xb
 4711 0071 17       		.uleb128 0x17
 4712 0072 01       		.byte	0x1
 4713 0073 0B       		.uleb128 0xb
 4714 0074 0B       		.uleb128 0xb
 4715 0075 3A       		.uleb128 0x3a
 4716 0076 0B       		.uleb128 0xb
 4717 0077 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 130


 4718 0078 0B       		.uleb128 0xb
 4719 0079 01       		.uleb128 0x1
 4720 007a 13       		.uleb128 0x13
 4721 007b 00       		.byte	0
 4722 007c 00       		.byte	0
 4723 007d 0C       		.uleb128 0xc
 4724 007e 0D       		.uleb128 0xd
 4725 007f 00       		.byte	0
 4726 0080 03       		.uleb128 0x3
 4727 0081 0E       		.uleb128 0xe
 4728 0082 3A       		.uleb128 0x3a
 4729 0083 0B       		.uleb128 0xb
 4730 0084 3B       		.uleb128 0x3b
 4731 0085 0B       		.uleb128 0xb
 4732 0086 49       		.uleb128 0x49
 4733 0087 13       		.uleb128 0x13
 4734 0088 00       		.byte	0
 4735 0089 00       		.byte	0
 4736 008a 0D       		.uleb128 0xd
 4737 008b 0D       		.uleb128 0xd
 4738 008c 00       		.byte	0
 4739 008d 03       		.uleb128 0x3
 4740 008e 08       		.uleb128 0x8
 4741 008f 3A       		.uleb128 0x3a
 4742 0090 0B       		.uleb128 0xb
 4743 0091 3B       		.uleb128 0x3b
 4744 0092 0B       		.uleb128 0xb
 4745 0093 49       		.uleb128 0x49
 4746 0094 13       		.uleb128 0x13
 4747 0095 38       		.uleb128 0x38
 4748 0096 0B       		.uleb128 0xb
 4749 0097 00       		.byte	0
 4750 0098 00       		.byte	0
 4751 0099 0E       		.uleb128 0xe
 4752 009a 35       		.uleb128 0x35
 4753 009b 00       		.byte	0
 4754 009c 49       		.uleb128 0x49
 4755 009d 13       		.uleb128 0x13
 4756 009e 00       		.byte	0
 4757 009f 00       		.byte	0
 4758 00a0 0F       		.uleb128 0xf
 4759 00a1 2E       		.uleb128 0x2e
 4760 00a2 01       		.byte	0x1
 4761 00a3 03       		.uleb128 0x3
 4762 00a4 0E       		.uleb128 0xe
 4763 00a5 3A       		.uleb128 0x3a
 4764 00a6 0B       		.uleb128 0xb
 4765 00a7 3B       		.uleb128 0x3b
 4766 00a8 0B       		.uleb128 0xb
 4767 00a9 27       		.uleb128 0x27
 4768 00aa 19       		.uleb128 0x19
 4769 00ab 49       		.uleb128 0x49
 4770 00ac 13       		.uleb128 0x13
 4771 00ad 20       		.uleb128 0x20
 4772 00ae 0B       		.uleb128 0xb
 4773 00af 01       		.uleb128 0x1
 4774 00b0 13       		.uleb128 0x13
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 131


 4775 00b1 00       		.byte	0
 4776 00b2 00       		.byte	0
 4777 00b3 10       		.uleb128 0x10
 4778 00b4 34       		.uleb128 0x34
 4779 00b5 00       		.byte	0
 4780 00b6 03       		.uleb128 0x3
 4781 00b7 0E       		.uleb128 0xe
 4782 00b8 3A       		.uleb128 0x3a
 4783 00b9 0B       		.uleb128 0xb
 4784 00ba 3B       		.uleb128 0x3b
 4785 00bb 0B       		.uleb128 0xb
 4786 00bc 49       		.uleb128 0x49
 4787 00bd 13       		.uleb128 0x13
 4788 00be 00       		.byte	0
 4789 00bf 00       		.byte	0
 4790 00c0 11       		.uleb128 0x11
 4791 00c1 2E       		.uleb128 0x2e
 4792 00c2 01       		.byte	0x1
 4793 00c3 03       		.uleb128 0x3
 4794 00c4 0E       		.uleb128 0xe
 4795 00c5 3A       		.uleb128 0x3a
 4796 00c6 0B       		.uleb128 0xb
 4797 00c7 3B       		.uleb128 0x3b
 4798 00c8 0B       		.uleb128 0xb
 4799 00c9 27       		.uleb128 0x27
 4800 00ca 19       		.uleb128 0x19
 4801 00cb 20       		.uleb128 0x20
 4802 00cc 0B       		.uleb128 0xb
 4803 00cd 01       		.uleb128 0x1
 4804 00ce 13       		.uleb128 0x13
 4805 00cf 00       		.byte	0
 4806 00d0 00       		.byte	0
 4807 00d1 12       		.uleb128 0x12
 4808 00d2 05       		.uleb128 0x5
 4809 00d3 00       		.byte	0
 4810 00d4 03       		.uleb128 0x3
 4811 00d5 0E       		.uleb128 0xe
 4812 00d6 3A       		.uleb128 0x3a
 4813 00d7 0B       		.uleb128 0xb
 4814 00d8 3B       		.uleb128 0x3b
 4815 00d9 0B       		.uleb128 0xb
 4816 00da 49       		.uleb128 0x49
 4817 00db 13       		.uleb128 0x13
 4818 00dc 00       		.byte	0
 4819 00dd 00       		.byte	0
 4820 00de 13       		.uleb128 0x13
 4821 00df 2E       		.uleb128 0x2e
 4822 00e0 01       		.byte	0x1
 4823 00e1 3F       		.uleb128 0x3f
 4824 00e2 19       		.uleb128 0x19
 4825 00e3 03       		.uleb128 0x3
 4826 00e4 0E       		.uleb128 0xe
 4827 00e5 3A       		.uleb128 0x3a
 4828 00e6 0B       		.uleb128 0xb
 4829 00e7 3B       		.uleb128 0x3b
 4830 00e8 05       		.uleb128 0x5
 4831 00e9 27       		.uleb128 0x27
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 132


 4832 00ea 19       		.uleb128 0x19
 4833 00eb 49       		.uleb128 0x49
 4834 00ec 13       		.uleb128 0x13
 4835 00ed 11       		.uleb128 0x11
 4836 00ee 01       		.uleb128 0x1
 4837 00ef 12       		.uleb128 0x12
 4838 00f0 06       		.uleb128 0x6
 4839 00f1 40       		.uleb128 0x40
 4840 00f2 18       		.uleb128 0x18
 4841 00f3 9642     		.uleb128 0x2116
 4842 00f5 19       		.uleb128 0x19
 4843 00f6 01       		.uleb128 0x1
 4844 00f7 13       		.uleb128 0x13
 4845 00f8 00       		.byte	0
 4846 00f9 00       		.byte	0
 4847 00fa 14       		.uleb128 0x14
 4848 00fb 05       		.uleb128 0x5
 4849 00fc 00       		.byte	0
 4850 00fd 03       		.uleb128 0x3
 4851 00fe 0E       		.uleb128 0xe
 4852 00ff 3A       		.uleb128 0x3a
 4853 0100 0B       		.uleb128 0xb
 4854 0101 3B       		.uleb128 0x3b
 4855 0102 05       		.uleb128 0x5
 4856 0103 49       		.uleb128 0x49
 4857 0104 13       		.uleb128 0x13
 4858 0105 02       		.uleb128 0x2
 4859 0106 18       		.uleb128 0x18
 4860 0107 00       		.byte	0
 4861 0108 00       		.byte	0
 4862 0109 15       		.uleb128 0x15
 4863 010a 34       		.uleb128 0x34
 4864 010b 00       		.byte	0
 4865 010c 03       		.uleb128 0x3
 4866 010d 0E       		.uleb128 0xe
 4867 010e 3A       		.uleb128 0x3a
 4868 010f 0B       		.uleb128 0xb
 4869 0110 3B       		.uleb128 0x3b
 4870 0111 05       		.uleb128 0x5
 4871 0112 49       		.uleb128 0x49
 4872 0113 13       		.uleb128 0x13
 4873 0114 02       		.uleb128 0x2
 4874 0115 18       		.uleb128 0x18
 4875 0116 00       		.byte	0
 4876 0117 00       		.byte	0
 4877 0118 16       		.uleb128 0x16
 4878 0119 2E       		.uleb128 0x2e
 4879 011a 01       		.byte	0x1
 4880 011b 03       		.uleb128 0x3
 4881 011c 0E       		.uleb128 0xe
 4882 011d 3A       		.uleb128 0x3a
 4883 011e 0B       		.uleb128 0xb
 4884 011f 3B       		.uleb128 0x3b
 4885 0120 05       		.uleb128 0x5
 4886 0121 27       		.uleb128 0x27
 4887 0122 19       		.uleb128 0x19
 4888 0123 11       		.uleb128 0x11
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 133


 4889 0124 01       		.uleb128 0x1
 4890 0125 12       		.uleb128 0x12
 4891 0126 06       		.uleb128 0x6
 4892 0127 40       		.uleb128 0x40
 4893 0128 18       		.uleb128 0x18
 4894 0129 9642     		.uleb128 0x2116
 4895 012b 19       		.uleb128 0x19
 4896 012c 01       		.uleb128 0x1
 4897 012d 13       		.uleb128 0x13
 4898 012e 00       		.byte	0
 4899 012f 00       		.byte	0
 4900 0130 17       		.uleb128 0x17
 4901 0131 1D       		.uleb128 0x1d
 4902 0132 01       		.byte	0x1
 4903 0133 31       		.uleb128 0x31
 4904 0134 13       		.uleb128 0x13
 4905 0135 11       		.uleb128 0x11
 4906 0136 01       		.uleb128 0x1
 4907 0137 12       		.uleb128 0x12
 4908 0138 06       		.uleb128 0x6
 4909 0139 58       		.uleb128 0x58
 4910 013a 0B       		.uleb128 0xb
 4911 013b 59       		.uleb128 0x59
 4912 013c 05       		.uleb128 0x5
 4913 013d 01       		.uleb128 0x1
 4914 013e 13       		.uleb128 0x13
 4915 013f 00       		.byte	0
 4916 0140 00       		.byte	0
 4917 0141 18       		.uleb128 0x18
 4918 0142 0B       		.uleb128 0xb
 4919 0143 01       		.byte	0x1
 4920 0144 11       		.uleb128 0x11
 4921 0145 01       		.uleb128 0x1
 4922 0146 12       		.uleb128 0x12
 4923 0147 06       		.uleb128 0x6
 4924 0148 00       		.byte	0
 4925 0149 00       		.byte	0
 4926 014a 19       		.uleb128 0x19
 4927 014b 34       		.uleb128 0x34
 4928 014c 00       		.byte	0
 4929 014d 31       		.uleb128 0x31
 4930 014e 13       		.uleb128 0x13
 4931 014f 02       		.uleb128 0x2
 4932 0150 18       		.uleb128 0x18
 4933 0151 00       		.byte	0
 4934 0152 00       		.byte	0
 4935 0153 1A       		.uleb128 0x1a
 4936 0154 0B       		.uleb128 0xb
 4937 0155 01       		.byte	0x1
 4938 0156 11       		.uleb128 0x11
 4939 0157 01       		.uleb128 0x1
 4940 0158 12       		.uleb128 0x12
 4941 0159 06       		.uleb128 0x6
 4942 015a 01       		.uleb128 0x1
 4943 015b 13       		.uleb128 0x13
 4944 015c 00       		.byte	0
 4945 015d 00       		.byte	0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 134


 4946 015e 1B       		.uleb128 0x1b
 4947 015f 1D       		.uleb128 0x1d
 4948 0160 01       		.byte	0x1
 4949 0161 31       		.uleb128 0x31
 4950 0162 13       		.uleb128 0x13
 4951 0163 11       		.uleb128 0x11
 4952 0164 01       		.uleb128 0x1
 4953 0165 12       		.uleb128 0x12
 4954 0166 06       		.uleb128 0x6
 4955 0167 58       		.uleb128 0x58
 4956 0168 0B       		.uleb128 0xb
 4957 0169 59       		.uleb128 0x59
 4958 016a 05       		.uleb128 0x5
 4959 016b 00       		.byte	0
 4960 016c 00       		.byte	0
 4961 016d 1C       		.uleb128 0x1c
 4962 016e 05       		.uleb128 0x5
 4963 016f 00       		.byte	0
 4964 0170 31       		.uleb128 0x31
 4965 0171 13       		.uleb128 0x13
 4966 0172 02       		.uleb128 0x2
 4967 0173 18       		.uleb128 0x18
 4968 0174 00       		.byte	0
 4969 0175 00       		.byte	0
 4970 0176 1D       		.uleb128 0x1d
 4971 0177 2E       		.uleb128 0x2e
 4972 0178 01       		.byte	0x1
 4973 0179 3F       		.uleb128 0x3f
 4974 017a 19       		.uleb128 0x19
 4975 017b 03       		.uleb128 0x3
 4976 017c 0E       		.uleb128 0xe
 4977 017d 3A       		.uleb128 0x3a
 4978 017e 0B       		.uleb128 0xb
 4979 017f 3B       		.uleb128 0x3b
 4980 0180 05       		.uleb128 0x5
 4981 0181 27       		.uleb128 0x27
 4982 0182 19       		.uleb128 0x19
 4983 0183 49       		.uleb128 0x49
 4984 0184 13       		.uleb128 0x13
 4985 0185 11       		.uleb128 0x11
 4986 0186 01       		.uleb128 0x1
 4987 0187 12       		.uleb128 0x12
 4988 0188 06       		.uleb128 0x6
 4989 0189 40       		.uleb128 0x40
 4990 018a 18       		.uleb128 0x18
 4991 018b 9742     		.uleb128 0x2117
 4992 018d 19       		.uleb128 0x19
 4993 018e 01       		.uleb128 0x1
 4994 018f 13       		.uleb128 0x13
 4995 0190 00       		.byte	0
 4996 0191 00       		.byte	0
 4997 0192 1E       		.uleb128 0x1e
 4998 0193 2E       		.uleb128 0x2e
 4999 0194 01       		.byte	0x1
 5000 0195 3F       		.uleb128 0x3f
 5001 0196 19       		.uleb128 0x19
 5002 0197 03       		.uleb128 0x3
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 135


 5003 0198 0E       		.uleb128 0xe
 5004 0199 3A       		.uleb128 0x3a
 5005 019a 0B       		.uleb128 0xb
 5006 019b 3B       		.uleb128 0x3b
 5007 019c 05       		.uleb128 0x5
 5008 019d 27       		.uleb128 0x27
 5009 019e 19       		.uleb128 0x19
 5010 019f 11       		.uleb128 0x11
 5011 01a0 01       		.uleb128 0x1
 5012 01a1 12       		.uleb128 0x12
 5013 01a2 06       		.uleb128 0x6
 5014 01a3 40       		.uleb128 0x40
 5015 01a4 18       		.uleb128 0x18
 5016 01a5 9642     		.uleb128 0x2116
 5017 01a7 19       		.uleb128 0x19
 5018 01a8 01       		.uleb128 0x1
 5019 01a9 13       		.uleb128 0x13
 5020 01aa 00       		.byte	0
 5021 01ab 00       		.byte	0
 5022 01ac 1F       		.uleb128 0x1f
 5023 01ad 2E       		.uleb128 0x2e
 5024 01ae 01       		.byte	0x1
 5025 01af 03       		.uleb128 0x3
 5026 01b0 0E       		.uleb128 0xe
 5027 01b1 3A       		.uleb128 0x3a
 5028 01b2 0B       		.uleb128 0xb
 5029 01b3 3B       		.uleb128 0x3b
 5030 01b4 05       		.uleb128 0x5
 5031 01b5 27       		.uleb128 0x27
 5032 01b6 19       		.uleb128 0x19
 5033 01b7 49       		.uleb128 0x49
 5034 01b8 13       		.uleb128 0x13
 5035 01b9 11       		.uleb128 0x11
 5036 01ba 01       		.uleb128 0x1
 5037 01bb 12       		.uleb128 0x12
 5038 01bc 06       		.uleb128 0x6
 5039 01bd 40       		.uleb128 0x40
 5040 01be 18       		.uleb128 0x18
 5041 01bf 9642     		.uleb128 0x2116
 5042 01c1 19       		.uleb128 0x19
 5043 01c2 01       		.uleb128 0x1
 5044 01c3 13       		.uleb128 0x13
 5045 01c4 00       		.byte	0
 5046 01c5 00       		.byte	0
 5047 01c6 20       		.uleb128 0x20
 5048 01c7 2E       		.uleb128 0x2e
 5049 01c8 01       		.byte	0x1
 5050 01c9 3F       		.uleb128 0x3f
 5051 01ca 19       		.uleb128 0x19
 5052 01cb 03       		.uleb128 0x3
 5053 01cc 0E       		.uleb128 0xe
 5054 01cd 3A       		.uleb128 0x3a
 5055 01ce 0B       		.uleb128 0xb
 5056 01cf 3B       		.uleb128 0x3b
 5057 01d0 05       		.uleb128 0x5
 5058 01d1 27       		.uleb128 0x27
 5059 01d2 19       		.uleb128 0x19
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 136


 5060 01d3 11       		.uleb128 0x11
 5061 01d4 01       		.uleb128 0x1
 5062 01d5 12       		.uleb128 0x12
 5063 01d6 06       		.uleb128 0x6
 5064 01d7 40       		.uleb128 0x40
 5065 01d8 18       		.uleb128 0x18
 5066 01d9 9742     		.uleb128 0x2117
 5067 01db 19       		.uleb128 0x19
 5068 01dc 01       		.uleb128 0x1
 5069 01dd 13       		.uleb128 0x13
 5070 01de 00       		.byte	0
 5071 01df 00       		.byte	0
 5072 01e0 21       		.uleb128 0x21
 5073 01e1 34       		.uleb128 0x34
 5074 01e2 00       		.byte	0
 5075 01e3 03       		.uleb128 0x3
 5076 01e4 08       		.uleb128 0x8
 5077 01e5 3A       		.uleb128 0x3a
 5078 01e6 0B       		.uleb128 0xb
 5079 01e7 3B       		.uleb128 0x3b
 5080 01e8 05       		.uleb128 0x5
 5081 01e9 49       		.uleb128 0x49
 5082 01ea 13       		.uleb128 0x13
 5083 01eb 02       		.uleb128 0x2
 5084 01ec 18       		.uleb128 0x18
 5085 01ed 00       		.byte	0
 5086 01ee 00       		.byte	0
 5087 01ef 22       		.uleb128 0x22
 5088 01f0 34       		.uleb128 0x34
 5089 01f1 00       		.byte	0
 5090 01f2 03       		.uleb128 0x3
 5091 01f3 0E       		.uleb128 0xe
 5092 01f4 3A       		.uleb128 0x3a
 5093 01f5 0B       		.uleb128 0xb
 5094 01f6 3B       		.uleb128 0x3b
 5095 01f7 05       		.uleb128 0x5
 5096 01f8 49       		.uleb128 0x49
 5097 01f9 13       		.uleb128 0x13
 5098 01fa 3F       		.uleb128 0x3f
 5099 01fb 19       		.uleb128 0x19
 5100 01fc 3C       		.uleb128 0x3c
 5101 01fd 19       		.uleb128 0x19
 5102 01fe 00       		.byte	0
 5103 01ff 00       		.byte	0
 5104 0200 23       		.uleb128 0x23
 5105 0201 01       		.uleb128 0x1
 5106 0202 01       		.byte	0x1
 5107 0203 49       		.uleb128 0x49
 5108 0204 13       		.uleb128 0x13
 5109 0205 01       		.uleb128 0x1
 5110 0206 13       		.uleb128 0x13
 5111 0207 00       		.byte	0
 5112 0208 00       		.byte	0
 5113 0209 24       		.uleb128 0x24
 5114 020a 21       		.uleb128 0x21
 5115 020b 00       		.byte	0
 5116 020c 49       		.uleb128 0x49
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 137


 5117 020d 13       		.uleb128 0x13
 5118 020e 2F       		.uleb128 0x2f
 5119 020f 0B       		.uleb128 0xb
 5120 0210 00       		.byte	0
 5121 0211 00       		.byte	0
 5122 0212 25       		.uleb128 0x25
 5123 0213 34       		.uleb128 0x34
 5124 0214 00       		.byte	0
 5125 0215 03       		.uleb128 0x3
 5126 0216 0E       		.uleb128 0xe
 5127 0217 3A       		.uleb128 0x3a
 5128 0218 0B       		.uleb128 0xb
 5129 0219 3B       		.uleb128 0x3b
 5130 021a 0B       		.uleb128 0xb
 5131 021b 49       		.uleb128 0x49
 5132 021c 13       		.uleb128 0x13
 5133 021d 3F       		.uleb128 0x3f
 5134 021e 19       		.uleb128 0x19
 5135 021f 02       		.uleb128 0x2
 5136 0220 18       		.uleb128 0x18
 5137 0221 00       		.byte	0
 5138 0222 00       		.byte	0
 5139 0223 00       		.byte	0
 5140              		.section	.debug_aranges,"",%progbits
 5141 0000 D4000000 		.4byte	0xd4
 5142 0004 0200     		.2byte	0x2
 5143 0006 00000000 		.4byte	.Ldebug_info0
 5144 000a 04       		.byte	0x4
 5145 000b 00       		.byte	0
 5146 000c 0000     		.2byte	0
 5147 000e 0000     		.2byte	0
 5148 0010 00000000 		.4byte	.LFB129
 5149 0014 C0000000 		.4byte	.LFE129-.LFB129
 5150 0018 00000000 		.4byte	.LFB130
 5151 001c 62000000 		.4byte	.LFE130-.LFB130
 5152 0020 00000000 		.4byte	.LFB131
 5153 0024 3E000000 		.4byte	.LFE131-.LFB131
 5154 0028 00000000 		.4byte	.LFB132
 5155 002c B4010000 		.4byte	.LFE132-.LFB132
 5156 0030 00000000 		.4byte	.LFB133
 5157 0034 F4000000 		.4byte	.LFE133-.LFB133
 5158 0038 00000000 		.4byte	.LFB134
 5159 003c DE000000 		.4byte	.LFE134-.LFB134
 5160 0040 00000000 		.4byte	.LFB135
 5161 0044 C8010000 		.4byte	.LFE135-.LFB135
 5162 0048 00000000 		.4byte	.LFB136
 5163 004c D6000000 		.4byte	.LFE136-.LFB136
 5164 0050 00000000 		.4byte	.LFB137
 5165 0054 9A000000 		.4byte	.LFE137-.LFB137
 5166 0058 00000000 		.4byte	.LFB138
 5167 005c 2A000000 		.4byte	.LFE138-.LFB138
 5168 0060 00000000 		.4byte	.LFB139
 5169 0064 34000000 		.4byte	.LFE139-.LFB139
 5170 0068 00000000 		.4byte	.LFB140
 5171 006c 26000000 		.4byte	.LFE140-.LFB140
 5172 0070 00000000 		.4byte	.LFB141
 5173 0074 2A000000 		.4byte	.LFE141-.LFB141
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 138


 5174 0078 00000000 		.4byte	.LFB142
 5175 007c B8000000 		.4byte	.LFE142-.LFB142
 5176 0080 00000000 		.4byte	.LFB143
 5177 0084 4C000000 		.4byte	.LFE143-.LFB143
 5178 0088 00000000 		.4byte	.LFB144
 5179 008c A4000000 		.4byte	.LFE144-.LFB144
 5180 0090 00000000 		.4byte	.LFB145
 5181 0094 2C000000 		.4byte	.LFE145-.LFB145
 5182 0098 00000000 		.4byte	.LFB146
 5183 009c 32000000 		.4byte	.LFE146-.LFB146
 5184 00a0 00000000 		.4byte	.LFB147
 5185 00a4 30000000 		.4byte	.LFE147-.LFB147
 5186 00a8 00000000 		.4byte	.LFB148
 5187 00ac 36000000 		.4byte	.LFE148-.LFB148
 5188 00b0 00000000 		.4byte	.LFB149
 5189 00b4 50000000 		.4byte	.LFE149-.LFB149
 5190 00b8 00000000 		.4byte	.LFB150
 5191 00bc 4C000000 		.4byte	.LFE150-.LFB150
 5192 00c0 00000000 		.4byte	.LFB151
 5193 00c4 54000000 		.4byte	.LFE151-.LFB151
 5194 00c8 00000000 		.4byte	.LFB152
 5195 00cc 68000000 		.4byte	.LFE152-.LFB152
 5196 00d0 00000000 		.4byte	0
 5197 00d4 00000000 		.4byte	0
 5198              		.section	.debug_ranges,"",%progbits
 5199              	.Ldebug_ranges0:
 5200 0000 00000000 		.4byte	.LFB129
 5201 0004 C0000000 		.4byte	.LFE129
 5202 0008 00000000 		.4byte	.LFB130
 5203 000c 62000000 		.4byte	.LFE130
 5204 0010 00000000 		.4byte	.LFB131
 5205 0014 3E000000 		.4byte	.LFE131
 5206 0018 00000000 		.4byte	.LFB132
 5207 001c B4010000 		.4byte	.LFE132
 5208 0020 00000000 		.4byte	.LFB133
 5209 0024 F4000000 		.4byte	.LFE133
 5210 0028 00000000 		.4byte	.LFB134
 5211 002c DE000000 		.4byte	.LFE134
 5212 0030 00000000 		.4byte	.LFB135
 5213 0034 C8010000 		.4byte	.LFE135
 5214 0038 00000000 		.4byte	.LFB136
 5215 003c D6000000 		.4byte	.LFE136
 5216 0040 00000000 		.4byte	.LFB137
 5217 0044 9A000000 		.4byte	.LFE137
 5218 0048 00000000 		.4byte	.LFB138
 5219 004c 2A000000 		.4byte	.LFE138
 5220 0050 00000000 		.4byte	.LFB139
 5221 0054 34000000 		.4byte	.LFE139
 5222 0058 00000000 		.4byte	.LFB140
 5223 005c 26000000 		.4byte	.LFE140
 5224 0060 00000000 		.4byte	.LFB141
 5225 0064 2A000000 		.4byte	.LFE141
 5226 0068 00000000 		.4byte	.LFB142
 5227 006c B8000000 		.4byte	.LFE142
 5228 0070 00000000 		.4byte	.LFB143
 5229 0074 4C000000 		.4byte	.LFE143
 5230 0078 00000000 		.4byte	.LFB144
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 139


 5231 007c A4000000 		.4byte	.LFE144
 5232 0080 00000000 		.4byte	.LFB145
 5233 0084 2C000000 		.4byte	.LFE145
 5234 0088 00000000 		.4byte	.LFB146
 5235 008c 32000000 		.4byte	.LFE146
 5236 0090 00000000 		.4byte	.LFB147
 5237 0094 30000000 		.4byte	.LFE147
 5238 0098 00000000 		.4byte	.LFB148
 5239 009c 36000000 		.4byte	.LFE148
 5240 00a0 00000000 		.4byte	.LFB149
 5241 00a4 50000000 		.4byte	.LFE149
 5242 00a8 00000000 		.4byte	.LFB150
 5243 00ac 4C000000 		.4byte	.LFE150
 5244 00b0 00000000 		.4byte	.LFB151
 5245 00b4 54000000 		.4byte	.LFE151
 5246 00b8 00000000 		.4byte	.LFB152
 5247 00bc 68000000 		.4byte	.LFE152
 5248 00c0 00000000 		.4byte	0
 5249 00c4 00000000 		.4byte	0
 5250              		.section	.debug_line,"",%progbits
 5251              	.Ldebug_line0:
 5252 0000 78080000 		.section	.debug_str,"MS",%progbits,1
 5252      0200BE02 
 5252      00000201 
 5252      FB0E0D00 
 5252      01010101 
 5253              	.LASF65:
 5254 0000 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 5254      6967696E 
 5254      616C4241 
 5254      53455052 
 5254      4900
 5255              	.LASF72:
 5256 0012 75635175 		.ascii	"ucQueueType\000"
 5256      65756554 
 5256      79706500 
 5257              	.LASF84:
 5258 001e 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 5258      75654765 
 5258      6E657269 
 5258      6353656E 
 5258      6446726F 
 5259              	.LASF95:
 5260 0037 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 5260      6575654D 
 5260      65737361 
 5260      67657357 
 5260      61697469 
 5261              	.LASF3:
 5262 004e 73697A65 		.ascii	"size_t\000"
 5262      5F7400
 5263              	.LASF34:
 5264 0055 4D696E69 		.ascii	"MiniListItem_t\000"
 5264      4C697374 
 5264      4974656D 
 5264      5F7400
 5265              	.LASF43:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 140


 5266 0064 54696D65 		.ascii	"TimeOut_t\000"
 5266      4F75745F 
 5266      7400
 5267              	.LASF122:
 5268 006e 756C4E65 		.ascii	"ulNewMaskValue\000"
 5268      774D6173 
 5268      6B56616C 
 5268      756500
 5269              	.LASF85:
 5270 007d 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 5270      67686572 
 5270      5072696F 
 5270      72697479 
 5270      5461736B 
 5271              	.LASF105:
 5272 0097 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 5272      75654973 
 5272      51756575 
 5272      65456D70 
 5272      74794672 
 5273              	.LASF104:
 5274 00b1 70727649 		.ascii	"prvIsQueueEmpty\000"
 5274      73517565 
 5274      7565456D 
 5274      70747900 
 5275              	.LASF94:
 5276 00c1 78517565 		.ascii	"xQueuePeekFromISR\000"
 5276      75655065 
 5276      656B4672 
 5276      6F6D4953 
 5276      5200
 5277              	.LASF11:
 5278 00d3 6C6F6E67 		.ascii	"long int\000"
 5278      20696E74 
 5278      00
 5279              	.LASF66:
 5280 00dc 756C4E65 		.ascii	"ulNewBASEPRI\000"
 5280      77424153 
 5280      45505249 
 5280      00
 5281              	.LASF101:
 5282 00e9 70727643 		.ascii	"prvCopyDataFromQueue\000"
 5282      6F707944 
 5282      61746146 
 5282      726F6D51 
 5282      75657565 
 5283              	.LASF74:
 5284 00fe 70784E65 		.ascii	"pxNewQueue\000"
 5284      77517565 
 5284      756500
 5285              	.LASF14:
 5286 0109 6C6F6E67 		.ascii	"long long unsigned int\000"
 5286      206C6F6E 
 5286      6720756E 
 5286      7369676E 
 5286      65642069 
 5287              	.LASF68:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 141


 5288 0120 784E6577 		.ascii	"xNewQueue\000"
 5288      51756575 
 5288      6500
 5289              	.LASF103:
 5290 012a 70727643 		.ascii	"prvCopyDataToQueue\000"
 5290      6F707944 
 5290      61746154 
 5290      6F517565 
 5290      756500
 5291              	.LASF60:
 5292 013d 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 5292      455F5245 
 5292      47495354 
 5292      52595F49 
 5292      54454D00 
 5293              	.LASF4:
 5294 0151 5F5F696E 		.ascii	"__int8_t\000"
 5294      74385F74 
 5294      00
 5295              	.LASF115:
 5296 015a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5296      52784275 
 5296      66666572 
 5296      00
 5297              	.LASF40:
 5298 0167 7854494D 		.ascii	"xTIME_OUT\000"
 5298      455F4F55 
 5298      5400
 5299              	.LASF33:
 5300 0171 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 5300      495F4C49 
 5300      53545F49 
 5300      54454D00 
 5301              	.LASF89:
 5302 0181 78517565 		.ascii	"xQueueGenericReceive\000"
 5302      75654765 
 5302      6E657269 
 5302      63526563 
 5302      65697665 
 5303              	.LASF1:
 5304 0196 6C6F6E67 		.ascii	"long long int\000"
 5304      206C6F6E 
 5304      6720696E 
 5304      7400
 5305              	.LASF5:
 5306 01a4 7369676E 		.ascii	"signed char\000"
 5306      65642063 
 5306      68617200 
 5307              	.LASF63:
 5308 01b0 78517565 		.ascii	"xQueueRegistryItem\000"
 5308      75655265 
 5308      67697374 
 5308      72794974 
 5308      656D00
 5309              	.LASF79:
 5310 01c3 78546963 		.ascii	"xTicksToWait\000"
 5310      6B73546F 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 142


 5310      57616974 
 5310      00
 5311              	.LASF92:
 5312 01d0 70634F72 		.ascii	"pcOriginalReadPosition\000"
 5312      6967696E 
 5312      616C5265 
 5312      6164506F 
 5312      73697469 
 5313              	.LASF120:
 5314 01e7 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 5314      72745261 
 5314      69736542 
 5314      41534550 
 5314      524900
 5315              	.LASF57:
 5316 01fa 6354784C 		.ascii	"cTxLock\000"
 5316      6F636B00 
 5317              	.LASF38:
 5318 0202 784C6973 		.ascii	"xListEnd\000"
 5318      74456E64 
 5318      00
 5319              	.LASF25:
 5320 020b 5469636B 		.ascii	"TickType_t\000"
 5320      54797065 
 5320      5F7400
 5321              	.LASF22:
 5322 0216 646F7562 		.ascii	"double\000"
 5322      6C6500
 5323              	.LASF45:
 5324 021d 70635265 		.ascii	"pcReadFrom\000"
 5324      61644672 
 5324      6F6D00
 5325              	.LASF23:
 5326 0228 42617365 		.ascii	"BaseType_t\000"
 5326      54797065 
 5326      5F7400
 5327              	.LASF83:
 5328 0233 7854696D 		.ascii	"xTimeOut\000"
 5328      654F7574 
 5328      00
 5329              	.LASF100:
 5330 023c 70727649 		.ascii	"prvInitialiseNewQueue\000"
 5330      6E697469 
 5330      616C6973 
 5330      654E6577 
 5330      51756575 
 5331              	.LASF111:
 5332 0252 70635265 		.ascii	"pcReturn\000"
 5332      7475726E 
 5332      00
 5333              	.LASF12:
 5334 025b 5F5F7569 		.ascii	"__uint32_t\000"
 5334      6E743332 
 5334      5F7400
 5335              	.LASF41:
 5336 0266 784F7665 		.ascii	"xOverflowCount\000"
 5336      72666C6F 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 143


 5336      77436F75 
 5336      6E7400
 5337              	.LASF108:
 5338 0275 76517565 		.ascii	"vQueueDelete\000"
 5338      75654465 
 5338      6C657465 
 5338      00
 5339              	.LASF48:
 5340 0282 70634865 		.ascii	"pcHead\000"
 5340      616400
 5341              	.LASF29:
 5342 0289 70764F77 		.ascii	"pvOwner\000"
 5342      6E657200 
 5343              	.LASF86:
 5344 0291 78526574 		.ascii	"xReturn\000"
 5344      75726E00 
 5345              	.LASF42:
 5346 0299 7854696D 		.ascii	"xTimeOnEntering\000"
 5346      654F6E45 
 5346      6E746572 
 5346      696E6700 
 5347              	.LASF36:
 5348 02a9 75784E75 		.ascii	"uxNumberOfItems\000"
 5348      6D626572 
 5348      4F664974 
 5348      656D7300 
 5349              	.LASF13:
 5350 02b9 6C6F6E67 		.ascii	"long unsigned int\000"
 5350      20756E73 
 5350      69676E65 
 5350      6420696E 
 5350      7400
 5351              	.LASF91:
 5352 02cb 784A7573 		.ascii	"xJustPeeking\000"
 5352      74506565 
 5352      6B696E67 
 5352      00
 5353              	.LASF109:
 5354 02d8 76517565 		.ascii	"vQueueAddToRegistry\000"
 5354      75654164 
 5354      64546F52 
 5354      65676973 
 5354      74727900 
 5355              	.LASF77:
 5356 02ec 78517565 		.ascii	"xQueueGenericSend\000"
 5356      75654765 
 5356      6E657269 
 5356      6353656E 
 5356      6400
 5357              	.LASF9:
 5358 02fe 73686F72 		.ascii	"short unsigned int\000"
 5358      7420756E 
 5358      7369676E 
 5358      65642069 
 5358      6E7400
 5359              	.LASF82:
 5360 0311 78596965 		.ascii	"xYieldRequired\000"
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 144


 5360      6C645265 
 5360      71756972 
 5360      656400
 5361              	.LASF96:
 5362 0320 75785265 		.ascii	"uxReturn\000"
 5362      7475726E 
 5362      00
 5363              	.LASF93:
 5364 0329 78517565 		.ascii	"xQueueReceiveFromISR\000"
 5364      75655265 
 5364      63656976 
 5364      6546726F 
 5364      6D495352 
 5365              	.LASF106:
 5366 033e 70727649 		.ascii	"prvIsQueueFull\000"
 5366      73517565 
 5366      75654675 
 5366      6C6C00
 5367              	.LASF119:
 5368 034d 433A5C55 		.ascii	"C:\\Users\\ikomb\\Documents\\PSoC Creator\\CE222221"
 5368      73657273 
 5368      5C696B6F 
 5368      6D625C44 
 5368      6F63756D 
 5369 037b 5F566F69 		.ascii	"_Voice_Recorder01\\CE222221_Voice_Recorder01.cydsn\000"
 5369      63655F52 
 5369      65636F72 
 5369      64657230 
 5369      315C4345 
 5370              	.LASF54:
 5371 03ad 75784C65 		.ascii	"uxLength\000"
 5371      6E677468 
 5371      00
 5372              	.LASF59:
 5373 03b6 51756575 		.ascii	"Queue_t\000"
 5373      655F7400 
 5374              	.LASF71:
 5375 03be 75785175 		.ascii	"uxQueueLength\000"
 5375      6575654C 
 5375      656E6774 
 5375      6800
 5376              	.LASF52:
 5377 03cc 78546173 		.ascii	"xTasksWaitingToReceive\000"
 5377      6B735761 
 5377      6974696E 
 5377      67546F52 
 5377      65636569 
 5378              	.LASF121:
 5379 03e3 76506F72 		.ascii	"vPortSetBASEPRI\000"
 5379      74536574 
 5379      42415345 
 5379      50524900 
 5380              	.LASF31:
 5381 03f3 4C697374 		.ascii	"ListItem_t\000"
 5381      4974656D 
 5381      5F7400
 5382              	.LASF67:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 145


 5383 03fe 78517565 		.ascii	"xQueue\000"
 5383      756500
 5384              	.LASF28:
 5385 0405 70785072 		.ascii	"pxPrevious\000"
 5385      6576696F 
 5385      757300
 5386              	.LASF98:
 5387 0410 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 5387      6575654D 
 5387      65737361 
 5387      67657357 
 5387      61697469 
 5388              	.LASF78:
 5389 042e 70764974 		.ascii	"pvItemToQueue\000"
 5389      656D546F 
 5389      51756575 
 5389      6500
 5390              	.LASF21:
 5391 043c 666C6F61 		.ascii	"float\000"
 5391      7400
 5392              	.LASF118:
 5393 0442 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0"
 5393      72617465 
 5393      645F536F 
 5393      75726365 
 5393      5C50536F 
 5394 0470 5C536F75 		.ascii	"\\Source\\queue.c\000"
 5394      7263655C 
 5394      71756575 
 5394      652E6300 
 5395              	.LASF58:
 5396 0480 78515545 		.ascii	"xQUEUE\000"
 5396      554500
 5397              	.LASF37:
 5398 0487 7078496E 		.ascii	"pxIndex\000"
 5398      64657800 
 5399              	.LASF30:
 5400 048f 7076436F 		.ascii	"pvContainer\000"
 5400      6E746169 
 5400      6E657200 
 5401              	.LASF62:
 5402 049b 7848616E 		.ascii	"xHandle\000"
 5402      646C6500 
 5403              	.LASF81:
 5404 04a3 78456E74 		.ascii	"xEntryTimeSet\000"
 5404      72795469 
 5404      6D655365 
 5404      7400
 5405              	.LASF47:
 5406 04b1 51756575 		.ascii	"QueueDefinition\000"
 5406      65446566 
 5406      696E6974 
 5406      696F6E00 
 5407              	.LASF19:
 5408 04c1 696E7433 		.ascii	"int32_t\000"
 5408      325F7400 
 5409              	.LASF7:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 146


 5410 04c9 756E7369 		.ascii	"unsigned char\000"
 5410      676E6564 
 5410      20636861 
 5410      7200
 5411              	.LASF0:
 5412 04d7 756E7369 		.ascii	"unsigned int\000"
 5412      676E6564 
 5412      20696E74 
 5412      00
 5413              	.LASF46:
 5414 04e4 75785265 		.ascii	"uxRecursiveCallCount\000"
 5414      63757273 
 5414      69766543 
 5414      616C6C43 
 5414      6F756E74 
 5415              	.LASF8:
 5416 04f9 73686F72 		.ascii	"short int\000"
 5416      7420696E 
 5416      7400
 5417              	.LASF56:
 5418 0503 6352784C 		.ascii	"cRxLock\000"
 5418      6F636B00 
 5419              	.LASF88:
 5420 050b 78517565 		.ascii	"xQueueGiveFromISR\000"
 5420      75654769 
 5420      76654672 
 5420      6F6D4953 
 5420      5200
 5421              	.LASF107:
 5422 051d 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 5422      75654973 
 5422      51756575 
 5422      6546756C 
 5422      6C46726F 
 5423              	.LASF70:
 5424 0536 78517565 		.ascii	"xQueueGenericCreate\000"
 5424      75654765 
 5424      6E657269 
 5424      63437265 
 5424      61746500 
 5425              	.LASF35:
 5426 054a 784C4953 		.ascii	"xLIST\000"
 5426      5400
 5427              	.LASF39:
 5428 0550 4C697374 		.ascii	"List_t\000"
 5428      5F7400
 5429              	.LASF87:
 5430 0557 75785361 		.ascii	"uxSavedInterruptStatus\000"
 5430      76656449 
 5430      6E746572 
 5430      72757074 
 5430      53746174 
 5431              	.LASF44:
 5432 056e 51756575 		.ascii	"QueueHandle_t\000"
 5432      6548616E 
 5432      646C655F 
 5432      7400
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 147


 5433              	.LASF20:
 5434 057c 75696E74 		.ascii	"uint32_t\000"
 5434      33325F74 
 5434      00
 5435              	.LASF53:
 5436 0585 75784D65 		.ascii	"uxMessagesWaiting\000"
 5436      73736167 
 5436      65735761 
 5436      6974696E 
 5436      6700
 5437              	.LASF6:
 5438 0597 5F5F7569 		.ascii	"__uint8_t\000"
 5438      6E74385F 
 5438      7400
 5439              	.LASF90:
 5440 05a1 70764275 		.ascii	"pvBuffer\000"
 5440      66666572 
 5440      00
 5441              	.LASF2:
 5442 05aa 6C6F6E67 		.ascii	"long double\000"
 5442      20646F75 
 5442      626C6500 
 5443              	.LASF69:
 5444 05b6 78517565 		.ascii	"xQueueGenericReset\000"
 5444      75654765 
 5444      6E657269 
 5444      63526573 
 5444      657400
 5445              	.LASF16:
 5446 05c9 63686172 		.ascii	"char\000"
 5446      00
 5447              	.LASF80:
 5448 05ce 78436F70 		.ascii	"xCopyPosition\000"
 5448      79506F73 
 5448      6974696F 
 5448      6E00
 5449              	.LASF26:
 5450 05dc 78497465 		.ascii	"xItemValue\000"
 5450      6D56616C 
 5450      756500
 5451              	.LASF61:
 5452 05e7 70635175 		.ascii	"pcQueueName\000"
 5452      6575654E 
 5452      616D6500 
 5453              	.LASF102:
 5454 05f3 70727655 		.ascii	"prvUnlockQueue\000"
 5454      6E6C6F63 
 5454      6B517565 
 5454      756500
 5455              	.LASF116:
 5456 0602 78517565 		.ascii	"xQueueRegistry\000"
 5456      75655265 
 5456      67697374 
 5456      727900
 5457              	.LASF49:
 5458 0611 70635461 		.ascii	"pcTail\000"
 5458      696C00
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 148


 5459              	.LASF10:
 5460 0618 5F5F696E 		.ascii	"__int32_t\000"
 5460      7433325F 
 5460      7400
 5461              	.LASF76:
 5462 0622 70756351 		.ascii	"pucQueueStorage\000"
 5462      75657565 
 5462      53746F72 
 5462      61676500 
 5463              	.LASF114:
 5464 0632 78576169 		.ascii	"xWaitIndefinitely\000"
 5464      74496E64 
 5464      6566696E 
 5464      6974656C 
 5464      7900
 5465              	.LASF112:
 5466 0644 76517565 		.ascii	"vQueueUnregisterQueue\000"
 5466      7565556E 
 5466      72656769 
 5466      73746572 
 5466      51756575 
 5467              	.LASF17:
 5468 065a 696E7438 		.ascii	"int8_t\000"
 5468      5F7400
 5469              	.LASF99:
 5470 0661 78506F73 		.ascii	"xPosition\000"
 5470      6974696F 
 5470      6E00
 5471              	.LASF64:
 5472 066b 51756575 		.ascii	"QueueRegistryItem_t\000"
 5472      65526567 
 5472      69737472 
 5472      79497465 
 5472      6D5F7400 
 5473              	.LASF51:
 5474 067f 78546173 		.ascii	"xTasksWaitingToSend\000"
 5474      6B735761 
 5474      6974696E 
 5474      67546F53 
 5474      656E6400 
 5475              	.LASF75:
 5476 0693 78517565 		.ascii	"xQueueSizeInBytes\000"
 5476      75655369 
 5476      7A65496E 
 5476      42797465 
 5476      7300
 5477              	.LASF73:
 5478 06a5 70785175 		.ascii	"pxQueue\000"
 5478      65756500 
 5479              	.LASF18:
 5480 06ad 75696E74 		.ascii	"uint8_t\000"
 5480      385F7400 
 5481              	.LASF50:
 5482 06b5 70635772 		.ascii	"pcWriteTo\000"
 5482      69746554 
 5482      6F00
 5483              	.LASF55:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 149


 5484 06bf 75784974 		.ascii	"uxItemSize\000"
 5484      656D5369 
 5484      7A6500
 5485              	.LASF15:
 5486 06ca 73697A65 		.ascii	"sizetype\000"
 5486      74797065 
 5486      00
 5487              	.LASF27:
 5488 06d3 70784E65 		.ascii	"pxNext\000"
 5488      787400
 5489              	.LASF113:
 5490 06da 76517565 		.ascii	"vQueueWaitForMessageRestricted\000"
 5490      75655761 
 5490      6974466F 
 5490      724D6573 
 5490      73616765 
 5491              	.LASF32:
 5492 06f9 784C4953 		.ascii	"xLIST_ITEM\000"
 5492      545F4954 
 5492      454D00
 5493              	.LASF117:
 5494 0704 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5494      43313120 
 5494      352E342E 
 5494      31203230 
 5494      31363036 
 5495 0737 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 5495      20726576 
 5495      6973696F 
 5495      6E203233 
 5495      37373135 
 5496 076a 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 5496      70202D6D 
 5496      6670753D 
 5496      66707634 
 5496      2D73702D 
 5497 079d 65637469 		.ascii	"ections -ffat-lto-objects\000"
 5497      6F6E7320 
 5497      2D666661 
 5497      742D6C74 
 5497      6F2D6F62 
 5498              	.LASF97:
 5499 07b7 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 5499      65756553 
 5499      70616365 
 5499      73417661 
 5499      696C6162 
 5500              	.LASF110:
 5501 07ce 70635175 		.ascii	"pcQueueGetName\000"
 5501      65756547 
 5501      65744E61 
 5501      6D6500
 5502              	.LASF24:
 5503 07dd 55426173 		.ascii	"UBaseType_t\000"
 5503      65547970 
 5503      655F7400 
 5504              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\cc9p1klJ.s 			page 150


