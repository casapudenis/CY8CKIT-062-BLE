ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"event_groups.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.xEventGroupCreate,"ax",%progbits
  21              		.align	2
  22              		.global	xEventGroupCreate
  23              		.thumb
  24              		.thumb_func
  25              		.type	xEventGroupCreate, %function
  26              	xEventGroupCreate:
  27              	.LFB129:
  28              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0\\Source\\event_groups.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    platform software that is more than just the market leader, it     *
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 2


  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** */
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /* Standard includes. */
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #include <stdlib.h>
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** task.h is included from an application file. */
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /* FreeRTOS includes. */
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #include "FreeRTOS.h"
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #include "task.h"
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #include "timers.h"
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #include "event_groups.h"
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** header files above, but not in this file, in order to generate the correct
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 3


  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** privileged Vs unprivileged linkage and placement. */
  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /* The following bit fields convey control information in a task's event list
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** item value.  It is important they don't clash with the
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** taskEVENT_LIST_ITEM_VALUE_IN_USE definition. */
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #if configUSE_16_BIT_TICKS == 1
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x0100U
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x0200U
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x0400U
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff00U
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #else
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventCLEAR_EVENTS_ON_EXIT_BIT	0x01000000UL
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventUNBLOCKED_DUE_TO_BIT_SET	0x02000000UL
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventWAIT_FOR_ALL_BITS			0x04000000UL
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#define eventEVENT_BITS_CONTROL_BYTES	0xff000000UL
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #endif
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** typedef struct xEventGroupDefinition
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	EventBits_t uxEventBits;
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	List_t xTasksWaitingForBits;		/*< List of tasks waiting for a bit to be set. */
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		UBaseType_t uxEventGroupNumber;
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#endif
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uint8_t ucStaticallyAllocated; /*< Set to pdTRUE if the event group is statically allocated to en
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#endif
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** } EventGroup_t;
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****  * Test the bits set in uxCurrentEventBits to see if the wait condition is met.
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****  * The wait condition is defined by xWaitForAllBits.  If xWaitForAllBits is
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****  * pdTRUE then the wait condition is met if all the bits set in uxBitsToWaitFor
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****  * are also set in uxCurrentEventBits.  If xWaitForAllBits is pdFALSE then the
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****  * wait condition is met if any of the bits set in uxBitsToWait for are also set
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****  * in uxCurrentEventBits.
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c ****  */
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreateStatic( StaticEventGroup_t *pxEventGroupBuffer )
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* A StaticEventGroup_t object must be provided. */
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		configASSERT( pxEventGroupBuffer );
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* The user has provided a statically allocated event group - use it. */
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pxEventGroupBuffer; /*lint !e740 EventGroup_t and StaticEventGro
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 4


 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( pxEventBits != NULL )
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note that
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				this event group was created statically in case the event group
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				is later deleted. */
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdTRUE;
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	EventGroupHandle_t xEventGroupCreate( void )
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
  29              		.loc 1 175 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	EventGroup_t *pxEventBits;
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Allocate the event group. */
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		pxEventBits = ( EventGroup_t * ) pvPortMalloc( sizeof( EventGroup_t ) );
  41              		.loc 1 179 0
  42 0006 1820     		movs	r0, #24
  43 0008 FFF7FEFF 		bl	pvPortMalloc
  44 000c 7860     		str	r0, [r7, #4]
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( pxEventBits != NULL )
  45              		.loc 1 181 0
  46 000e 7B68     		ldr	r3, [r7, #4]
  47 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 5


  48 0012 07D0     		beq	.L2
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			pxEventBits->uxEventBits = 0;
  49              		.loc 1 183 0
  50 0014 7B68     		ldr	r3, [r7, #4]
  51 0016 0022     		movs	r2, #0
  52 0018 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			vListInitialise( &( pxEventBits->xTasksWaitingForBits ) );
  53              		.loc 1 184 0
  54 001a 7B68     		ldr	r3, [r7, #4]
  55 001c 0433     		adds	r3, r3, #4
  56 001e 1846     		mov	r0, r3
  57 0020 FFF7FEFF 		bl	vListInitialise
  58              	.L2:
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* Both static and dynamic allocation can be used, so note this
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				event group was allocated statically in case the event group is
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				later deleted. */
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				pxEventBits->ucStaticallyAllocated = pdFALSE;
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE( pxEventBits );
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			traceEVENT_GROUP_CREATE_FAILED();
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		return ( EventGroupHandle_t ) pxEventBits;
  59              		.loc 1 202 0
  60 0024 7B68     		ldr	r3, [r7, #4]
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
  61              		.loc 1 203 0
  62 0026 1846     		mov	r0, r3
  63 0028 0837     		adds	r7, r7, #8
  64              		.cfi_def_cfa_offset 8
  65 002a BD46     		mov	sp, r7
  66              		.cfi_def_cfa_register 13
  67              		@ sp needed
  68 002c 80BD     		pop	{r7, pc}
  69              		.cfi_endproc
  70              	.LFE129:
  71              		.size	xEventGroupCreate, .-xEventGroupCreate
  72 002e 00BF     		.section	.text.xEventGroupSync,"ax",%progbits
  73              		.align	2
  74              		.global	xEventGroupSync
  75              		.thumb
  76              		.thumb_func
  77              		.type	xEventGroupSync, %function
  78              	xEventGroupSync:
  79              	.LFB130:
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 6


 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t xEventGroupSync( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet, const E
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
  80              		.loc 1 209 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 40
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 8AB0     		sub	sp, sp, #40
  89              		.cfi_def_cfa_offset 48
  90 0004 00AF     		add	r7, sp, #0
  91              		.cfi_def_cfa_register 7
  92 0006 F860     		str	r0, [r7, #12]
  93 0008 B960     		str	r1, [r7, #8]
  94 000a 7A60     		str	r2, [r7, #4]
  95 000c 3B60     		str	r3, [r7]
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t uxOriginalBitValue, uxReturn;
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
  96              		.loc 1 211 0
  97 000e FB68     		ldr	r3, [r7, #12]
  98 0010 3B62     		str	r3, [r7, #32]
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** BaseType_t xAlreadyYielded;
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
  99              		.loc 1 213 0
 100 0012 0023     		movs	r3, #0
 101 0014 FB61     		str	r3, [r7, #28]
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 102              		.loc 1 215 0
 103 0016 7B68     		ldr	r3, [r7, #4]
 104 0018 03F07F43 		and	r3, r3, #-16777216
 105 001c 002B     		cmp	r3, #0
 106 001e 01D0     		beq	.L5
 107              		.loc 1 215 0 is_stmt 0 discriminator 1
 108              		.syntax unified
 109              	@ 215 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 110 0020 72B6     		 cpsid i 
 111              	@ 0 "" 2
 112              		.thumb
 113              		.syntax unified
 114              	.L6:
 115 0022 FEE7     		b	.L6
 116              	.L5:
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 117              		.loc 1 216 0 is_stmt 1
 118 0024 7B68     		ldr	r3, [r7, #4]
 119 0026 002B     		cmp	r3, #0
 120 0028 01D1     		bne	.L7
 121              		.loc 1 216 0 is_stmt 0 discriminator 1
 122              		.syntax unified
 123              	@ 216 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 124 002a 72B6     		 cpsid i 
 125              	@ 0 "" 2
 126              		.thumb
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 7


 127              		.syntax unified
 128              	.L8:
 129              		.loc 1 216 0 discriminator 2
 130 002c FEE7     		b	.L8
 131              	.L7:
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 132              		.loc 1 219 0 is_stmt 1
 133 002e FFF7FEFF 		bl	xTaskGetSchedulerState
 134 0032 0346     		mov	r3, r0
 135 0034 002B     		cmp	r3, #0
 136 0036 02D1     		bne	.L9
 137              		.loc 1 219 0 is_stmt 0 discriminator 2
 138 0038 3B68     		ldr	r3, [r7]
 139 003a 002B     		cmp	r3, #0
 140 003c 01D1     		bne	.L10
 141              	.L9:
 142              		.loc 1 219 0 discriminator 3
 143 003e 0123     		movs	r3, #1
 144 0040 00E0     		b	.L11
 145              	.L10:
 146              		.loc 1 219 0 discriminator 4
 147 0042 0023     		movs	r3, #0
 148              	.L11:
 149              		.loc 1 219 0 discriminator 6
 150 0044 002B     		cmp	r3, #0
 151 0046 01D1     		bne	.L12
 152              		.loc 1 219 0 discriminator 7
 153              		.syntax unified
 154              	@ 219 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 155 0048 72B6     		 cpsid i 
 156              	@ 0 "" 2
 157              		.thumb
 158              		.syntax unified
 159              	.L13:
 160              		.loc 1 219 0 discriminator 3
 161 004a FEE7     		b	.L13
 162              	.L12:
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#endif
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	vTaskSuspendAll();
 163              		.loc 1 223 0 is_stmt 1
 164 004c FFF7FEFF 		bl	vTaskSuspendAll
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uxOriginalBitValue = pxEventBits->uxEventBits;
 165              		.loc 1 225 0
 166 0050 3B6A     		ldr	r3, [r7, #32]
 167 0052 1B68     		ldr	r3, [r3]
 168 0054 BB61     		str	r3, [r7, #24]
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		( void ) xEventGroupSetBits( xEventGroup, uxBitsToSet );
 169              		.loc 1 227 0
 170 0056 B968     		ldr	r1, [r7, #8]
 171 0058 F868     		ldr	r0, [r7, #12]
 172 005a FFF7FEFF 		bl	xEventGroupSetBits
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 8


 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( ( ( uxOriginalBitValue | uxBitsToSet ) & uxBitsToWaitFor ) == uxBitsToWaitFor )
 173              		.loc 1 229 0
 174 005e BA69     		ldr	r2, [r7, #24]
 175 0060 BB68     		ldr	r3, [r7, #8]
 176 0062 1A43     		orrs	r2, r2, r3
 177 0064 7B68     		ldr	r3, [r7, #4]
 178 0066 1A40     		ands	r2, r2, r3
 179 0068 7B68     		ldr	r3, [r7, #4]
 180 006a 9A42     		cmp	r2, r3
 181 006c 0DD1     		bne	.L14
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* All the rendezvous bits are now set - no need to block. */
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			uxReturn = ( uxOriginalBitValue | uxBitsToSet );
 182              		.loc 1 232 0
 183 006e BA69     		ldr	r2, [r7, #24]
 184 0070 BB68     		ldr	r3, [r7, #8]
 185 0072 1343     		orrs	r3, r3, r2
 186 0074 7B62     		str	r3, [r7, #36]
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* Rendezvous always clear the bits.  They will have been cleared
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			already unless this is the only task in the rendezvous. */
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 187              		.loc 1 236 0
 188 0076 3B6A     		ldr	r3, [r7, #32]
 189 0078 1A68     		ldr	r2, [r3]
 190 007a 7B68     		ldr	r3, [r7, #4]
 191 007c DB43     		mvns	r3, r3
 192 007e 1A40     		ands	r2, r2, r3
 193 0080 3B6A     		ldr	r3, [r7, #32]
 194 0082 1A60     		str	r2, [r3]
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			xTicksToWait = 0;
 195              		.loc 1 238 0
 196 0084 0023     		movs	r3, #0
 197 0086 3B60     		str	r3, [r7]
 198 0088 11E0     		b	.L15
 199              	.L14:
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			if( xTicksToWait != ( TickType_t ) 0 )
 200              		.loc 1 242 0
 201 008a 3B68     		ldr	r3, [r7]
 202 008c 002B     		cmp	r3, #0
 203 008e 0BD0     		beq	.L16
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				traceEVENT_GROUP_SYNC_BLOCK( xEventGroup, uxBitsToSet, uxBitsToWaitFor );
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* Store the bits that the calling task is waiting for in the
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				task's event list item so the kernel knows when a match is
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				found.  Then enter the blocked state. */
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | eve
 204              		.loc 1 249 0
 205 0090 3B6A     		ldr	r3, [r7, #32]
 206 0092 181D     		adds	r0, r3, #4
 207 0094 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 9


 208 0096 43F0A063 		orr	r3, r3, #83886080
 209 009a 3A68     		ldr	r2, [r7]
 210 009c 1946     		mov	r1, r3
 211 009e FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* This assignment is obsolete as uxReturn will get set after
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				the task unblocks, but some compilers mistakenly generate a
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				warning about uxReturn being returned without being set if the
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				assignment is omitted. */
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				uxReturn = 0;
 212              		.loc 1 255 0
 213 00a2 0023     		movs	r3, #0
 214 00a4 7B62     		str	r3, [r7, #36]
 215 00a6 02E0     		b	.L15
 216              	.L16:
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			else
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* The rendezvous bits were not set, but no block time was
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				specified - just return the current event bit value. */
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 217              		.loc 1 261 0
 218 00a8 3B6A     		ldr	r3, [r7, #32]
 219 00aa 1B68     		ldr	r3, [r3]
 220 00ac 7B62     		str	r3, [r7, #36]
 221              	.L15:
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 222              		.loc 1 265 0
 223 00ae FFF7FEFF 		bl	xTaskResumeAll
 224 00b2 7861     		str	r0, [r7, #20]
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 225              		.loc 1 267 0
 226 00b4 3B68     		ldr	r3, [r7]
 227 00b6 002B     		cmp	r3, #0
 228 00b8 2CD0     		beq	.L17
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 229              		.loc 1 269 0
 230 00ba 7B69     		ldr	r3, [r7, #20]
 231 00bc 002B     		cmp	r3, #0
 232 00be 07D1     		bne	.L18
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			portYIELD_WITHIN_API();
 233              		.loc 1 271 0
 234 00c0 174B     		ldr	r3, .L22
 235 00c2 4FF08052 		mov	r2, #268435456
 236 00c6 1A60     		str	r2, [r3]
 237              		.syntax unified
 238              	@ 271 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 239 00c8 BFF34F8F 		dsb
 240              	@ 0 "" 2
 241              	@ 271 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 242 00cc BFF36F8F 		isb
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 10


 243              	@ 0 "" 2
 244              		.thumb
 245              		.syntax unified
 246              	.L18:
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 247              		.loc 1 282 0
 248 00d0 FFF7FEFF 		bl	uxTaskResetEventItemValue
 249 00d4 7862     		str	r0, [r7, #36]
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 250              		.loc 1 284 0
 251 00d6 7B6A     		ldr	r3, [r7, #36]
 252 00d8 03F00073 		and	r3, r3, #33554432
 253 00dc 002B     		cmp	r3, #0
 254 00de 15D1     		bne	.L19
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The task timed out, just return the current event bit value. */
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			taskENTER_CRITICAL();
 255              		.loc 1 287 0
 256 00e0 FFF7FEFF 		bl	vPortEnterCritical
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 257              		.loc 1 289 0
 258 00e4 3B6A     		ldr	r3, [r7, #32]
 259 00e6 1B68     		ldr	r3, [r3]
 260 00e8 7B62     		str	r3, [r7, #36]
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* Although the task got here because it timed out before the
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				bits it was waiting for were set, it is possible that since it
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				unblocked another task has set the bits.  If this is the case
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				then it needs to clear the bits before exiting. */
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				if( ( uxReturn & uxBitsToWaitFor ) == uxBitsToWaitFor )
 261              		.loc 1 295 0
 262 00ea 7A6A     		ldr	r2, [r7, #36]
 263 00ec 7B68     		ldr	r3, [r7, #4]
 264 00ee 1A40     		ands	r2, r2, r3
 265 00f0 7B68     		ldr	r3, [r7, #4]
 266 00f2 9A42     		cmp	r2, r3
 267 00f4 06D1     		bne	.L20
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 268              		.loc 1 297 0
 269 00f6 3B6A     		ldr	r3, [r7, #32]
 270 00f8 1A68     		ldr	r2, [r3]
 271 00fa 7B68     		ldr	r3, [r7, #4]
 272 00fc DB43     		mvns	r3, r3
 273 00fe 1A40     		ands	r2, r2, r3
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 11


 274 0100 3B6A     		ldr	r3, [r7, #32]
 275 0102 1A60     		str	r2, [r3]
 276              	.L20:
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				else
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			taskEXIT_CRITICAL();
 277              		.loc 1 304 0
 278 0104 FFF7FEFF 		bl	vPortExitCritical
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			xTimeoutOccurred = pdTRUE;
 279              		.loc 1 306 0
 280 0108 0123     		movs	r3, #1
 281 010a FB61     		str	r3, [r7, #28]
 282              	.L19:
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Control bits might be set as the task had blocked should not be
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		returned. */
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 283              		.loc 1 315 0
 284 010c 7B6A     		ldr	r3, [r7, #36]
 285 010e 23F07F43 		bic	r3, r3, #-16777216
 286 0112 7B62     		str	r3, [r7, #36]
 287              	.L17:
 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	traceEVENT_GROUP_SYNC_END( xEventGroup, uxBitsToSet, uxBitsToWaitFor, xTimeoutOccurred );
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	return uxReturn;
 288              		.loc 1 320 0
 289 0114 7B6A     		ldr	r3, [r7, #36]
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 290              		.loc 1 321 0
 291 0116 1846     		mov	r0, r3
 292 0118 2837     		adds	r7, r7, #40
 293              		.cfi_def_cfa_offset 8
 294 011a BD46     		mov	sp, r7
 295              		.cfi_def_cfa_register 13
 296              		@ sp needed
 297 011c 80BD     		pop	{r7, pc}
 298              	.L23:
 299 011e 00BF     		.align	2
 300              	.L22:
 301 0120 04ED00E0 		.word	-536810236
 302              		.cfi_endproc
 303              	.LFE130:
 304              		.size	xEventGroupSync, .-xEventGroupSync
 305              		.section	.text.xEventGroupWaitBits,"ax",%progbits
 306              		.align	2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 12


 307              		.global	xEventGroupWaitBits
 308              		.thumb
 309              		.thumb_func
 310              		.type	xEventGroupWaitBits, %function
 311              	xEventGroupWaitBits:
 312              	.LFB131:
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t xEventGroupWaitBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToWaitFor,
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 313              		.loc 1 325 0
 314              		.cfi_startproc
 315              		@ args = 4, pretend = 0, frame = 48
 316              		@ frame_needed = 1, uses_anonymous_args = 0
 317 0000 80B5     		push	{r7, lr}
 318              		.cfi_def_cfa_offset 8
 319              		.cfi_offset 7, -8
 320              		.cfi_offset 14, -4
 321 0002 8CB0     		sub	sp, sp, #48
 322              		.cfi_def_cfa_offset 56
 323 0004 00AF     		add	r7, sp, #0
 324              		.cfi_def_cfa_register 7
 325 0006 F860     		str	r0, [r7, #12]
 326 0008 B960     		str	r1, [r7, #8]
 327 000a 7A60     		str	r2, [r7, #4]
 328 000c 3B60     		str	r3, [r7]
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 329              		.loc 1 326 0
 330 000e FB68     		ldr	r3, [r7, #12]
 331 0010 7B62     		str	r3, [r7, #36]
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t uxReturn, uxControlBits = 0;
 332              		.loc 1 327 0
 333 0012 0023     		movs	r3, #0
 334 0014 BB62     		str	r3, [r7, #40]
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** BaseType_t xWaitConditionMet, xAlreadyYielded;
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** BaseType_t xTimeoutOccurred = pdFALSE;
 335              		.loc 1 329 0
 336 0016 0023     		movs	r3, #0
 337 0018 3B62     		str	r3, [r7, #32]
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	/* Check the user is not attempting to wait on the bits used by the kernel
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	itself, and that at least one bit is being requested. */
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( xEventGroup );
 338              		.loc 1 333 0
 339 001a FB68     		ldr	r3, [r7, #12]
 340 001c 002B     		cmp	r3, #0
 341 001e 01D1     		bne	.L25
 342              		.loc 1 333 0 is_stmt 0 discriminator 1
 343              		.syntax unified
 344              	@ 333 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 345 0020 72B6     		 cpsid i 
 346              	@ 0 "" 2
 347              		.thumb
 348              		.syntax unified
 349              	.L26:
 350 0022 FEE7     		b	.L26
 351              	.L25:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 13


 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( ( uxBitsToWaitFor & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 352              		.loc 1 334 0 is_stmt 1
 353 0024 BB68     		ldr	r3, [r7, #8]
 354 0026 03F07F43 		and	r3, r3, #-16777216
 355 002a 002B     		cmp	r3, #0
 356 002c 01D0     		beq	.L27
 357              		.loc 1 334 0 is_stmt 0 discriminator 1
 358              		.syntax unified
 359              	@ 334 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 360 002e 72B6     		 cpsid i 
 361              	@ 0 "" 2
 362              		.thumb
 363              		.syntax unified
 364              	.L28:
 365              		.loc 1 334 0 discriminator 2
 366 0030 FEE7     		b	.L28
 367              	.L27:
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( uxBitsToWaitFor != 0 );
 368              		.loc 1 335 0 is_stmt 1
 369 0032 BB68     		ldr	r3, [r7, #8]
 370 0034 002B     		cmp	r3, #0
 371 0036 01D1     		bne	.L29
 372              		.loc 1 335 0 is_stmt 0 discriminator 1
 373              		.syntax unified
 374              	@ 335 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 375 0038 72B6     		 cpsid i 
 376              	@ 0 "" 2
 377              		.thumb
 378              		.syntax unified
 379              	.L30:
 380              		.loc 1 335 0 discriminator 3
 381 003a FEE7     		b	.L30
 382              	.L29:
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 383              		.loc 1 338 0 is_stmt 1
 384 003c FFF7FEFF 		bl	xTaskGetSchedulerState
 385 0040 0346     		mov	r3, r0
 386 0042 002B     		cmp	r3, #0
 387 0044 02D1     		bne	.L31
 388              		.loc 1 338 0 is_stmt 0 discriminator 2
 389 0046 BB6B     		ldr	r3, [r7, #56]
 390 0048 002B     		cmp	r3, #0
 391 004a 01D1     		bne	.L32
 392              	.L31:
 393              		.loc 1 338 0 discriminator 3
 394 004c 0123     		movs	r3, #1
 395 004e 00E0     		b	.L33
 396              	.L32:
 397              		.loc 1 338 0 discriminator 4
 398 0050 0023     		movs	r3, #0
 399              	.L33:
 400              		.loc 1 338 0 discriminator 6
 401 0052 002B     		cmp	r3, #0
 402 0054 01D1     		bne	.L34
 403              		.loc 1 338 0 discriminator 7
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 14


 404              		.syntax unified
 405              	@ 338 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 406 0056 72B6     		 cpsid i 
 407              	@ 0 "" 2
 408              		.thumb
 409              		.syntax unified
 410              	.L35:
 411              		.loc 1 338 0 discriminator 4
 412 0058 FEE7     		b	.L35
 413              	.L34:
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	#endif
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	vTaskSuspendAll();
 414              		.loc 1 342 0 is_stmt 1
 415 005a FFF7FEFF 		bl	vTaskSuspendAll
 416              	.LBB6:
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		const EventBits_t uxCurrentEventBits = pxEventBits->uxEventBits;
 417              		.loc 1 344 0
 418 005e 7B6A     		ldr	r3, [r7, #36]
 419 0060 1B68     		ldr	r3, [r3]
 420 0062 FB61     		str	r3, [r7, #28]
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Check to see if the wait condition is already met or not. */
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		xWaitConditionMet = prvTestWaitCondition( uxCurrentEventBits, uxBitsToWaitFor, xWaitForAllBits );
 421              		.loc 1 347 0
 422 0064 3A68     		ldr	r2, [r7]
 423 0066 B968     		ldr	r1, [r7, #8]
 424 0068 F869     		ldr	r0, [r7, #28]
 425 006a FFF7FEFF 		bl	prvTestWaitCondition
 426 006e B861     		str	r0, [r7, #24]
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( xWaitConditionMet != pdFALSE )
 427              		.loc 1 349 0
 428 0070 BB69     		ldr	r3, [r7, #24]
 429 0072 002B     		cmp	r3, #0
 430 0074 0ED0     		beq	.L36
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The wait condition has already been met so there is no need to
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			block. */
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 431              		.loc 1 353 0
 432 0076 FB69     		ldr	r3, [r7, #28]
 433 0078 FB62     		str	r3, [r7, #44]
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			xTicksToWait = ( TickType_t ) 0;
 434              		.loc 1 354 0
 435 007a 0023     		movs	r3, #0
 436 007c BB63     		str	r3, [r7, #56]
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* Clear the wait bits if requested to do so. */
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 437              		.loc 1 357 0
 438 007e 7B68     		ldr	r3, [r7, #4]
 439 0080 002B     		cmp	r3, #0
 440 0082 26D0     		beq	.L37
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 15


 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 441              		.loc 1 359 0
 442 0084 7B6A     		ldr	r3, [r7, #36]
 443 0086 1A68     		ldr	r2, [r3]
 444 0088 BB68     		ldr	r3, [r7, #8]
 445 008a DB43     		mvns	r3, r3
 446 008c 1A40     		ands	r2, r2, r3
 447 008e 7B6A     		ldr	r3, [r7, #36]
 448 0090 1A60     		str	r2, [r3]
 449 0092 1EE0     		b	.L37
 450              	.L36:
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			else
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else if( xTicksToWait == ( TickType_t ) 0 )
 451              		.loc 1 366 0
 452 0094 BB6B     		ldr	r3, [r7, #56]
 453 0096 002B     		cmp	r3, #0
 454 0098 02D1     		bne	.L38
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The wait condition has not been met, but no block time was
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			specified, so just return the current value. */
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			uxReturn = uxCurrentEventBits;
 455              		.loc 1 370 0
 456 009a FB69     		ldr	r3, [r7, #28]
 457 009c FB62     		str	r3, [r7, #44]
 458 009e 18E0     		b	.L37
 459              	.L38:
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The task is going to block to wait for its required bits to be
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			set.  uxControlBits are used to remember the specified behaviour of
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			this call to xEventGroupWaitBits() - for use when the event bits
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			unblock the task. */
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			if( xClearOnExit != pdFALSE )
 460              		.loc 1 378 0
 461 00a0 7B68     		ldr	r3, [r7, #4]
 462 00a2 002B     		cmp	r3, #0
 463 00a4 03D0     		beq	.L39
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				uxControlBits |= eventCLEAR_EVENTS_ON_EXIT_BIT;
 464              		.loc 1 380 0
 465 00a6 BB6A     		ldr	r3, [r7, #40]
 466 00a8 43F08073 		orr	r3, r3, #16777216
 467 00ac BB62     		str	r3, [r7, #40]
 468              	.L39:
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			else
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			if( xWaitForAllBits != pdFALSE )
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 16


 469              		.loc 1 387 0
 470 00ae 3B68     		ldr	r3, [r7]
 471 00b0 002B     		cmp	r3, #0
 472 00b2 03D0     		beq	.L40
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				uxControlBits |= eventWAIT_FOR_ALL_BITS;
 473              		.loc 1 389 0
 474 00b4 BB6A     		ldr	r3, [r7, #40]
 475 00b6 43F08063 		orr	r3, r3, #67108864
 476 00ba BB62     		str	r3, [r7, #40]
 477              	.L40:
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			else
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* Store the bits that the calling task is waiting for in the
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			task's event list item so the kernel knows when a match is
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			found.  Then enter the blocked state. */
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			vTaskPlaceOnUnorderedEventList( &( pxEventBits->xTasksWaitingForBits ), ( uxBitsToWaitFor | uxCo
 478              		.loc 1 399 0
 479 00bc 7B6A     		ldr	r3, [r7, #36]
 480 00be 181D     		adds	r0, r3, #4
 481 00c0 BA68     		ldr	r2, [r7, #8]
 482 00c2 BB6A     		ldr	r3, [r7, #40]
 483 00c4 1343     		orrs	r3, r3, r2
 484 00c6 BA6B     		ldr	r2, [r7, #56]
 485 00c8 1946     		mov	r1, r3
 486 00ca FFF7FEFF 		bl	vTaskPlaceOnUnorderedEventList
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* This is obsolete as it will get set after the task unblocks, but
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			some compilers mistakenly generate a warning about the variable
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			being returned without being set if it is not done. */
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			uxReturn = 0;
 487              		.loc 1 404 0
 488 00ce 0023     		movs	r3, #0
 489 00d0 FB62     		str	r3, [r7, #44]
 490              	.L37:
 491              	.LBE6:
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			traceEVENT_GROUP_WAIT_BITS_BLOCK( xEventGroup, uxBitsToWaitFor );
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	xAlreadyYielded = xTaskResumeAll();
 492              		.loc 1 409 0
 493 00d2 FFF7FEFF 		bl	xTaskResumeAll
 494 00d6 7861     		str	r0, [r7, #20]
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 495              		.loc 1 411 0
 496 00d8 BB6B     		ldr	r3, [r7, #56]
 497 00da 002B     		cmp	r3, #0
 498 00dc 31D0     		beq	.L41
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( xAlreadyYielded == pdFALSE )
 499              		.loc 1 413 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 17


 500 00de 7B69     		ldr	r3, [r7, #20]
 501 00e0 002B     		cmp	r3, #0
 502 00e2 07D1     		bne	.L42
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			portYIELD_WITHIN_API();
 503              		.loc 1 415 0
 504 00e4 194B     		ldr	r3, .L46
 505 00e6 4FF08052 		mov	r2, #268435456
 506 00ea 1A60     		str	r2, [r3]
 507              		.syntax unified
 508              	@ 415 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 509 00ec BFF34F8F 		dsb
 510              	@ 0 "" 2
 511              	@ 415 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 512 00f0 BFF36F8F 		isb
 513              	@ 0 "" 2
 514              		.thumb
 515              		.syntax unified
 516              	.L42:
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* The task blocked to wait for its required bits to be set - at this
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		point either the required bits were set or the block time expired.  If
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		the required bits were set they will have been stored in the task's
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		event list item, and they should now be retrieved then cleared. */
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uxReturn = uxTaskResetEventItemValue();
 517              		.loc 1 426 0
 518 00f4 FFF7FEFF 		bl	uxTaskResetEventItemValue
 519 00f8 F862     		str	r0, [r7, #44]
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( ( uxReturn & eventUNBLOCKED_DUE_TO_BIT_SET ) == ( EventBits_t ) 0 )
 520              		.loc 1 428 0
 521 00fa FB6A     		ldr	r3, [r7, #44]
 522 00fc 03F00073 		and	r3, r3, #33554432
 523 0100 002B     		cmp	r3, #0
 524 0102 1AD1     		bne	.L43
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			taskENTER_CRITICAL();
 525              		.loc 1 430 0
 526 0104 FFF7FEFF 		bl	vPortEnterCritical
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* The task timed out, just return the current event bit value. */
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				uxReturn = pxEventBits->uxEventBits;
 527              		.loc 1 433 0
 528 0108 7B6A     		ldr	r3, [r7, #36]
 529 010a 1B68     		ldr	r3, [r3]
 530 010c FB62     		str	r3, [r7, #44]
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* It is possible that the event bits were updated between this
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				task leaving the Blocked state and running again. */
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				if( prvTestWaitCondition( uxReturn, uxBitsToWaitFor, xWaitForAllBits ) != pdFALSE )
 531              		.loc 1 437 0
 532 010e 3A68     		ldr	r2, [r7]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 18


 533 0110 B968     		ldr	r1, [r7, #8]
 534 0112 F86A     		ldr	r0, [r7, #44]
 535 0114 FFF7FEFF 		bl	prvTestWaitCondition
 536 0118 0346     		mov	r3, r0
 537 011a 002B     		cmp	r3, #0
 538 011c 09D0     		beq	.L44
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					if( xClearOnExit != pdFALSE )
 539              		.loc 1 439 0
 540 011e 7B68     		ldr	r3, [r7, #4]
 541 0120 002B     		cmp	r3, #0
 542 0122 06D0     		beq	.L44
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					{
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 						pxEventBits->uxEventBits &= ~uxBitsToWaitFor;
 543              		.loc 1 441 0
 544 0124 7B6A     		ldr	r3, [r7, #36]
 545 0126 1A68     		ldr	r2, [r3]
 546 0128 BB68     		ldr	r3, [r7, #8]
 547 012a DB43     		mvns	r3, r3
 548 012c 1A40     		ands	r2, r2, r3
 549 012e 7B6A     		ldr	r3, [r7, #36]
 550 0130 1A60     		str	r2, [r3]
 551              	.L44:
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					}
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					else
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					{
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 						mtCOVERAGE_TEST_MARKER();
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					}
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				else
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			taskEXIT_CRITICAL();
 552              		.loc 1 453 0
 553 0132 FFF7FEFF 		bl	vPortExitCritical
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* Prevent compiler warnings when trace macros are not used. */
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			xTimeoutOccurred = pdFALSE;
 554              		.loc 1 456 0
 555 0136 0023     		movs	r3, #0
 556 0138 3B62     		str	r3, [r7, #32]
 557              	.L43:
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The task unblocked because the bits were set. */
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* The task blocked so control bits may have been set. */
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uxReturn &= ~eventEVENT_BITS_CONTROL_BYTES;
 558              		.loc 1 464 0
 559 013a FB6A     		ldr	r3, [r7, #44]
 560 013c 23F07F43 		bic	r3, r3, #-16777216
 561 0140 FB62     		str	r3, [r7, #44]
 562              	.L41:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 19


 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	traceEVENT_GROUP_WAIT_BITS_END( xEventGroup, uxBitsToWaitFor, xTimeoutOccurred );
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	return uxReturn;
 563              		.loc 1 468 0
 564 0142 FB6A     		ldr	r3, [r7, #44]
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 565              		.loc 1 469 0
 566 0144 1846     		mov	r0, r3
 567 0146 3037     		adds	r7, r7, #48
 568              		.cfi_def_cfa_offset 8
 569 0148 BD46     		mov	sp, r7
 570              		.cfi_def_cfa_register 13
 571              		@ sp needed
 572 014a 80BD     		pop	{r7, pc}
 573              	.L47:
 574              		.align	2
 575              	.L46:
 576 014c 04ED00E0 		.word	-536810236
 577              		.cfi_endproc
 578              	.LFE131:
 579              		.size	xEventGroupWaitBits, .-xEventGroupWaitBits
 580              		.section	.text.xEventGroupClearBits,"ax",%progbits
 581              		.align	2
 582              		.global	xEventGroupClearBits
 583              		.thumb
 584              		.thumb_func
 585              		.type	xEventGroupClearBits, %function
 586              	xEventGroupClearBits:
 587              	.LFB132:
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t xEventGroupClearBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToClear )
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 588              		.loc 1 473 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 16
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592 0000 80B5     		push	{r7, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 7, -8
 595              		.cfi_offset 14, -4
 596 0002 84B0     		sub	sp, sp, #16
 597              		.cfi_def_cfa_offset 24
 598 0004 00AF     		add	r7, sp, #0
 599              		.cfi_def_cfa_register 7
 600 0006 7860     		str	r0, [r7, #4]
 601 0008 3960     		str	r1, [r7]
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 602              		.loc 1 474 0
 603 000a 7B68     		ldr	r3, [r7, #4]
 604 000c FB60     		str	r3, [r7, #12]
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t uxReturn;
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	/* Check the user is not attempting to clear the bits used by the kernel
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	itself. */
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( xEventGroup );
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 20


 605              		.loc 1 479 0
 606 000e 7B68     		ldr	r3, [r7, #4]
 607 0010 002B     		cmp	r3, #0
 608 0012 01D1     		bne	.L49
 609              		.loc 1 479 0 is_stmt 0 discriminator 1
 610              		.syntax unified
 611              	@ 479 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 612 0014 72B6     		 cpsid i 
 613              	@ 0 "" 2
 614              		.thumb
 615              		.syntax unified
 616              	.L50:
 617 0016 FEE7     		b	.L50
 618              	.L49:
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( ( uxBitsToClear & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 619              		.loc 1 480 0 is_stmt 1
 620 0018 3B68     		ldr	r3, [r7]
 621 001a 03F07F43 		and	r3, r3, #-16777216
 622 001e 002B     		cmp	r3, #0
 623 0020 01D0     		beq	.L51
 624              		.loc 1 480 0 is_stmt 0 discriminator 1
 625              		.syntax unified
 626              	@ 480 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 627 0022 72B6     		 cpsid i 
 628              	@ 0 "" 2
 629              		.thumb
 630              		.syntax unified
 631              	.L52:
 632              		.loc 1 480 0 discriminator 2
 633 0024 FEE7     		b	.L52
 634              	.L51:
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	taskENTER_CRITICAL();
 635              		.loc 1 482 0 is_stmt 1
 636 0026 FFF7FEFF 		bl	vPortEnterCritical
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS( xEventGroup, uxBitsToClear );
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* The value returned is the event group value prior to the bits being
 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		cleared. */
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 637              		.loc 1 488 0
 638 002a FB68     		ldr	r3, [r7, #12]
 639 002c 1B68     		ldr	r3, [r3]
 640 002e BB60     		str	r3, [r7, #8]
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Clear the bits. */
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 641              		.loc 1 491 0
 642 0030 FB68     		ldr	r3, [r7, #12]
 643 0032 1A68     		ldr	r2, [r3]
 644 0034 3B68     		ldr	r3, [r7]
 645 0036 DB43     		mvns	r3, r3
 646 0038 1A40     		ands	r2, r2, r3
 647 003a FB68     		ldr	r3, [r7, #12]
 648 003c 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 21


 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	taskEXIT_CRITICAL();
 649              		.loc 1 493 0
 650 003e FFF7FEFF 		bl	vPortExitCritical
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	return uxReturn;
 651              		.loc 1 495 0
 652 0042 BB68     		ldr	r3, [r7, #8]
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 653              		.loc 1 496 0
 654 0044 1846     		mov	r0, r3
 655 0046 1037     		adds	r7, r7, #16
 656              		.cfi_def_cfa_offset 8
 657 0048 BD46     		mov	sp, r7
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 004a 80BD     		pop	{r7, pc}
 661              		.cfi_endproc
 662              	.LFE132:
 663              		.size	xEventGroupClearBits, .-xEventGroupClearBits
 664              		.section	.text.xEventGroupGetBitsFromISR,"ax",%progbits
 665              		.align	2
 666              		.global	xEventGroupGetBitsFromISR
 667              		.thumb
 668              		.thumb_func
 669              		.type	xEventGroupGetBitsFromISR, %function
 670              	xEventGroupGetBitsFromISR:
 671              	.LFB133:
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_T
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	BaseType_t xEventGroupClearBitsFromISR( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsTo
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		BaseType_t xReturn;
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		traceEVENT_GROUP_CLEAR_BITS_FROM_ISR( xEventGroup, uxBitsToClear );
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		xReturn = xTimerPendFunctionCallFromISR( vEventGroupClearBitsCallback, ( void * ) xEventGroup, ( 
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		return xReturn;
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** #endif
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t xEventGroupGetBitsFromISR( EventGroupHandle_t xEventGroup )
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 672              		.loc 1 515 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 32
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677 0000 80B4     		push	{r7}
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 0002 89B0     		sub	sp, sp, #36
 681              		.cfi_def_cfa_offset 40
 682 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 22


 683              		.cfi_def_cfa_register 7
 684 0006 7860     		str	r0, [r7, #4]
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** UBaseType_t uxSavedInterruptStatus;
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 685              		.loc 1 517 0
 686 0008 7B68     		ldr	r3, [r7, #4]
 687 000a FB61     		str	r3, [r7, #28]
 688              	.LBB7:
 689              	.LBB8:
 690              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 23


  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** */
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  */
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR        char
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT       float
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE      double
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG        long
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT       short
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE  uint32_t
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE   long
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint16_t TickType_t;
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffff
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #else
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 24


 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint32_t TickType_t;
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     not need to be guarded with a critical section. */
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC 1
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH              ( -1 )
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS            ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT            8
 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD()                                                            \
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {                                                                              \
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Set a PendSV to request a context switch. */                            \
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;                            \
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****                                                                                \
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Barriers are normally not required but do ensure the code is completely \
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     within the specified behaviour for the architecture. */                    \
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "dsb" );                                                   \
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "isb" );                                                   \
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }                                                                              \
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG         ( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT        ( 1UL << 28UL )
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )       portEND_SWITCHING_ISR( x )
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()       ulPortRaiseBASEPRI()
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)    vPortSetBASEPRI(x)
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                __asm volatile   ( " cpsid i " )
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                 __asm volatile   ( " cpsie i " )
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()                    vPortEnterCritical()
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()                     vPortExitCritical()
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site. */
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()     vPortValidateInterruptPriority()
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 25


 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE    __inline
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portFORCE_INLINE inline __attribute__(( always_inline))
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdFALSE;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     else
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdTRUE;
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 191:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return xReturn;
 192:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 193:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 195:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 197:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 198:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 199:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 200:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 201:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %0, %1                                                 \n" \
 202:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %0                                            \n" \
 203:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 204:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 205:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 206:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 207:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 208:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 209:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 211:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 213:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 691              		.loc 2 215 0
 692              		.syntax unified
 693              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 26


 694 000c EFF31182 		    mrs r2, basepri                                            
 695 0010 4FF0BF03 	    mov r3, #191                                                 
 696 0014 83F31188 	    msr basepri, r3                                            
 697 0018 BFF36F8F 	    isb                                                        
 698 001c BFF34F8F 	    dsb                                                        
 699              	
 700              	@ 0 "" 2
 701              		.thumb
 702              		.syntax unified
 703 0020 3A61     		str	r2, [r7, #16]
 704 0022 BB60     		str	r3, [r7, #8]
 216:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 217:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mrs %0, basepri                                            \n" \
 218:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %1, %2                                                 \n" \
 219:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %1                                            \n" \
 220:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 221:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 222:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY
 223:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 224:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 225:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* This return will not be reached but is necessary to prevent compiler
 226:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     warnings. */
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return ulOriginalBASEPRI;
 705              		.loc 2 227 0
 706 0024 3B69     		ldr	r3, [r7, #16]
 707              	.LBE8:
 708              	.LBE7:
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t uxReturn;
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 709              		.loc 1 520 0
 710 0026 BB61     		str	r3, [r7, #24]
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		uxReturn = pxEventBits->uxEventBits;
 711              		.loc 1 522 0
 712 0028 FB69     		ldr	r3, [r7, #28]
 713 002a 1B68     		ldr	r3, [r3]
 714 002c 7B61     		str	r3, [r7, #20]
 715 002e BB69     		ldr	r3, [r7, #24]
 716 0030 FB60     		str	r3, [r7, #12]
 717              	.LBB9:
 718              	.LBB10:
 228:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 229:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 231:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 233:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 719              		.loc 2 233 0
 720 0032 FB68     		ldr	r3, [r7, #12]
 721              		.syntax unified
 722              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 723 0034 83F31188 		    msr basepri, r3  
 724              	@ 0 "" 2
 725              		.thumb
 726              		.syntax unified
 727              	.LBE10:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 27


 728              	.LBE9:
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	return uxReturn;
 729              		.loc 1 526 0
 730 0038 7B69     		ldr	r3, [r7, #20]
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 731              		.loc 1 527 0
 732 003a 1846     		mov	r0, r3
 733 003c 2437     		adds	r7, r7, #36
 734              		.cfi_def_cfa_offset 4
 735 003e BD46     		mov	sp, r7
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 0040 5DF8047B 		ldr	r7, [sp], #4
 739              		.cfi_restore 7
 740              		.cfi_def_cfa_offset 0
 741 0044 7047     		bx	lr
 742              		.cfi_endproc
 743              	.LFE133:
 744              		.size	xEventGroupGetBitsFromISR, .-xEventGroupGetBitsFromISR
 745 0046 00BF     		.section	.text.xEventGroupSetBits,"ax",%progbits
 746              		.align	2
 747              		.global	xEventGroupSetBits
 748              		.thumb
 749              		.thumb_func
 750              		.type	xEventGroupSetBits, %function
 751              	xEventGroupSetBits:
 752              	.LFB134:
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t xEventGroupSetBits( EventGroupHandle_t xEventGroup, const EventBits_t uxBitsToSet )
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 753              		.loc 1 531 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 48
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 80B5     		push	{r7, lr}
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 8CB0     		sub	sp, sp, #48
 762              		.cfi_def_cfa_offset 56
 763 0004 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 765 0006 7860     		str	r0, [r7, #4]
 766 0008 3960     		str	r1, [r7]
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** ListItem_t *pxListItem, *pxNext;
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** ListItem_t const *pxListEnd;
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** List_t *pxList;
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventBits_t uxBitsToClear = 0, uxBitsWaitedFor, uxControlBits;
 767              		.loc 1 535 0
 768 000a 0023     		movs	r3, #0
 769 000c BB62     		str	r3, [r7, #40]
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 770              		.loc 1 536 0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 28


 771 000e 7B68     		ldr	r3, [r7, #4]
 772 0010 3B62     		str	r3, [r7, #32]
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** BaseType_t xMatchFound = pdFALSE;
 773              		.loc 1 537 0
 774 0012 0023     		movs	r3, #0
 775 0014 7B62     		str	r3, [r7, #36]
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	/* Check the user is not attempting to set the bits used by the kernel
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	itself. */
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( xEventGroup );
 776              		.loc 1 541 0
 777 0016 7B68     		ldr	r3, [r7, #4]
 778 0018 002B     		cmp	r3, #0
 779 001a 01D1     		bne	.L58
 780              		.loc 1 541 0 is_stmt 0 discriminator 1
 781              		.syntax unified
 782              	@ 541 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 783 001c 72B6     		 cpsid i 
 784              	@ 0 "" 2
 785              		.thumb
 786              		.syntax unified
 787              	.L59:
 788 001e FEE7     		b	.L59
 789              	.L58:
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	configASSERT( ( uxBitsToSet & eventEVENT_BITS_CONTROL_BYTES ) == 0 );
 790              		.loc 1 542 0 is_stmt 1
 791 0020 3B68     		ldr	r3, [r7]
 792 0022 03F07F43 		and	r3, r3, #-16777216
 793 0026 002B     		cmp	r3, #0
 794 0028 01D0     		beq	.L60
 795              		.loc 1 542 0 is_stmt 0 discriminator 1
 796              		.syntax unified
 797              	@ 542 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 798 002a 72B6     		 cpsid i 
 799              	@ 0 "" 2
 800              		.thumb
 801              		.syntax unified
 802              	.L61:
 803              		.loc 1 542 0 discriminator 2
 804 002c FEE7     		b	.L61
 805              	.L60:
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	pxList = &( pxEventBits->xTasksWaitingForBits );
 806              		.loc 1 544 0 is_stmt 1
 807 002e 3B6A     		ldr	r3, [r7, #32]
 808 0030 0433     		adds	r3, r3, #4
 809 0032 FB61     		str	r3, [r7, #28]
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	pxListEnd = listGET_END_MARKER( pxList ); /*lint !e826 !e740 The mini list structure is used as th
 810              		.loc 1 545 0
 811 0034 FB69     		ldr	r3, [r7, #28]
 812 0036 0833     		adds	r3, r3, #8
 813 0038 BB61     		str	r3, [r7, #24]
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	vTaskSuspendAll();
 814              		.loc 1 546 0
 815 003a FFF7FEFF 		bl	vTaskSuspendAll
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		traceEVENT_GROUP_SET_BITS( xEventGroup, uxBitsToSet );
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 29


 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		pxListItem = listGET_HEAD_ENTRY( pxList );
 816              		.loc 1 550 0
 817 003e FB69     		ldr	r3, [r7, #28]
 818 0040 DB68     		ldr	r3, [r3, #12]
 819 0042 FB62     		str	r3, [r7, #44]
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Set the bits. */
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		pxEventBits->uxEventBits |= uxBitsToSet;
 820              		.loc 1 553 0
 821 0044 3B6A     		ldr	r3, [r7, #32]
 822 0046 1A68     		ldr	r2, [r3]
 823 0048 3B68     		ldr	r3, [r7]
 824 004a 1A43     		orrs	r2, r2, r3
 825 004c 3B6A     		ldr	r3, [r7, #32]
 826 004e 1A60     		str	r2, [r3]
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* See if the new bit value should unblock any tasks. */
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		while( pxListItem != pxListEnd )
 827              		.loc 1 556 0
 828 0050 3CE0     		b	.L62
 829              	.L67:
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			pxNext = listGET_NEXT( pxListItem );
 830              		.loc 1 558 0
 831 0052 FB6A     		ldr	r3, [r7, #44]
 832 0054 5B68     		ldr	r3, [r3, #4]
 833 0056 7B61     		str	r3, [r7, #20]
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			uxBitsWaitedFor = listGET_LIST_ITEM_VALUE( pxListItem );
 834              		.loc 1 559 0
 835 0058 FB6A     		ldr	r3, [r7, #44]
 836 005a 1B68     		ldr	r3, [r3]
 837 005c 3B61     		str	r3, [r7, #16]
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			xMatchFound = pdFALSE;
 838              		.loc 1 560 0
 839 005e 0023     		movs	r3, #0
 840 0060 7B62     		str	r3, [r7, #36]
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* Split the bits waited for from the control bits. */
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			uxControlBits = uxBitsWaitedFor & eventEVENT_BITS_CONTROL_BYTES;
 841              		.loc 1 563 0
 842 0062 3B69     		ldr	r3, [r7, #16]
 843 0064 03F07F43 		and	r3, r3, #-16777216
 844 0068 FB60     		str	r3, [r7, #12]
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			uxBitsWaitedFor &= ~eventEVENT_BITS_CONTROL_BYTES;
 845              		.loc 1 564 0
 846 006a 3B69     		ldr	r3, [r7, #16]
 847 006c 23F07F43 		bic	r3, r3, #-16777216
 848 0070 3B61     		str	r3, [r7, #16]
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			if( ( uxControlBits & eventWAIT_FOR_ALL_BITS ) == ( EventBits_t ) 0 )
 849              		.loc 1 566 0
 850 0072 FB68     		ldr	r3, [r7, #12]
 851 0074 03F08063 		and	r3, r3, #67108864
 852 0078 002B     		cmp	r3, #0
 853 007a 08D1     		bne	.L63
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 30


 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* Just looking for single bit being set. */
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) != ( EventBits_t ) 0 )
 854              		.loc 1 569 0
 855 007c 3B6A     		ldr	r3, [r7, #32]
 856 007e 1A68     		ldr	r2, [r3]
 857 0080 3B69     		ldr	r3, [r7, #16]
 858 0082 1340     		ands	r3, r3, r2
 859 0084 002B     		cmp	r3, #0
 860 0086 0BD0     		beq	.L64
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					xMatchFound = pdTRUE;
 861              		.loc 1 571 0
 862 0088 0123     		movs	r3, #1
 863 008a 7B62     		str	r3, [r7, #36]
 864 008c 08E0     		b	.L64
 865              	.L63:
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				else
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			else if( ( uxBitsWaitedFor & pxEventBits->uxEventBits ) == uxBitsWaitedFor )
 866              		.loc 1 578 0
 867 008e 3B6A     		ldr	r3, [r7, #32]
 868 0090 1A68     		ldr	r2, [r3]
 869 0092 3B69     		ldr	r3, [r7, #16]
 870 0094 1A40     		ands	r2, r2, r3
 871 0096 3B69     		ldr	r3, [r7, #16]
 872 0098 9A42     		cmp	r2, r3
 873 009a 01D1     		bne	.L64
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* All bits are set. */
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				xMatchFound = pdTRUE;
 874              		.loc 1 581 0
 875 009c 0123     		movs	r3, #1
 876 009e 7B62     		str	r3, [r7, #36]
 877              	.L64:
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			else
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* Need all bits to be set, but not all the bits were set. */
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			if( xMatchFound != pdFALSE )
 878              		.loc 1 588 0
 879 00a0 7B6A     		ldr	r3, [r7, #36]
 880 00a2 002B     		cmp	r3, #0
 881 00a4 10D0     		beq	.L65
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* The bits match.  Should the bits be cleared on exit? */
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				if( ( uxControlBits & eventCLEAR_EVENTS_ON_EXIT_BIT ) != ( EventBits_t ) 0 )
 882              		.loc 1 591 0
 883 00a6 FB68     		ldr	r3, [r7, #12]
 884 00a8 03F08073 		and	r3, r3, #16777216
 885 00ac 002B     		cmp	r3, #0
 886 00ae 03D0     		beq	.L66
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 31


 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					uxBitsToClear |= uxBitsWaitedFor;
 887              		.loc 1 593 0
 888 00b0 BA6A     		ldr	r2, [r7, #40]
 889 00b2 3B69     		ldr	r3, [r7, #16]
 890 00b4 1343     		orrs	r3, r3, r2
 891 00b6 BB62     		str	r3, [r7, #40]
 892              	.L66:
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				else
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				{
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 					mtCOVERAGE_TEST_MARKER();
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				}
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				/* Store the actual event flag value in the task's event list
 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				item before removing the task from the event list.  The
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				eventUNBLOCKED_DUE_TO_BIT_SET bit is set so the task knows
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				that is was unblocked due to its required bits matching, rather
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				than because it timed out. */
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				( void ) xTaskRemoveFromUnorderedEventList( pxListItem, pxEventBits->uxEventBits | eventUNBLOCK
 893              		.loc 1 605 0
 894 00b8 3B6A     		ldr	r3, [r7, #32]
 895 00ba 1B68     		ldr	r3, [r3]
 896 00bc 43F00073 		orr	r3, r3, #33554432
 897 00c0 1946     		mov	r1, r3
 898 00c2 F86A     		ldr	r0, [r7, #44]
 899 00c4 FFF7FEFF 		bl	xTaskRemoveFromUnorderedEventList
 900              	.L65:
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* Move onto the next list item.  Note pxListItem->pxNext is not
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			used here as the list item may have been removed from the event list
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			and inserted into the ready/pending reading list. */
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			pxListItem = pxNext;
 901              		.loc 1 611 0
 902 00c8 7B69     		ldr	r3, [r7, #20]
 903 00ca FB62     		str	r3, [r7, #44]
 904              	.L62:
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 905              		.loc 1 556 0
 906 00cc FA6A     		ldr	r2, [r7, #44]
 907 00ce BB69     		ldr	r3, [r7, #24]
 908 00d0 9A42     		cmp	r2, r3
 909 00d2 BED1     		bne	.L67
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Clear any bits that matched when the eventCLEAR_EVENTS_ON_EXIT_BIT
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		bit was set in the control word. */
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		pxEventBits->uxEventBits &= ~uxBitsToClear;
 910              		.loc 1 616 0
 911 00d4 3B6A     		ldr	r3, [r7, #32]
 912 00d6 1A68     		ldr	r2, [r3]
 913 00d8 BB6A     		ldr	r3, [r7, #40]
 914 00da DB43     		mvns	r3, r3
 915 00dc 1A40     		ands	r2, r2, r3
 916 00de 3B6A     		ldr	r3, [r7, #32]
 917 00e0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 32


 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	( void ) xTaskResumeAll();
 918              		.loc 1 618 0
 919 00e2 FFF7FEFF 		bl	xTaskResumeAll
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	return pxEventBits->uxEventBits;
 920              		.loc 1 620 0
 921 00e6 3B6A     		ldr	r3, [r7, #32]
 922 00e8 1B68     		ldr	r3, [r3]
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 923              		.loc 1 621 0
 924 00ea 1846     		mov	r0, r3
 925 00ec 3037     		adds	r7, r7, #48
 926              		.cfi_def_cfa_offset 8
 927 00ee BD46     		mov	sp, r7
 928              		.cfi_def_cfa_register 13
 929              		@ sp needed
 930 00f0 80BD     		pop	{r7, pc}
 931              		.cfi_endproc
 932              	.LFE134:
 933              		.size	xEventGroupSetBits, .-xEventGroupSetBits
 934 00f2 00BF     		.section	.text.vEventGroupDelete,"ax",%progbits
 935              		.align	2
 936              		.global	vEventGroupDelete
 937              		.thumb
 938              		.thumb_func
 939              		.type	vEventGroupDelete, %function
 940              	vEventGroupDelete:
 941              	.LFB135:
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** void vEventGroupDelete( EventGroupHandle_t xEventGroup )
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 942              		.loc 1 625 0
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 16
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946 0000 80B5     		push	{r7, lr}
 947              		.cfi_def_cfa_offset 8
 948              		.cfi_offset 7, -8
 949              		.cfi_offset 14, -4
 950 0002 84B0     		sub	sp, sp, #16
 951              		.cfi_def_cfa_offset 24
 952 0004 00AF     		add	r7, sp, #0
 953              		.cfi_def_cfa_register 7
 954 0006 7860     		str	r0, [r7, #4]
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** EventGroup_t *pxEventBits = ( EventGroup_t * ) xEventGroup;
 955              		.loc 1 626 0
 956 0008 7B68     		ldr	r3, [r7, #4]
 957 000a FB60     		str	r3, [r7, #12]
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** const List_t *pxTasksWaitingForBits = &( pxEventBits->xTasksWaitingForBits );
 958              		.loc 1 627 0
 959 000c FB68     		ldr	r3, [r7, #12]
 960 000e 0433     		adds	r3, r3, #4
 961 0010 BB60     		str	r3, [r7, #8]
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	vTaskSuspendAll();
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 33


 962              		.loc 1 629 0
 963 0012 FFF7FEFF 		bl	vTaskSuspendAll
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		traceEVENT_GROUP_DELETE( xEventGroup );
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		while( listCURRENT_LIST_LENGTH( pxTasksWaitingForBits ) > ( UBaseType_t ) 0 )
 964              		.loc 1 633 0
 965 0016 0EE0     		b	.L70
 966              	.L73:
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* Unblock the task, returning 0 as the event list is being deleted
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			and	cannot therefore have any bits set. */
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			configASSERT( pxTasksWaitingForBits->xListEnd.pxNext != ( ListItem_t * ) &( pxTasksWaitingForBit
 967              		.loc 1 637 0
 968 0018 BB68     		ldr	r3, [r7, #8]
 969 001a DA68     		ldr	r2, [r3, #12]
 970 001c BB68     		ldr	r3, [r7, #8]
 971 001e 0833     		adds	r3, r3, #8
 972 0020 9A42     		cmp	r2, r3
 973 0022 01D1     		bne	.L71
 974              		.loc 1 637 0 is_stmt 0 discriminator 1
 975              		.syntax unified
 976              	@ 637 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\event_groups.c" 1
 977 0024 72B6     		 cpsid i 
 978              	@ 0 "" 2
 979              		.thumb
 980              		.syntax unified
 981              	.L72:
 982 0026 FEE7     		b	.L72
 983              	.L71:
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			( void ) xTaskRemoveFromUnorderedEventList( pxTasksWaitingForBits->xListEnd.pxNext, eventUNBLOCK
 984              		.loc 1 638 0 is_stmt 1
 985 0028 BB68     		ldr	r3, [r7, #8]
 986 002a DB68     		ldr	r3, [r3, #12]
 987 002c 4FF00071 		mov	r1, #33554432
 988 0030 1846     		mov	r0, r3
 989 0032 FFF7FEFF 		bl	xTaskRemoveFromUnorderedEventList
 990              	.L70:
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 991              		.loc 1 633 0
 992 0036 BB68     		ldr	r3, [r7, #8]
 993 0038 1B68     		ldr	r3, [r3]
 994 003a 002B     		cmp	r3, #0
 995 003c ECD1     		bne	.L73
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The event group can only have been allocated dynamically - free
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			it again. */
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			vPortFree( pxEventBits );
 996              		.loc 1 645 0
 997 003e F868     		ldr	r0, [r7, #12]
 998 0040 FFF7FEFF 		bl	vPortFree
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 34


 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			/* The event group could have been allocated statically or
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			dynamically, so check before attempting to free the memory. */
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			if( pxEventBits->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				vPortFree( pxEventBits );
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			else
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			{
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 				mtCOVERAGE_TEST_MARKER();
 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			}
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	( void ) xTaskResumeAll();
 999              		.loc 1 662 0
 1000 0044 FFF7FEFF 		bl	xTaskResumeAll
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 1001              		.loc 1 663 0
 1002 0048 00BF     		nop
 1003 004a 1037     		adds	r7, r7, #16
 1004              		.cfi_def_cfa_offset 8
 1005 004c BD46     		mov	sp, r7
 1006              		.cfi_def_cfa_register 13
 1007              		@ sp needed
 1008 004e 80BD     		pop	{r7, pc}
 1009              		.cfi_endproc
 1010              	.LFE135:
 1011              		.size	vEventGroupDelete, .-vEventGroupDelete
 1012              		.section	.text.vEventGroupSetBitsCallback,"ax",%progbits
 1013              		.align	2
 1014              		.global	vEventGroupSetBitsCallback
 1015              		.thumb
 1016              		.thumb_func
 1017              		.type	vEventGroupSetBitsCallback, %function
 1018              	vEventGroupSetBitsCallback:
 1019              	.LFB136:
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /* For internal use only - execute a 'set bits' command that was pended from
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** an interrupt. */
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** void vEventGroupSetBitsCallback( void *pvEventGroup, const uint32_t ulBitsToSet )
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 1020              		.loc 1 669 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 8
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 82B0     		sub	sp, sp, #8
 1029              		.cfi_def_cfa_offset 16
 1030 0004 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]
 1033 0008 3960     		str	r1, [r7]
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	( void ) xEventGroupSetBits( pvEventGroup, ( EventBits_t ) ulBitsToSet );
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 35


 1034              		.loc 1 670 0
 1035 000a 3968     		ldr	r1, [r7]
 1036 000c 7868     		ldr	r0, [r7, #4]
 1037 000e FFF7FEFF 		bl	xEventGroupSetBits
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 1038              		.loc 1 671 0
 1039 0012 00BF     		nop
 1040 0014 0837     		adds	r7, r7, #8
 1041              		.cfi_def_cfa_offset 8
 1042 0016 BD46     		mov	sp, r7
 1043              		.cfi_def_cfa_register 13
 1044              		@ sp needed
 1045 0018 80BD     		pop	{r7, pc}
 1046              		.cfi_endproc
 1047              	.LFE136:
 1048              		.size	vEventGroupSetBitsCallback, .-vEventGroupSetBitsCallback
 1049 001a 00BF     		.section	.text.vEventGroupClearBitsCallback,"ax",%progbits
 1050              		.align	2
 1051              		.global	vEventGroupClearBitsCallback
 1052              		.thumb
 1053              		.thumb_func
 1054              		.type	vEventGroupClearBitsCallback, %function
 1055              	vEventGroupClearBitsCallback:
 1056              	.LFB137:
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /* For internal use only - execute a 'clear bits' command that was pended from
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** an interrupt. */
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** void vEventGroupClearBitsCallback( void *pvEventGroup, const uint32_t ulBitsToClear )
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 1057              		.loc 1 677 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 8
 1060              		@ frame_needed = 1, uses_anonymous_args = 0
 1061 0000 80B5     		push	{r7, lr}
 1062              		.cfi_def_cfa_offset 8
 1063              		.cfi_offset 7, -8
 1064              		.cfi_offset 14, -4
 1065 0002 82B0     		sub	sp, sp, #8
 1066              		.cfi_def_cfa_offset 16
 1067 0004 00AF     		add	r7, sp, #0
 1068              		.cfi_def_cfa_register 7
 1069 0006 7860     		str	r0, [r7, #4]
 1070 0008 3960     		str	r1, [r7]
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	( void ) xEventGroupClearBits( pvEventGroup, ( EventBits_t ) ulBitsToClear );
 1071              		.loc 1 678 0
 1072 000a 3968     		ldr	r1, [r7]
 1073 000c 7868     		ldr	r0, [r7, #4]
 1074 000e FFF7FEFF 		bl	xEventGroupClearBits
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 1075              		.loc 1 679 0
 1076 0012 00BF     		nop
 1077 0014 0837     		adds	r7, r7, #8
 1078              		.cfi_def_cfa_offset 8
 1079 0016 BD46     		mov	sp, r7
 1080              		.cfi_def_cfa_register 13
 1081              		@ sp needed
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 36


 1082 0018 80BD     		pop	{r7, pc}
 1083              		.cfi_endproc
 1084              	.LFE137:
 1085              		.size	vEventGroupClearBitsCallback, .-vEventGroupClearBitsCallback
 1086 001a 00BF     		.section	.text.prvTestWaitCondition,"ax",%progbits
 1087              		.align	2
 1088              		.thumb
 1089              		.thumb_func
 1090              		.type	prvTestWaitCondition, %function
 1091              	prvTestWaitCondition:
 1092              	.LFB138:
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** /*-----------------------------------------------------------*/
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** static BaseType_t prvTestWaitCondition( const EventBits_t uxCurrentEventBits, const EventBits_t uxB
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** {
 1093              		.loc 1 683 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 24
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098 0000 80B4     		push	{r7}
 1099              		.cfi_def_cfa_offset 4
 1100              		.cfi_offset 7, -4
 1101 0002 87B0     		sub	sp, sp, #28
 1102              		.cfi_def_cfa_offset 32
 1103 0004 00AF     		add	r7, sp, #0
 1104              		.cfi_def_cfa_register 7
 1105 0006 F860     		str	r0, [r7, #12]
 1106 0008 B960     		str	r1, [r7, #8]
 1107 000a 7A60     		str	r2, [r7, #4]
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** BaseType_t xWaitConditionMet = pdFALSE;
 1108              		.loc 1 684 0
 1109 000c 0023     		movs	r3, #0
 1110 000e 7B61     		str	r3, [r7, #20]
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	if( xWaitForAllBits == pdFALSE )
 1111              		.loc 1 686 0
 1112 0010 7B68     		ldr	r3, [r7, #4]
 1113 0012 002B     		cmp	r3, #0
 1114 0014 07D1     		bne	.L77
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Task only has to wait for one bit within uxBitsToWaitFor to be
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		set.  Is one already set? */
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) != ( EventBits_t ) 0 )
 1115              		.loc 1 690 0
 1116 0016 FA68     		ldr	r2, [r7, #12]
 1117 0018 BB68     		ldr	r3, [r7, #8]
 1118 001a 1340     		ands	r3, r3, r2
 1119 001c 002B     		cmp	r3, #0
 1120 001e 0AD0     		beq	.L78
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1121              		.loc 1 692 0
 1122 0020 0123     		movs	r3, #1
 1123 0022 7B61     		str	r3, [r7, #20]
 1124 0024 07E0     		b	.L78
 1125              	.L77:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 37


 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	else
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	{
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		/* Task has to wait for all the bits in uxBitsToWaitFor to be set.
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		Are they set already? */
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		if( ( uxCurrentEventBits & uxBitsToWaitFor ) == uxBitsToWaitFor )
 1126              		.loc 1 703 0
 1127 0026 FA68     		ldr	r2, [r7, #12]
 1128 0028 BB68     		ldr	r3, [r7, #8]
 1129 002a 1A40     		ands	r2, r2, r3
 1130 002c BB68     		ldr	r3, [r7, #8]
 1131 002e 9A42     		cmp	r2, r3
 1132 0030 01D1     		bne	.L78
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			xWaitConditionMet = pdTRUE;
 1133              		.loc 1 705 0
 1134 0032 0123     		movs	r3, #1
 1135 0034 7B61     		str	r3, [r7, #20]
 1136              	.L78:
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		else
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		{
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 			mtCOVERAGE_TEST_MARKER();
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 		}
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	}
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** 	return xWaitConditionMet;
 1137              		.loc 1 713 0
 1138 0036 7B69     		ldr	r3, [r7, #20]
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/event_groups.c **** }
 1139              		.loc 1 714 0
 1140 0038 1846     		mov	r0, r3
 1141 003a 1C37     		adds	r7, r7, #28
 1142              		.cfi_def_cfa_offset 4
 1143 003c BD46     		mov	sp, r7
 1144              		.cfi_def_cfa_register 13
 1145              		@ sp needed
 1146 003e 5DF8047B 		ldr	r7, [sp], #4
 1147              		.cfi_restore 7
 1148              		.cfi_def_cfa_offset 0
 1149 0042 7047     		bx	lr
 1150              		.cfi_endproc
 1151              	.LFE138:
 1152              		.size	prvTestWaitCondition, .-prvTestWaitCondition
 1153              		.text
 1154              	.Letext0:
 1155              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1156              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 1157              		.file 5 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/list.h"
 1158              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/event_groups.h"
 1159              		.file 7 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 1160              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 38


 1161              	.Ldebug_info0:
 1162 0000 CD060000 		.4byte	0x6cd
 1163 0004 0400     		.2byte	0x4
 1164 0006 00000000 		.4byte	.Ldebug_abbrev0
 1165 000a 04       		.byte	0x4
 1166 000b 01       		.uleb128 0x1
 1167 000c 41010000 		.4byte	.LASF77
 1168 0010 0C       		.byte	0xc
 1169 0011 5A050000 		.4byte	.LASF78
 1170 0015 68020000 		.4byte	.LASF79
 1171 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1172 001d 00000000 		.4byte	0
 1173 0021 00000000 		.4byte	.Ldebug_line0
 1174 0025 02       		.uleb128 0x2
 1175 0026 04       		.byte	0x4
 1176 0027 07       		.byte	0x7
 1177 0028 3E030000 		.4byte	.LASF0
 1178 002c 03       		.uleb128 0x3
 1179 002d 04       		.byte	0x4
 1180 002e 05       		.byte	0x5
 1181 002f 696E7400 		.ascii	"int\000"
 1182 0033 02       		.uleb128 0x2
 1183 0034 08       		.byte	0x8
 1184 0035 05       		.byte	0x5
 1185 0036 0F010000 		.4byte	.LASF1
 1186 003a 02       		.uleb128 0x2
 1187 003b 08       		.byte	0x8
 1188 003c 04       		.byte	0x4
 1189 003d DF000000 		.4byte	.LASF2
 1190 0041 02       		.uleb128 0x2
 1191 0042 01       		.byte	0x1
 1192 0043 06       		.byte	0x6
 1193 0044 FD020000 		.4byte	.LASF3
 1194 0048 02       		.uleb128 0x2
 1195 0049 01       		.byte	0x1
 1196 004a 08       		.byte	0x8
 1197 004b DD020000 		.4byte	.LASF4
 1198 004f 02       		.uleb128 0x2
 1199 0050 02       		.byte	0x2
 1200 0051 05       		.byte	0x5
 1201 0052 41000000 		.4byte	.LASF5
 1202 0056 02       		.uleb128 0x2
 1203 0057 02       		.byte	0x2
 1204 0058 07       		.byte	0x7
 1205 0059 9A030000 		.4byte	.LASF6
 1206 005d 04       		.uleb128 0x4
 1207 005e A4040000 		.4byte	.LASF8
 1208 0062 03       		.byte	0x3
 1209 0063 3F       		.byte	0x3f
 1210 0064 68000000 		.4byte	0x68
 1211 0068 02       		.uleb128 0x2
 1212 0069 04       		.byte	0x4
 1213 006a 05       		.byte	0x5
 1214 006b F4010000 		.4byte	.LASF7
 1215 006f 04       		.uleb128 0x4
 1216 0070 6C000000 		.4byte	.LASF9
 1217 0074 03       		.byte	0x3
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 39


 1218 0075 41       		.byte	0x41
 1219 0076 7A000000 		.4byte	0x7a
 1220 007a 02       		.uleb128 0x2
 1221 007b 04       		.byte	0x4
 1222 007c 07       		.byte	0x7
 1223 007d 6E040000 		.4byte	.LASF10
 1224 0081 02       		.uleb128 0x2
 1225 0082 08       		.byte	0x8
 1226 0083 07       		.byte	0x7
 1227 0084 11030000 		.4byte	.LASF11
 1228 0088 02       		.uleb128 0x2
 1229 0089 04       		.byte	0x4
 1230 008a 07       		.byte	0x7
 1231 008b 03020000 		.4byte	.LASF12
 1232 008f 05       		.uleb128 0x5
 1233 0090 04       		.byte	0x4
 1234 0091 02       		.uleb128 0x2
 1235 0092 01       		.byte	0x1
 1236 0093 08       		.byte	0x8
 1237 0094 D2030000 		.4byte	.LASF13
 1238 0098 04       		.uleb128 0x4
 1239 0099 09030000 		.4byte	.LASF14
 1240 009d 04       		.byte	0x4
 1241 009e 2C       		.byte	0x2c
 1242 009f 5D000000 		.4byte	0x5d
 1243 00a3 04       		.uleb128 0x4
 1244 00a4 28030000 		.4byte	.LASF15
 1245 00a8 04       		.byte	0x4
 1246 00a9 30       		.byte	0x30
 1247 00aa 6F000000 		.4byte	0x6f
 1248 00ae 02       		.uleb128 0x2
 1249 00af 04       		.byte	0x4
 1250 00b0 04       		.byte	0x4
 1251 00b1 0F000000 		.4byte	.LASF16
 1252 00b5 02       		.uleb128 0x2
 1253 00b6 08       		.byte	0x8
 1254 00b7 04       		.byte	0x4
 1255 00b8 80040000 		.4byte	.LASF17
 1256 00bc 04       		.uleb128 0x4
 1257 00bd 64030000 		.4byte	.LASF18
 1258 00c1 02       		.byte	0x2
 1259 00c2 62       		.byte	0x62
 1260 00c3 68000000 		.4byte	0x68
 1261 00c7 04       		.uleb128 0x4
 1262 00c8 03040000 		.4byte	.LASF19
 1263 00cc 02       		.byte	0x2
 1264 00cd 63       		.byte	0x63
 1265 00ce 7A000000 		.4byte	0x7a
 1266 00d2 04       		.uleb128 0x4
 1267 00d3 8F030000 		.4byte	.LASF20
 1268 00d7 02       		.byte	0x2
 1269 00d8 69       		.byte	0x69
 1270 00d9 A3000000 		.4byte	0xa3
 1271 00dd 06       		.uleb128 0x6
 1272 00de 5D020000 		.4byte	.LASF27
 1273 00e2 14       		.byte	0x14
 1274 00e3 05       		.byte	0x5
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 40


 1275 00e4 B5       		.byte	0xb5
 1276 00e5 26010000 		.4byte	0x126
 1277 00e9 07       		.uleb128 0x7
 1278 00ea 2D020000 		.4byte	.LASF21
 1279 00ee 05       		.byte	0x5
 1280 00ef B8       		.byte	0xb8
 1281 00f0 D2000000 		.4byte	0xd2
 1282 00f4 00       		.byte	0
 1283 00f5 07       		.uleb128 0x7
 1284 00f6 E9030000 		.4byte	.LASF22
 1285 00fa 05       		.byte	0x5
 1286 00fb B9       		.byte	0xb9
 1287 00fc 26010000 		.4byte	0x126
 1288 0100 04       		.byte	0x4
 1289 0101 07       		.uleb128 0x7
 1290 0102 54000000 		.4byte	.LASF23
 1291 0106 05       		.byte	0x5
 1292 0107 BA       		.byte	0xba
 1293 0108 26010000 		.4byte	0x126
 1294 010c 08       		.byte	0x8
 1295 010d 07       		.uleb128 0x7
 1296 010e 8F000000 		.4byte	.LASF24
 1297 0112 05       		.byte	0x5
 1298 0113 BB       		.byte	0xbb
 1299 0114 8F000000 		.4byte	0x8f
 1300 0118 0C       		.byte	0xc
 1301 0119 07       		.uleb128 0x7
 1302 011a 6F030000 		.4byte	.LASF25
 1303 011e 05       		.byte	0x5
 1304 011f BC       		.byte	0xbc
 1305 0120 8F000000 		.4byte	0x8f
 1306 0124 10       		.byte	0x10
 1307 0125 00       		.byte	0
 1308 0126 08       		.uleb128 0x8
 1309 0127 04       		.byte	0x4
 1310 0128 DD000000 		.4byte	0xdd
 1311 012c 04       		.uleb128 0x4
 1312 012d 59030000 		.4byte	.LASF26
 1313 0131 05       		.byte	0x5
 1314 0132 BF       		.byte	0xbf
 1315 0133 DD000000 		.4byte	0xdd
 1316 0137 06       		.uleb128 0x6
 1317 0138 37050000 		.4byte	.LASF28
 1318 013c 0C       		.byte	0xc
 1319 013d 05       		.byte	0x5
 1320 013e C1       		.byte	0xc1
 1321 013f 68010000 		.4byte	0x168
 1322 0143 07       		.uleb128 0x7
 1323 0144 2D020000 		.4byte	.LASF21
 1324 0148 05       		.byte	0x5
 1325 0149 C4       		.byte	0xc4
 1326 014a D2000000 		.4byte	0xd2
 1327 014e 00       		.byte	0
 1328 014f 07       		.uleb128 0x7
 1329 0150 E9030000 		.4byte	.LASF22
 1330 0154 05       		.byte	0x5
 1331 0155 C5       		.byte	0xc5
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 41


 1332 0156 26010000 		.4byte	0x126
 1333 015a 04       		.byte	0x4
 1334 015b 07       		.uleb128 0x7
 1335 015c 54000000 		.4byte	.LASF23
 1336 0160 05       		.byte	0x5
 1337 0161 C6       		.byte	0xc6
 1338 0162 26010000 		.4byte	0x126
 1339 0166 08       		.byte	0x8
 1340 0167 00       		.byte	0
 1341 0168 04       		.uleb128 0x4
 1342 0169 00000000 		.4byte	.LASF29
 1343 016d 05       		.byte	0x5
 1344 016e C8       		.byte	0xc8
 1345 016f 37010000 		.4byte	0x137
 1346 0173 06       		.uleb128 0x6
 1347 0174 FD010000 		.4byte	.LASF30
 1348 0178 14       		.byte	0x14
 1349 0179 05       		.byte	0x5
 1350 017a CD       		.byte	0xcd
 1351 017b A4010000 		.4byte	0x1a4
 1352 017f 07       		.uleb128 0x7
 1353 0180 94040000 		.4byte	.LASF31
 1354 0184 05       		.byte	0x5
 1355 0185 D0       		.byte	0xd0
 1356 0186 C7000000 		.4byte	0xc7
 1357 018a 00       		.byte	0
 1358 018b 07       		.uleb128 0x7
 1359 018c 03050000 		.4byte	.LASF32
 1360 0190 05       		.byte	0x5
 1361 0191 D1       		.byte	0xd1
 1362 0192 A4010000 		.4byte	0x1a4
 1363 0196 04       		.byte	0x4
 1364 0197 07       		.uleb128 0x7
 1365 0198 4B000000 		.4byte	.LASF33
 1366 019c 05       		.byte	0x5
 1367 019d D2       		.byte	0xd2
 1368 019e 68010000 		.4byte	0x168
 1369 01a2 08       		.byte	0x8
 1370 01a3 00       		.byte	0
 1371 01a4 08       		.uleb128 0x8
 1372 01a5 04       		.byte	0x4
 1373 01a6 2C010000 		.4byte	0x12c
 1374 01aa 04       		.uleb128 0x4
 1375 01ab FB000000 		.4byte	.LASF34
 1376 01af 05       		.byte	0x5
 1377 01b0 D4       		.byte	0xd4
 1378 01b1 73010000 		.4byte	0x173
 1379 01b5 04       		.uleb128 0x4
 1380 01b6 97000000 		.4byte	.LASF35
 1381 01ba 06       		.byte	0x6
 1382 01bb 7B       		.byte	0x7b
 1383 01bc 8F000000 		.4byte	0x8f
 1384 01c0 04       		.uleb128 0x4
 1385 01c1 77000000 		.4byte	.LASF36
 1386 01c5 06       		.byte	0x6
 1387 01c6 85       		.byte	0x85
 1388 01c7 D2000000 		.4byte	0xd2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 42


 1389 01cb 06       		.uleb128 0x6
 1390 01cc 0C020000 		.4byte	.LASF37
 1391 01d0 18       		.byte	0x18
 1392 01d1 01       		.byte	0x1
 1393 01d2 69       		.byte	0x69
 1394 01d3 F0010000 		.4byte	0x1f0
 1395 01d7 07       		.uleb128 0x7
 1396 01d8 0F040000 		.4byte	.LASF38
 1397 01dc 01       		.byte	0x1
 1398 01dd 6B       		.byte	0x6b
 1399 01de C0010000 		.4byte	0x1c0
 1400 01e2 00       		.byte	0
 1401 01e3 07       		.uleb128 0x7
 1402 01e4 38020000 		.4byte	.LASF39
 1403 01e8 01       		.byte	0x1
 1404 01e9 6C       		.byte	0x6c
 1405 01ea AA010000 		.4byte	0x1aa
 1406 01ee 04       		.byte	0x4
 1407 01ef 00       		.byte	0
 1408 01f0 04       		.uleb128 0x4
 1409 01f1 D2050000 		.4byte	.LASF40
 1410 01f5 01       		.byte	0x1
 1411 01f6 75       		.byte	0x75
 1412 01f7 CB010000 		.4byte	0x1cb
 1413 01fb 09       		.uleb128 0x9
 1414 01fc C2030000 		.4byte	.LASF80
 1415 0200 02       		.byte	0x2
 1416 0201 E7       		.byte	0xe7
 1417 0202 03       		.byte	0x3
 1418 0203 13020000 		.4byte	0x213
 1419 0207 0A       		.uleb128 0xa
 1420 0208 1B040000 		.4byte	.LASF81
 1421 020c 02       		.byte	0x2
 1422 020d E7       		.byte	0xe7
 1423 020e A3000000 		.4byte	0xa3
 1424 0212 00       		.byte	0
 1425 0213 0B       		.uleb128 0xb
 1426 0214 AA000000 		.4byte	.LASF82
 1427 0218 02       		.byte	0x2
 1428 0219 D3       		.byte	0xd3
 1429 021a A3000000 		.4byte	0xa3
 1430 021e 03       		.byte	0x3
 1431 021f 3A020000 		.4byte	0x23a
 1432 0223 0C       		.uleb128 0xc
 1433 0224 EB020000 		.4byte	.LASF41
 1434 0228 02       		.byte	0x2
 1435 0229 D5       		.byte	0xd5
 1436 022a A3000000 		.4byte	0xa3
 1437 022e 0C       		.uleb128 0xc
 1438 022f C5050000 		.4byte	.LASF42
 1439 0233 02       		.byte	0x2
 1440 0234 D5       		.byte	0xd5
 1441 0235 A3000000 		.4byte	0xa3
 1442 0239 00       		.byte	0
 1443 023a 0D       		.uleb128 0xd
 1444 023b 15000000 		.4byte	.LASF43
 1445 023f 01       		.byte	0x1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 43


 1446 0240 AE       		.byte	0xae
 1447 0241 B5010000 		.4byte	0x1b5
 1448 0245 00000000 		.4byte	.LFB129
 1449 0249 2E000000 		.4byte	.LFE129-.LFB129
 1450 024d 01       		.uleb128 0x1
 1451 024e 9C       		.byte	0x9c
 1452 024f 62020000 		.4byte	0x262
 1453 0253 0E       		.uleb128 0xe
 1454 0254 F7040000 		.4byte	.LASF49
 1455 0258 01       		.byte	0x1
 1456 0259 B0       		.byte	0xb0
 1457 025a 62020000 		.4byte	0x262
 1458 025e 02       		.uleb128 0x2
 1459 025f 91       		.byte	0x91
 1460 0260 74       		.sleb128 -12
 1461 0261 00       		.byte	0
 1462 0262 08       		.uleb128 0x8
 1463 0263 04       		.byte	0x4
 1464 0264 F0010000 		.4byte	0x1f0
 1465 0268 0D       		.uleb128 0xd
 1466 0269 4D020000 		.4byte	.LASF44
 1467 026d 01       		.byte	0x1
 1468 026e D0       		.byte	0xd0
 1469 026f C0010000 		.4byte	0x1c0
 1470 0273 00000000 		.4byte	.LFB130
 1471 0277 24010000 		.4byte	.LFE130-.LFB130
 1472 027b 01       		.uleb128 0x1
 1473 027c 9C       		.byte	0x9c
 1474 027d 00030000 		.4byte	0x300
 1475 0281 0F       		.uleb128 0xf
 1476 0282 DD040000 		.4byte	.LASF45
 1477 0286 01       		.byte	0x1
 1478 0287 D0       		.byte	0xd0
 1479 0288 B5010000 		.4byte	0x1b5
 1480 028c 02       		.uleb128 0x2
 1481 028d 91       		.byte	0x91
 1482 028e 5C       		.sleb128 -36
 1483 028f 0F       		.uleb128 0xf
 1484 0290 83000000 		.4byte	.LASF46
 1485 0294 01       		.byte	0x1
 1486 0295 D0       		.byte	0xd0
 1487 0296 00030000 		.4byte	0x300
 1488 029a 02       		.uleb128 0x2
 1489 029b 91       		.byte	0x91
 1490 029c 58       		.sleb128 -40
 1491 029d 0F       		.uleb128 0xf
 1492 029e EB000000 		.4byte	.LASF47
 1493 02a2 01       		.byte	0x1
 1494 02a3 D0       		.byte	0xd0
 1495 02a4 00030000 		.4byte	0x300
 1496 02a8 02       		.uleb128 0x2
 1497 02a9 91       		.byte	0x91
 1498 02aa 54       		.sleb128 -44
 1499 02ab 0F       		.uleb128 0xf
 1500 02ac 02010000 		.4byte	.LASF48
 1501 02b0 01       		.byte	0x1
 1502 02b1 D0       		.byte	0xd0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 44


 1503 02b2 D2000000 		.4byte	0xd2
 1504 02b6 02       		.uleb128 0x2
 1505 02b7 91       		.byte	0x91
 1506 02b8 50       		.sleb128 -48
 1507 02b9 0E       		.uleb128 0xe
 1508 02ba F0030000 		.4byte	.LASF50
 1509 02be 01       		.byte	0x1
 1510 02bf D2       		.byte	0xd2
 1511 02c0 C0010000 		.4byte	0x1c0
 1512 02c4 02       		.uleb128 0x2
 1513 02c5 91       		.byte	0x91
 1514 02c6 68       		.sleb128 -24
 1515 02c7 0E       		.uleb128 0xe
 1516 02c8 65040000 		.4byte	.LASF51
 1517 02cc 01       		.byte	0x1
 1518 02cd D2       		.byte	0xd2
 1519 02ce C0010000 		.4byte	0x1c0
 1520 02d2 02       		.uleb128 0x2
 1521 02d3 91       		.byte	0x91
 1522 02d4 74       		.sleb128 -12
 1523 02d5 0E       		.uleb128 0xe
 1524 02d6 F7040000 		.4byte	.LASF49
 1525 02da 01       		.byte	0x1
 1526 02db D3       		.byte	0xd3
 1527 02dc 62020000 		.4byte	0x262
 1528 02e0 02       		.uleb128 0x2
 1529 02e1 91       		.byte	0x91
 1530 02e2 70       		.sleb128 -16
 1531 02e3 0E       		.uleb128 0xe
 1532 02e4 B5050000 		.4byte	.LASF52
 1533 02e8 01       		.byte	0x1
 1534 02e9 D4       		.byte	0xd4
 1535 02ea BC000000 		.4byte	0xbc
 1536 02ee 02       		.uleb128 0x2
 1537 02ef 91       		.byte	0x91
 1538 02f0 64       		.sleb128 -28
 1539 02f1 0E       		.uleb128 0xe
 1540 02f2 0B050000 		.4byte	.LASF53
 1541 02f6 01       		.byte	0x1
 1542 02f7 D5       		.byte	0xd5
 1543 02f8 BC000000 		.4byte	0xbc
 1544 02fc 02       		.uleb128 0x2
 1545 02fd 91       		.byte	0x91
 1546 02fe 6C       		.sleb128 -20
 1547 02ff 00       		.byte	0
 1548 0300 10       		.uleb128 0x10
 1549 0301 C0010000 		.4byte	0x1c0
 1550 0305 11       		.uleb128 0x11
 1551 0306 7B030000 		.4byte	.LASF54
 1552 030a 01       		.byte	0x1
 1553 030b 4401     		.2byte	0x144
 1554 030d C0010000 		.4byte	0x1c0
 1555 0311 00000000 		.4byte	.LFB131
 1556 0315 50010000 		.4byte	.LFE131-.LFB131
 1557 0319 01       		.uleb128 0x1
 1558 031a 9C       		.byte	0x9c
 1559 031b DE030000 		.4byte	0x3de
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 45


 1560 031f 12       		.uleb128 0x12
 1561 0320 DD040000 		.4byte	.LASF45
 1562 0324 01       		.byte	0x1
 1563 0325 4401     		.2byte	0x144
 1564 0327 B5010000 		.4byte	0x1b5
 1565 032b 02       		.uleb128 0x2
 1566 032c 91       		.byte	0x91
 1567 032d 54       		.sleb128 -44
 1568 032e 12       		.uleb128 0x12
 1569 032f EB000000 		.4byte	.LASF47
 1570 0333 01       		.byte	0x1
 1571 0334 4401     		.2byte	0x144
 1572 0336 00030000 		.4byte	0x300
 1573 033a 02       		.uleb128 0x2
 1574 033b 91       		.byte	0x91
 1575 033c 50       		.sleb128 -48
 1576 033d 12       		.uleb128 0x12
 1577 033e 5F000000 		.4byte	.LASF55
 1578 0342 01       		.byte	0x1
 1579 0343 4401     		.2byte	0x144
 1580 0345 DE030000 		.4byte	0x3de
 1581 0349 02       		.uleb128 0x2
 1582 034a 91       		.byte	0x91
 1583 034b 4C       		.sleb128 -52
 1584 034c 12       		.uleb128 0x12
 1585 034d 27000000 		.4byte	.LASF56
 1586 0351 01       		.byte	0x1
 1587 0352 4401     		.2byte	0x144
 1588 0354 DE030000 		.4byte	0x3de
 1589 0358 02       		.uleb128 0x2
 1590 0359 91       		.byte	0x91
 1591 035a 48       		.sleb128 -56
 1592 035b 12       		.uleb128 0x12
 1593 035c 02010000 		.4byte	.LASF48
 1594 0360 01       		.byte	0x1
 1595 0361 4401     		.2byte	0x144
 1596 0363 D2000000 		.4byte	0xd2
 1597 0367 02       		.uleb128 0x2
 1598 0368 91       		.byte	0x91
 1599 0369 00       		.sleb128 0
 1600 036a 13       		.uleb128 0x13
 1601 036b F7040000 		.4byte	.LASF49
 1602 036f 01       		.byte	0x1
 1603 0370 4601     		.2byte	0x146
 1604 0372 62020000 		.4byte	0x262
 1605 0376 02       		.uleb128 0x2
 1606 0377 91       		.byte	0x91
 1607 0378 6C       		.sleb128 -20
 1608 0379 13       		.uleb128 0x13
 1609 037a 65040000 		.4byte	.LASF51
 1610 037e 01       		.byte	0x1
 1611 037f 4701     		.2byte	0x147
 1612 0381 C0010000 		.4byte	0x1c0
 1613 0385 02       		.uleb128 0x2
 1614 0386 91       		.byte	0x91
 1615 0387 74       		.sleb128 -12
 1616 0388 13       		.uleb128 0x13
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 46


 1617 0389 2A040000 		.4byte	.LASF57
 1618 038d 01       		.byte	0x1
 1619 038e 4701     		.2byte	0x147
 1620 0390 C0010000 		.4byte	0x1c0
 1621 0394 02       		.uleb128 0x2
 1622 0395 91       		.byte	0x91
 1623 0396 70       		.sleb128 -16
 1624 0397 13       		.uleb128 0x13
 1625 0398 D7030000 		.4byte	.LASF58
 1626 039c 01       		.byte	0x1
 1627 039d 4801     		.2byte	0x148
 1628 039f BC000000 		.4byte	0xbc
 1629 03a3 02       		.uleb128 0x2
 1630 03a4 91       		.byte	0x91
 1631 03a5 60       		.sleb128 -32
 1632 03a6 13       		.uleb128 0x13
 1633 03a7 B5050000 		.4byte	.LASF52
 1634 03ab 01       		.byte	0x1
 1635 03ac 4801     		.2byte	0x148
 1636 03ae BC000000 		.4byte	0xbc
 1637 03b2 02       		.uleb128 0x2
 1638 03b3 91       		.byte	0x91
 1639 03b4 5C       		.sleb128 -36
 1640 03b5 13       		.uleb128 0x13
 1641 03b6 0B050000 		.4byte	.LASF53
 1642 03ba 01       		.byte	0x1
 1643 03bb 4901     		.2byte	0x149
 1644 03bd BC000000 		.4byte	0xbc
 1645 03c1 02       		.uleb128 0x2
 1646 03c2 91       		.byte	0x91
 1647 03c3 68       		.sleb128 -24
 1648 03c4 14       		.uleb128 0x14
 1649 03c5 5E000000 		.4byte	.LBB6
 1650 03c9 74000000 		.4byte	.LBE6-.LBB6
 1651 03cd 13       		.uleb128 0x13
 1652 03ce 47050000 		.4byte	.LASF59
 1653 03d2 01       		.byte	0x1
 1654 03d3 5801     		.2byte	0x158
 1655 03d5 00030000 		.4byte	0x300
 1656 03d9 02       		.uleb128 0x2
 1657 03da 91       		.byte	0x91
 1658 03db 64       		.sleb128 -28
 1659 03dc 00       		.byte	0
 1660 03dd 00       		.byte	0
 1661 03de 10       		.uleb128 0x10
 1662 03df BC000000 		.4byte	0xbc
 1663 03e3 11       		.uleb128 0x11
 1664 03e4 C8020000 		.4byte	.LASF60
 1665 03e8 01       		.byte	0x1
 1666 03e9 D801     		.2byte	0x1d8
 1667 03eb C0010000 		.4byte	0x1c0
 1668 03ef 00000000 		.4byte	.LFB132
 1669 03f3 4C000000 		.4byte	.LFE132-.LFB132
 1670 03f7 01       		.uleb128 0x1
 1671 03f8 9C       		.byte	0x9c
 1672 03f9 3A040000 		.4byte	0x43a
 1673 03fd 12       		.uleb128 0x12
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 47


 1674 03fe DD040000 		.4byte	.LASF45
 1675 0402 01       		.byte	0x1
 1676 0403 D801     		.2byte	0x1d8
 1677 0405 B5010000 		.4byte	0x1b5
 1678 0409 02       		.uleb128 0x2
 1679 040a 91       		.byte	0x91
 1680 040b 6C       		.sleb128 -20
 1681 040c 12       		.uleb128 0x12
 1682 040d E9040000 		.4byte	.LASF61
 1683 0411 01       		.byte	0x1
 1684 0412 D801     		.2byte	0x1d8
 1685 0414 00030000 		.4byte	0x300
 1686 0418 02       		.uleb128 0x2
 1687 0419 91       		.byte	0x91
 1688 041a 68       		.sleb128 -24
 1689 041b 13       		.uleb128 0x13
 1690 041c F7040000 		.4byte	.LASF49
 1691 0420 01       		.byte	0x1
 1692 0421 DA01     		.2byte	0x1da
 1693 0423 62020000 		.4byte	0x262
 1694 0427 02       		.uleb128 0x2
 1695 0428 91       		.byte	0x91
 1696 0429 74       		.sleb128 -12
 1697 042a 13       		.uleb128 0x13
 1698 042b 65040000 		.4byte	.LASF51
 1699 042f 01       		.byte	0x1
 1700 0430 DB01     		.2byte	0x1db
 1701 0432 C0010000 		.4byte	0x1c0
 1702 0436 02       		.uleb128 0x2
 1703 0437 91       		.byte	0x91
 1704 0438 70       		.sleb128 -16
 1705 0439 00       		.byte	0
 1706 043a 15       		.uleb128 0x15
 1707 043b 38040000 		.4byte	.LASF62
 1708 043f 01       		.byte	0x1
 1709 0440 0202     		.2byte	0x202
 1710 0442 C0010000 		.4byte	0x1c0
 1711 0446 00000000 		.4byte	.LFB133
 1712 044a 46000000 		.4byte	.LFE133-.LFB133
 1713 044e 01       		.uleb128 0x1
 1714 044f 9C       		.byte	0x9c
 1715 0450 D9040000 		.4byte	0x4d9
 1716 0454 12       		.uleb128 0x12
 1717 0455 DD040000 		.4byte	.LASF45
 1718 0459 01       		.byte	0x1
 1719 045a 0202     		.2byte	0x202
 1720 045c B5010000 		.4byte	0x1b5
 1721 0460 02       		.uleb128 0x2
 1722 0461 91       		.byte	0x91
 1723 0462 5C       		.sleb128 -36
 1724 0463 13       		.uleb128 0x13
 1725 0464 AE040000 		.4byte	.LASF63
 1726 0468 01       		.byte	0x1
 1727 0469 0402     		.2byte	0x204
 1728 046b C7000000 		.4byte	0xc7
 1729 046f 02       		.uleb128 0x2
 1730 0470 91       		.byte	0x91
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 48


 1731 0471 70       		.sleb128 -16
 1732 0472 13       		.uleb128 0x13
 1733 0473 F7040000 		.4byte	.LASF49
 1734 0477 01       		.byte	0x1
 1735 0478 0502     		.2byte	0x205
 1736 047a 62020000 		.4byte	0x262
 1737 047e 02       		.uleb128 0x2
 1738 047f 91       		.byte	0x91
 1739 0480 74       		.sleb128 -12
 1740 0481 13       		.uleb128 0x13
 1741 0482 65040000 		.4byte	.LASF51
 1742 0486 01       		.byte	0x1
 1743 0487 0602     		.2byte	0x206
 1744 0489 C0010000 		.4byte	0x1c0
 1745 048d 02       		.uleb128 0x2
 1746 048e 91       		.byte	0x91
 1747 048f 6C       		.sleb128 -20
 1748 0490 16       		.uleb128 0x16
 1749 0491 13020000 		.4byte	0x213
 1750 0495 0C000000 		.4byte	.LBB7
 1751 0499 1A000000 		.4byte	.LBE7-.LBB7
 1752 049d 01       		.byte	0x1
 1753 049e 0802     		.2byte	0x208
 1754 04a0 BF040000 		.4byte	0x4bf
 1755 04a4 14       		.uleb128 0x14
 1756 04a5 0C000000 		.4byte	.LBB8
 1757 04a9 1A000000 		.4byte	.LBE8-.LBB8
 1758 04ad 17       		.uleb128 0x17
 1759 04ae 23020000 		.4byte	0x223
 1760 04b2 02       		.uleb128 0x2
 1761 04b3 91       		.byte	0x91
 1762 04b4 68       		.sleb128 -24
 1763 04b5 17       		.uleb128 0x17
 1764 04b6 2E020000 		.4byte	0x22e
 1765 04ba 02       		.uleb128 0x2
 1766 04bb 91       		.byte	0x91
 1767 04bc 60       		.sleb128 -32
 1768 04bd 00       		.byte	0
 1769 04be 00       		.byte	0
 1770 04bf 18       		.uleb128 0x18
 1771 04c0 FB010000 		.4byte	0x1fb
 1772 04c4 32000000 		.4byte	.LBB9
 1773 04c8 06000000 		.4byte	.LBE9-.LBB9
 1774 04cc 01       		.byte	0x1
 1775 04cd 0C02     		.2byte	0x20c
 1776 04cf 19       		.uleb128 0x19
 1777 04d0 07020000 		.4byte	0x207
 1778 04d4 02       		.uleb128 0x2
 1779 04d5 91       		.byte	0x91
 1780 04d6 64       		.sleb128 -28
 1781 04d7 00       		.byte	0
 1782 04d8 00       		.byte	0
 1783 04d9 11       		.uleb128 0x11
 1784 04da 52040000 		.4byte	.LASF64
 1785 04de 01       		.byte	0x1
 1786 04df 1202     		.2byte	0x212
 1787 04e1 C0010000 		.4byte	0x1c0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 49


 1788 04e5 00000000 		.4byte	.LFB134
 1789 04e9 F2000000 		.4byte	.LFE134-.LFB134
 1790 04ed 01       		.uleb128 0x1
 1791 04ee 9C       		.byte	0x9c
 1792 04ef 99050000 		.4byte	0x599
 1793 04f3 12       		.uleb128 0x12
 1794 04f4 DD040000 		.4byte	.LASF45
 1795 04f8 01       		.byte	0x1
 1796 04f9 1202     		.2byte	0x212
 1797 04fb B5010000 		.4byte	0x1b5
 1798 04ff 02       		.uleb128 0x2
 1799 0500 91       		.byte	0x91
 1800 0501 4C       		.sleb128 -52
 1801 0502 12       		.uleb128 0x12
 1802 0503 83000000 		.4byte	.LASF46
 1803 0507 01       		.byte	0x1
 1804 0508 1202     		.2byte	0x212
 1805 050a 00030000 		.4byte	0x300
 1806 050e 02       		.uleb128 0x2
 1807 050f 91       		.byte	0x91
 1808 0510 48       		.sleb128 -56
 1809 0511 13       		.uleb128 0x13
 1810 0512 22020000 		.4byte	.LASF65
 1811 0516 01       		.byte	0x1
 1812 0517 1402     		.2byte	0x214
 1813 0519 A4010000 		.4byte	0x1a4
 1814 051d 02       		.uleb128 0x2
 1815 051e 91       		.byte	0x91
 1816 051f 74       		.sleb128 -12
 1817 0520 13       		.uleb128 0x13
 1818 0521 E9030000 		.4byte	.LASF22
 1819 0525 01       		.byte	0x1
 1820 0526 1402     		.2byte	0x214
 1821 0528 A4010000 		.4byte	0x1a4
 1822 052c 02       		.uleb128 0x2
 1823 052d 91       		.byte	0x91
 1824 052e 5C       		.sleb128 -36
 1825 052f 13       		.uleb128 0x13
 1826 0530 37000000 		.4byte	.LASF66
 1827 0534 01       		.byte	0x1
 1828 0535 1502     		.2byte	0x215
 1829 0537 99050000 		.4byte	0x599
 1830 053b 02       		.uleb128 0x2
 1831 053c 91       		.byte	0x91
 1832 053d 60       		.sleb128 -32
 1833 053e 13       		.uleb128 0x13
 1834 053f 3A010000 		.4byte	.LASF67
 1835 0543 01       		.byte	0x1
 1836 0544 1602     		.2byte	0x216
 1837 0546 A4050000 		.4byte	0x5a4
 1838 054a 02       		.uleb128 0x2
 1839 054b 91       		.byte	0x91
 1840 054c 64       		.sleb128 -28
 1841 054d 13       		.uleb128 0x13
 1842 054e E9040000 		.4byte	.LASF61
 1843 0552 01       		.byte	0x1
 1844 0553 1702     		.2byte	0x217
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 50


 1845 0555 C0010000 		.4byte	0x1c0
 1846 0559 02       		.uleb128 0x2
 1847 055a 91       		.byte	0x91
 1848 055b 70       		.sleb128 -16
 1849 055c 13       		.uleb128 0x13
 1850 055d BD000000 		.4byte	.LASF68
 1851 0561 01       		.byte	0x1
 1852 0562 1702     		.2byte	0x217
 1853 0564 C0010000 		.4byte	0x1c0
 1854 0568 02       		.uleb128 0x2
 1855 0569 91       		.byte	0x91
 1856 056a 58       		.sleb128 -40
 1857 056b 13       		.uleb128 0x13
 1858 056c 2A040000 		.4byte	.LASF57
 1859 0570 01       		.byte	0x1
 1860 0571 1702     		.2byte	0x217
 1861 0573 C0010000 		.4byte	0x1c0
 1862 0577 02       		.uleb128 0x2
 1863 0578 91       		.byte	0x91
 1864 0579 54       		.sleb128 -44
 1865 057a 13       		.uleb128 0x13
 1866 057b F7040000 		.4byte	.LASF49
 1867 057f 01       		.byte	0x1
 1868 0580 1802     		.2byte	0x218
 1869 0582 62020000 		.4byte	0x262
 1870 0586 02       		.uleb128 0x2
 1871 0587 91       		.byte	0x91
 1872 0588 68       		.sleb128 -24
 1873 0589 13       		.uleb128 0x13
 1874 058a D1040000 		.4byte	.LASF69
 1875 058e 01       		.byte	0x1
 1876 058f 1902     		.2byte	0x219
 1877 0591 BC000000 		.4byte	0xbc
 1878 0595 02       		.uleb128 0x2
 1879 0596 91       		.byte	0x91
 1880 0597 6C       		.sleb128 -20
 1881 0598 00       		.byte	0
 1882 0599 08       		.uleb128 0x8
 1883 059a 04       		.byte	0x4
 1884 059b 9F050000 		.4byte	0x59f
 1885 059f 10       		.uleb128 0x10
 1886 05a0 2C010000 		.4byte	0x12c
 1887 05a4 08       		.uleb128 0x8
 1888 05a5 04       		.byte	0x4
 1889 05a6 AA010000 		.4byte	0x1aa
 1890 05aa 1A       		.uleb128 0x1a
 1891 05ab CD000000 		.4byte	.LASF71
 1892 05af 01       		.byte	0x1
 1893 05b0 7002     		.2byte	0x270
 1894 05b2 00000000 		.4byte	.LFB135
 1895 05b6 50000000 		.4byte	.LFE135-.LFB135
 1896 05ba 01       		.uleb128 0x1
 1897 05bb 9C       		.byte	0x9c
 1898 05bc EE050000 		.4byte	0x5ee
 1899 05c0 12       		.uleb128 0x12
 1900 05c1 DD040000 		.4byte	.LASF45
 1901 05c5 01       		.byte	0x1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 51


 1902 05c6 7002     		.2byte	0x270
 1903 05c8 B5010000 		.4byte	0x1b5
 1904 05cc 02       		.uleb128 0x2
 1905 05cd 91       		.byte	0x91
 1906 05ce 6C       		.sleb128 -20
 1907 05cf 13       		.uleb128 0x13
 1908 05d0 F7040000 		.4byte	.LASF49
 1909 05d4 01       		.byte	0x1
 1910 05d5 7202     		.2byte	0x272
 1911 05d7 62020000 		.4byte	0x262
 1912 05db 02       		.uleb128 0x2
 1913 05dc 91       		.byte	0x91
 1914 05dd 74       		.sleb128 -12
 1915 05de 13       		.uleb128 0x13
 1916 05df 9F050000 		.4byte	.LASF70
 1917 05e3 01       		.byte	0x1
 1918 05e4 7302     		.2byte	0x273
 1919 05e6 EE050000 		.4byte	0x5ee
 1920 05ea 02       		.uleb128 0x2
 1921 05eb 91       		.byte	0x91
 1922 05ec 70       		.sleb128 -16
 1923 05ed 00       		.byte	0
 1924 05ee 08       		.uleb128 0x8
 1925 05ef 04       		.byte	0x4
 1926 05f0 F4050000 		.4byte	0x5f4
 1927 05f4 10       		.uleb128 0x10
 1928 05f5 AA010000 		.4byte	0x1aa
 1929 05f9 1A       		.uleb128 0x1a
 1930 05fa 1C050000 		.4byte	.LASF72
 1931 05fe 01       		.byte	0x1
 1932 05ff 9C02     		.2byte	0x29c
 1933 0601 00000000 		.4byte	.LFB136
 1934 0605 1A000000 		.4byte	.LFE136-.LFB136
 1935 0609 01       		.uleb128 0x1
 1936 060a 9C       		.byte	0x9c
 1937 060b 2E060000 		.4byte	0x62e
 1938 060f 12       		.uleb128 0x12
 1939 0610 31030000 		.4byte	.LASF73
 1940 0614 01       		.byte	0x1
 1941 0615 9C02     		.2byte	0x29c
 1942 0617 8F000000 		.4byte	0x8f
 1943 061b 02       		.uleb128 0x2
 1944 061c 91       		.byte	0x91
 1945 061d 74       		.sleb128 -12
 1946 061e 12       		.uleb128 0x12
 1947 061f C5040000 		.4byte	.LASF74
 1948 0623 01       		.byte	0x1
 1949 0624 9C02     		.2byte	0x29c
 1950 0626 2E060000 		.4byte	0x62e
 1951 062a 02       		.uleb128 0x2
 1952 062b 91       		.byte	0x91
 1953 062c 70       		.sleb128 -16
 1954 062d 00       		.byte	0
 1955 062e 10       		.uleb128 0x10
 1956 062f A3000000 		.4byte	0xa3
 1957 0633 1A       		.uleb128 0x1a
 1958 0634 1D010000 		.4byte	.LASF75
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 52


 1959 0638 01       		.byte	0x1
 1960 0639 A402     		.2byte	0x2a4
 1961 063b 00000000 		.4byte	.LFB137
 1962 063f 1A000000 		.4byte	.LFE137-.LFB137
 1963 0643 01       		.uleb128 0x1
 1964 0644 9C       		.byte	0x9c
 1965 0645 68060000 		.4byte	0x668
 1966 0649 12       		.uleb128 0x12
 1967 064a 31030000 		.4byte	.LASF73
 1968 064e 01       		.byte	0x1
 1969 064f A402     		.2byte	0x2a4
 1970 0651 8F000000 		.4byte	0x8f
 1971 0655 02       		.uleb128 0x2
 1972 0656 91       		.byte	0x91
 1973 0657 74       		.sleb128 -12
 1974 0658 12       		.uleb128 0x12
 1975 0659 4B030000 		.4byte	.LASF76
 1976 065d 01       		.byte	0x1
 1977 065e A402     		.2byte	0x2a4
 1978 0660 2E060000 		.4byte	0x62e
 1979 0664 02       		.uleb128 0x2
 1980 0665 91       		.byte	0x91
 1981 0666 70       		.sleb128 -16
 1982 0667 00       		.byte	0
 1983 0668 1B       		.uleb128 0x1b
 1984 0669 AD030000 		.4byte	.LASF83
 1985 066d 01       		.byte	0x1
 1986 066e AA02     		.2byte	0x2aa
 1987 0670 BC000000 		.4byte	0xbc
 1988 0674 00000000 		.4byte	.LFB138
 1989 0678 44000000 		.4byte	.LFE138-.LFB138
 1990 067c 01       		.uleb128 0x1
 1991 067d 9C       		.byte	0x9c
 1992 067e BF060000 		.4byte	0x6bf
 1993 0682 12       		.uleb128 0x12
 1994 0683 47050000 		.4byte	.LASF59
 1995 0687 01       		.byte	0x1
 1996 0688 AA02     		.2byte	0x2aa
 1997 068a 00030000 		.4byte	0x300
 1998 068e 02       		.uleb128 0x2
 1999 068f 91       		.byte	0x91
 2000 0690 6C       		.sleb128 -20
 2001 0691 12       		.uleb128 0x12
 2002 0692 EB000000 		.4byte	.LASF47
 2003 0696 01       		.byte	0x1
 2004 0697 AA02     		.2byte	0x2aa
 2005 0699 00030000 		.4byte	0x300
 2006 069d 02       		.uleb128 0x2
 2007 069e 91       		.byte	0x91
 2008 069f 68       		.sleb128 -24
 2009 06a0 12       		.uleb128 0x12
 2010 06a1 27000000 		.4byte	.LASF56
 2011 06a5 01       		.byte	0x1
 2012 06a6 AA02     		.2byte	0x2aa
 2013 06a8 DE030000 		.4byte	0x3de
 2014 06ac 02       		.uleb128 0x2
 2015 06ad 91       		.byte	0x91
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 53


 2016 06ae 64       		.sleb128 -28
 2017 06af 13       		.uleb128 0x13
 2018 06b0 D7030000 		.4byte	.LASF58
 2019 06b4 01       		.byte	0x1
 2020 06b5 AC02     		.2byte	0x2ac
 2021 06b7 BC000000 		.4byte	0xbc
 2022 06bb 02       		.uleb128 0x2
 2023 06bc 91       		.byte	0x91
 2024 06bd 74       		.sleb128 -12
 2025 06be 00       		.byte	0
 2026 06bf 1C       		.uleb128 0x1c
 2027 06c0 87040000 		.4byte	.LASF84
 2028 06c4 07       		.byte	0x7
 2029 06c5 EA07     		.2byte	0x7ea
 2030 06c7 CB060000 		.4byte	0x6cb
 2031 06cb 1D       		.uleb128 0x1d
 2032 06cc 98000000 		.4byte	0x98
 2033 06d0 00       		.byte	0
 2034              		.section	.debug_abbrev,"",%progbits
 2035              	.Ldebug_abbrev0:
 2036 0000 01       		.uleb128 0x1
 2037 0001 11       		.uleb128 0x11
 2038 0002 01       		.byte	0x1
 2039 0003 25       		.uleb128 0x25
 2040 0004 0E       		.uleb128 0xe
 2041 0005 13       		.uleb128 0x13
 2042 0006 0B       		.uleb128 0xb
 2043 0007 03       		.uleb128 0x3
 2044 0008 0E       		.uleb128 0xe
 2045 0009 1B       		.uleb128 0x1b
 2046 000a 0E       		.uleb128 0xe
 2047 000b 55       		.uleb128 0x55
 2048 000c 17       		.uleb128 0x17
 2049 000d 11       		.uleb128 0x11
 2050 000e 01       		.uleb128 0x1
 2051 000f 10       		.uleb128 0x10
 2052 0010 17       		.uleb128 0x17
 2053 0011 00       		.byte	0
 2054 0012 00       		.byte	0
 2055 0013 02       		.uleb128 0x2
 2056 0014 24       		.uleb128 0x24
 2057 0015 00       		.byte	0
 2058 0016 0B       		.uleb128 0xb
 2059 0017 0B       		.uleb128 0xb
 2060 0018 3E       		.uleb128 0x3e
 2061 0019 0B       		.uleb128 0xb
 2062 001a 03       		.uleb128 0x3
 2063 001b 0E       		.uleb128 0xe
 2064 001c 00       		.byte	0
 2065 001d 00       		.byte	0
 2066 001e 03       		.uleb128 0x3
 2067 001f 24       		.uleb128 0x24
 2068 0020 00       		.byte	0
 2069 0021 0B       		.uleb128 0xb
 2070 0022 0B       		.uleb128 0xb
 2071 0023 3E       		.uleb128 0x3e
 2072 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 54


 2073 0025 03       		.uleb128 0x3
 2074 0026 08       		.uleb128 0x8
 2075 0027 00       		.byte	0
 2076 0028 00       		.byte	0
 2077 0029 04       		.uleb128 0x4
 2078 002a 16       		.uleb128 0x16
 2079 002b 00       		.byte	0
 2080 002c 03       		.uleb128 0x3
 2081 002d 0E       		.uleb128 0xe
 2082 002e 3A       		.uleb128 0x3a
 2083 002f 0B       		.uleb128 0xb
 2084 0030 3B       		.uleb128 0x3b
 2085 0031 0B       		.uleb128 0xb
 2086 0032 49       		.uleb128 0x49
 2087 0033 13       		.uleb128 0x13
 2088 0034 00       		.byte	0
 2089 0035 00       		.byte	0
 2090 0036 05       		.uleb128 0x5
 2091 0037 0F       		.uleb128 0xf
 2092 0038 00       		.byte	0
 2093 0039 0B       		.uleb128 0xb
 2094 003a 0B       		.uleb128 0xb
 2095 003b 00       		.byte	0
 2096 003c 00       		.byte	0
 2097 003d 06       		.uleb128 0x6
 2098 003e 13       		.uleb128 0x13
 2099 003f 01       		.byte	0x1
 2100 0040 03       		.uleb128 0x3
 2101 0041 0E       		.uleb128 0xe
 2102 0042 0B       		.uleb128 0xb
 2103 0043 0B       		.uleb128 0xb
 2104 0044 3A       		.uleb128 0x3a
 2105 0045 0B       		.uleb128 0xb
 2106 0046 3B       		.uleb128 0x3b
 2107 0047 0B       		.uleb128 0xb
 2108 0048 01       		.uleb128 0x1
 2109 0049 13       		.uleb128 0x13
 2110 004a 00       		.byte	0
 2111 004b 00       		.byte	0
 2112 004c 07       		.uleb128 0x7
 2113 004d 0D       		.uleb128 0xd
 2114 004e 00       		.byte	0
 2115 004f 03       		.uleb128 0x3
 2116 0050 0E       		.uleb128 0xe
 2117 0051 3A       		.uleb128 0x3a
 2118 0052 0B       		.uleb128 0xb
 2119 0053 3B       		.uleb128 0x3b
 2120 0054 0B       		.uleb128 0xb
 2121 0055 49       		.uleb128 0x49
 2122 0056 13       		.uleb128 0x13
 2123 0057 38       		.uleb128 0x38
 2124 0058 0B       		.uleb128 0xb
 2125 0059 00       		.byte	0
 2126 005a 00       		.byte	0
 2127 005b 08       		.uleb128 0x8
 2128 005c 0F       		.uleb128 0xf
 2129 005d 00       		.byte	0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 55


 2130 005e 0B       		.uleb128 0xb
 2131 005f 0B       		.uleb128 0xb
 2132 0060 49       		.uleb128 0x49
 2133 0061 13       		.uleb128 0x13
 2134 0062 00       		.byte	0
 2135 0063 00       		.byte	0
 2136 0064 09       		.uleb128 0x9
 2137 0065 2E       		.uleb128 0x2e
 2138 0066 01       		.byte	0x1
 2139 0067 03       		.uleb128 0x3
 2140 0068 0E       		.uleb128 0xe
 2141 0069 3A       		.uleb128 0x3a
 2142 006a 0B       		.uleb128 0xb
 2143 006b 3B       		.uleb128 0x3b
 2144 006c 0B       		.uleb128 0xb
 2145 006d 27       		.uleb128 0x27
 2146 006e 19       		.uleb128 0x19
 2147 006f 20       		.uleb128 0x20
 2148 0070 0B       		.uleb128 0xb
 2149 0071 01       		.uleb128 0x1
 2150 0072 13       		.uleb128 0x13
 2151 0073 00       		.byte	0
 2152 0074 00       		.byte	0
 2153 0075 0A       		.uleb128 0xa
 2154 0076 05       		.uleb128 0x5
 2155 0077 00       		.byte	0
 2156 0078 03       		.uleb128 0x3
 2157 0079 0E       		.uleb128 0xe
 2158 007a 3A       		.uleb128 0x3a
 2159 007b 0B       		.uleb128 0xb
 2160 007c 3B       		.uleb128 0x3b
 2161 007d 0B       		.uleb128 0xb
 2162 007e 49       		.uleb128 0x49
 2163 007f 13       		.uleb128 0x13
 2164 0080 00       		.byte	0
 2165 0081 00       		.byte	0
 2166 0082 0B       		.uleb128 0xb
 2167 0083 2E       		.uleb128 0x2e
 2168 0084 01       		.byte	0x1
 2169 0085 03       		.uleb128 0x3
 2170 0086 0E       		.uleb128 0xe
 2171 0087 3A       		.uleb128 0x3a
 2172 0088 0B       		.uleb128 0xb
 2173 0089 3B       		.uleb128 0x3b
 2174 008a 0B       		.uleb128 0xb
 2175 008b 27       		.uleb128 0x27
 2176 008c 19       		.uleb128 0x19
 2177 008d 49       		.uleb128 0x49
 2178 008e 13       		.uleb128 0x13
 2179 008f 20       		.uleb128 0x20
 2180 0090 0B       		.uleb128 0xb
 2181 0091 01       		.uleb128 0x1
 2182 0092 13       		.uleb128 0x13
 2183 0093 00       		.byte	0
 2184 0094 00       		.byte	0
 2185 0095 0C       		.uleb128 0xc
 2186 0096 34       		.uleb128 0x34
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 56


 2187 0097 00       		.byte	0
 2188 0098 03       		.uleb128 0x3
 2189 0099 0E       		.uleb128 0xe
 2190 009a 3A       		.uleb128 0x3a
 2191 009b 0B       		.uleb128 0xb
 2192 009c 3B       		.uleb128 0x3b
 2193 009d 0B       		.uleb128 0xb
 2194 009e 49       		.uleb128 0x49
 2195 009f 13       		.uleb128 0x13
 2196 00a0 00       		.byte	0
 2197 00a1 00       		.byte	0
 2198 00a2 0D       		.uleb128 0xd
 2199 00a3 2E       		.uleb128 0x2e
 2200 00a4 01       		.byte	0x1
 2201 00a5 3F       		.uleb128 0x3f
 2202 00a6 19       		.uleb128 0x19
 2203 00a7 03       		.uleb128 0x3
 2204 00a8 0E       		.uleb128 0xe
 2205 00a9 3A       		.uleb128 0x3a
 2206 00aa 0B       		.uleb128 0xb
 2207 00ab 3B       		.uleb128 0x3b
 2208 00ac 0B       		.uleb128 0xb
 2209 00ad 27       		.uleb128 0x27
 2210 00ae 19       		.uleb128 0x19
 2211 00af 49       		.uleb128 0x49
 2212 00b0 13       		.uleb128 0x13
 2213 00b1 11       		.uleb128 0x11
 2214 00b2 01       		.uleb128 0x1
 2215 00b3 12       		.uleb128 0x12
 2216 00b4 06       		.uleb128 0x6
 2217 00b5 40       		.uleb128 0x40
 2218 00b6 18       		.uleb128 0x18
 2219 00b7 9642     		.uleb128 0x2116
 2220 00b9 19       		.uleb128 0x19
 2221 00ba 01       		.uleb128 0x1
 2222 00bb 13       		.uleb128 0x13
 2223 00bc 00       		.byte	0
 2224 00bd 00       		.byte	0
 2225 00be 0E       		.uleb128 0xe
 2226 00bf 34       		.uleb128 0x34
 2227 00c0 00       		.byte	0
 2228 00c1 03       		.uleb128 0x3
 2229 00c2 0E       		.uleb128 0xe
 2230 00c3 3A       		.uleb128 0x3a
 2231 00c4 0B       		.uleb128 0xb
 2232 00c5 3B       		.uleb128 0x3b
 2233 00c6 0B       		.uleb128 0xb
 2234 00c7 49       		.uleb128 0x49
 2235 00c8 13       		.uleb128 0x13
 2236 00c9 02       		.uleb128 0x2
 2237 00ca 18       		.uleb128 0x18
 2238 00cb 00       		.byte	0
 2239 00cc 00       		.byte	0
 2240 00cd 0F       		.uleb128 0xf
 2241 00ce 05       		.uleb128 0x5
 2242 00cf 00       		.byte	0
 2243 00d0 03       		.uleb128 0x3
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 57


 2244 00d1 0E       		.uleb128 0xe
 2245 00d2 3A       		.uleb128 0x3a
 2246 00d3 0B       		.uleb128 0xb
 2247 00d4 3B       		.uleb128 0x3b
 2248 00d5 0B       		.uleb128 0xb
 2249 00d6 49       		.uleb128 0x49
 2250 00d7 13       		.uleb128 0x13
 2251 00d8 02       		.uleb128 0x2
 2252 00d9 18       		.uleb128 0x18
 2253 00da 00       		.byte	0
 2254 00db 00       		.byte	0
 2255 00dc 10       		.uleb128 0x10
 2256 00dd 26       		.uleb128 0x26
 2257 00de 00       		.byte	0
 2258 00df 49       		.uleb128 0x49
 2259 00e0 13       		.uleb128 0x13
 2260 00e1 00       		.byte	0
 2261 00e2 00       		.byte	0
 2262 00e3 11       		.uleb128 0x11
 2263 00e4 2E       		.uleb128 0x2e
 2264 00e5 01       		.byte	0x1
 2265 00e6 3F       		.uleb128 0x3f
 2266 00e7 19       		.uleb128 0x19
 2267 00e8 03       		.uleb128 0x3
 2268 00e9 0E       		.uleb128 0xe
 2269 00ea 3A       		.uleb128 0x3a
 2270 00eb 0B       		.uleb128 0xb
 2271 00ec 3B       		.uleb128 0x3b
 2272 00ed 05       		.uleb128 0x5
 2273 00ee 27       		.uleb128 0x27
 2274 00ef 19       		.uleb128 0x19
 2275 00f0 49       		.uleb128 0x49
 2276 00f1 13       		.uleb128 0x13
 2277 00f2 11       		.uleb128 0x11
 2278 00f3 01       		.uleb128 0x1
 2279 00f4 12       		.uleb128 0x12
 2280 00f5 06       		.uleb128 0x6
 2281 00f6 40       		.uleb128 0x40
 2282 00f7 18       		.uleb128 0x18
 2283 00f8 9642     		.uleb128 0x2116
 2284 00fa 19       		.uleb128 0x19
 2285 00fb 01       		.uleb128 0x1
 2286 00fc 13       		.uleb128 0x13
 2287 00fd 00       		.byte	0
 2288 00fe 00       		.byte	0
 2289 00ff 12       		.uleb128 0x12
 2290 0100 05       		.uleb128 0x5
 2291 0101 00       		.byte	0
 2292 0102 03       		.uleb128 0x3
 2293 0103 0E       		.uleb128 0xe
 2294 0104 3A       		.uleb128 0x3a
 2295 0105 0B       		.uleb128 0xb
 2296 0106 3B       		.uleb128 0x3b
 2297 0107 05       		.uleb128 0x5
 2298 0108 49       		.uleb128 0x49
 2299 0109 13       		.uleb128 0x13
 2300 010a 02       		.uleb128 0x2
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 58


 2301 010b 18       		.uleb128 0x18
 2302 010c 00       		.byte	0
 2303 010d 00       		.byte	0
 2304 010e 13       		.uleb128 0x13
 2305 010f 34       		.uleb128 0x34
 2306 0110 00       		.byte	0
 2307 0111 03       		.uleb128 0x3
 2308 0112 0E       		.uleb128 0xe
 2309 0113 3A       		.uleb128 0x3a
 2310 0114 0B       		.uleb128 0xb
 2311 0115 3B       		.uleb128 0x3b
 2312 0116 05       		.uleb128 0x5
 2313 0117 49       		.uleb128 0x49
 2314 0118 13       		.uleb128 0x13
 2315 0119 02       		.uleb128 0x2
 2316 011a 18       		.uleb128 0x18
 2317 011b 00       		.byte	0
 2318 011c 00       		.byte	0
 2319 011d 14       		.uleb128 0x14
 2320 011e 0B       		.uleb128 0xb
 2321 011f 01       		.byte	0x1
 2322 0120 11       		.uleb128 0x11
 2323 0121 01       		.uleb128 0x1
 2324 0122 12       		.uleb128 0x12
 2325 0123 06       		.uleb128 0x6
 2326 0124 00       		.byte	0
 2327 0125 00       		.byte	0
 2328 0126 15       		.uleb128 0x15
 2329 0127 2E       		.uleb128 0x2e
 2330 0128 01       		.byte	0x1
 2331 0129 3F       		.uleb128 0x3f
 2332 012a 19       		.uleb128 0x19
 2333 012b 03       		.uleb128 0x3
 2334 012c 0E       		.uleb128 0xe
 2335 012d 3A       		.uleb128 0x3a
 2336 012e 0B       		.uleb128 0xb
 2337 012f 3B       		.uleb128 0x3b
 2338 0130 05       		.uleb128 0x5
 2339 0131 27       		.uleb128 0x27
 2340 0132 19       		.uleb128 0x19
 2341 0133 49       		.uleb128 0x49
 2342 0134 13       		.uleb128 0x13
 2343 0135 11       		.uleb128 0x11
 2344 0136 01       		.uleb128 0x1
 2345 0137 12       		.uleb128 0x12
 2346 0138 06       		.uleb128 0x6
 2347 0139 40       		.uleb128 0x40
 2348 013a 18       		.uleb128 0x18
 2349 013b 9742     		.uleb128 0x2117
 2350 013d 19       		.uleb128 0x19
 2351 013e 01       		.uleb128 0x1
 2352 013f 13       		.uleb128 0x13
 2353 0140 00       		.byte	0
 2354 0141 00       		.byte	0
 2355 0142 16       		.uleb128 0x16
 2356 0143 1D       		.uleb128 0x1d
 2357 0144 01       		.byte	0x1
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 59


 2358 0145 31       		.uleb128 0x31
 2359 0146 13       		.uleb128 0x13
 2360 0147 11       		.uleb128 0x11
 2361 0148 01       		.uleb128 0x1
 2362 0149 12       		.uleb128 0x12
 2363 014a 06       		.uleb128 0x6
 2364 014b 58       		.uleb128 0x58
 2365 014c 0B       		.uleb128 0xb
 2366 014d 59       		.uleb128 0x59
 2367 014e 05       		.uleb128 0x5
 2368 014f 01       		.uleb128 0x1
 2369 0150 13       		.uleb128 0x13
 2370 0151 00       		.byte	0
 2371 0152 00       		.byte	0
 2372 0153 17       		.uleb128 0x17
 2373 0154 34       		.uleb128 0x34
 2374 0155 00       		.byte	0
 2375 0156 31       		.uleb128 0x31
 2376 0157 13       		.uleb128 0x13
 2377 0158 02       		.uleb128 0x2
 2378 0159 18       		.uleb128 0x18
 2379 015a 00       		.byte	0
 2380 015b 00       		.byte	0
 2381 015c 18       		.uleb128 0x18
 2382 015d 1D       		.uleb128 0x1d
 2383 015e 01       		.byte	0x1
 2384 015f 31       		.uleb128 0x31
 2385 0160 13       		.uleb128 0x13
 2386 0161 11       		.uleb128 0x11
 2387 0162 01       		.uleb128 0x1
 2388 0163 12       		.uleb128 0x12
 2389 0164 06       		.uleb128 0x6
 2390 0165 58       		.uleb128 0x58
 2391 0166 0B       		.uleb128 0xb
 2392 0167 59       		.uleb128 0x59
 2393 0168 05       		.uleb128 0x5
 2394 0169 00       		.byte	0
 2395 016a 00       		.byte	0
 2396 016b 19       		.uleb128 0x19
 2397 016c 05       		.uleb128 0x5
 2398 016d 00       		.byte	0
 2399 016e 31       		.uleb128 0x31
 2400 016f 13       		.uleb128 0x13
 2401 0170 02       		.uleb128 0x2
 2402 0171 18       		.uleb128 0x18
 2403 0172 00       		.byte	0
 2404 0173 00       		.byte	0
 2405 0174 1A       		.uleb128 0x1a
 2406 0175 2E       		.uleb128 0x2e
 2407 0176 01       		.byte	0x1
 2408 0177 3F       		.uleb128 0x3f
 2409 0178 19       		.uleb128 0x19
 2410 0179 03       		.uleb128 0x3
 2411 017a 0E       		.uleb128 0xe
 2412 017b 3A       		.uleb128 0x3a
 2413 017c 0B       		.uleb128 0xb
 2414 017d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 60


 2415 017e 05       		.uleb128 0x5
 2416 017f 27       		.uleb128 0x27
 2417 0180 19       		.uleb128 0x19
 2418 0181 11       		.uleb128 0x11
 2419 0182 01       		.uleb128 0x1
 2420 0183 12       		.uleb128 0x12
 2421 0184 06       		.uleb128 0x6
 2422 0185 40       		.uleb128 0x40
 2423 0186 18       		.uleb128 0x18
 2424 0187 9642     		.uleb128 0x2116
 2425 0189 19       		.uleb128 0x19
 2426 018a 01       		.uleb128 0x1
 2427 018b 13       		.uleb128 0x13
 2428 018c 00       		.byte	0
 2429 018d 00       		.byte	0
 2430 018e 1B       		.uleb128 0x1b
 2431 018f 2E       		.uleb128 0x2e
 2432 0190 01       		.byte	0x1
 2433 0191 03       		.uleb128 0x3
 2434 0192 0E       		.uleb128 0xe
 2435 0193 3A       		.uleb128 0x3a
 2436 0194 0B       		.uleb128 0xb
 2437 0195 3B       		.uleb128 0x3b
 2438 0196 05       		.uleb128 0x5
 2439 0197 27       		.uleb128 0x27
 2440 0198 19       		.uleb128 0x19
 2441 0199 49       		.uleb128 0x49
 2442 019a 13       		.uleb128 0x13
 2443 019b 11       		.uleb128 0x11
 2444 019c 01       		.uleb128 0x1
 2445 019d 12       		.uleb128 0x12
 2446 019e 06       		.uleb128 0x6
 2447 019f 40       		.uleb128 0x40
 2448 01a0 18       		.uleb128 0x18
 2449 01a1 9742     		.uleb128 0x2117
 2450 01a3 19       		.uleb128 0x19
 2451 01a4 01       		.uleb128 0x1
 2452 01a5 13       		.uleb128 0x13
 2453 01a6 00       		.byte	0
 2454 01a7 00       		.byte	0
 2455 01a8 1C       		.uleb128 0x1c
 2456 01a9 34       		.uleb128 0x34
 2457 01aa 00       		.byte	0
 2458 01ab 03       		.uleb128 0x3
 2459 01ac 0E       		.uleb128 0xe
 2460 01ad 3A       		.uleb128 0x3a
 2461 01ae 0B       		.uleb128 0xb
 2462 01af 3B       		.uleb128 0x3b
 2463 01b0 05       		.uleb128 0x5
 2464 01b1 49       		.uleb128 0x49
 2465 01b2 13       		.uleb128 0x13
 2466 01b3 3F       		.uleb128 0x3f
 2467 01b4 19       		.uleb128 0x19
 2468 01b5 3C       		.uleb128 0x3c
 2469 01b6 19       		.uleb128 0x19
 2470 01b7 00       		.byte	0
 2471 01b8 00       		.byte	0
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 61


 2472 01b9 1D       		.uleb128 0x1d
 2473 01ba 35       		.uleb128 0x35
 2474 01bb 00       		.byte	0
 2475 01bc 49       		.uleb128 0x49
 2476 01bd 13       		.uleb128 0x13
 2477 01be 00       		.byte	0
 2478 01bf 00       		.byte	0
 2479 01c0 00       		.byte	0
 2480              		.section	.debug_aranges,"",%progbits
 2481 0000 64000000 		.4byte	0x64
 2482 0004 0200     		.2byte	0x2
 2483 0006 00000000 		.4byte	.Ldebug_info0
 2484 000a 04       		.byte	0x4
 2485 000b 00       		.byte	0
 2486 000c 0000     		.2byte	0
 2487 000e 0000     		.2byte	0
 2488 0010 00000000 		.4byte	.LFB129
 2489 0014 2E000000 		.4byte	.LFE129-.LFB129
 2490 0018 00000000 		.4byte	.LFB130
 2491 001c 24010000 		.4byte	.LFE130-.LFB130
 2492 0020 00000000 		.4byte	.LFB131
 2493 0024 50010000 		.4byte	.LFE131-.LFB131
 2494 0028 00000000 		.4byte	.LFB132
 2495 002c 4C000000 		.4byte	.LFE132-.LFB132
 2496 0030 00000000 		.4byte	.LFB133
 2497 0034 46000000 		.4byte	.LFE133-.LFB133
 2498 0038 00000000 		.4byte	.LFB134
 2499 003c F2000000 		.4byte	.LFE134-.LFB134
 2500 0040 00000000 		.4byte	.LFB135
 2501 0044 50000000 		.4byte	.LFE135-.LFB135
 2502 0048 00000000 		.4byte	.LFB136
 2503 004c 1A000000 		.4byte	.LFE136-.LFB136
 2504 0050 00000000 		.4byte	.LFB137
 2505 0054 1A000000 		.4byte	.LFE137-.LFB137
 2506 0058 00000000 		.4byte	.LFB138
 2507 005c 44000000 		.4byte	.LFE138-.LFB138
 2508 0060 00000000 		.4byte	0
 2509 0064 00000000 		.4byte	0
 2510              		.section	.debug_ranges,"",%progbits
 2511              	.Ldebug_ranges0:
 2512 0000 00000000 		.4byte	.LFB129
 2513 0004 2E000000 		.4byte	.LFE129
 2514 0008 00000000 		.4byte	.LFB130
 2515 000c 24010000 		.4byte	.LFE130
 2516 0010 00000000 		.4byte	.LFB131
 2517 0014 50010000 		.4byte	.LFE131
 2518 0018 00000000 		.4byte	.LFB132
 2519 001c 4C000000 		.4byte	.LFE132
 2520 0020 00000000 		.4byte	.LFB133
 2521 0024 46000000 		.4byte	.LFE133
 2522 0028 00000000 		.4byte	.LFB134
 2523 002c F2000000 		.4byte	.LFE134
 2524 0030 00000000 		.4byte	.LFB135
 2525 0034 50000000 		.4byte	.LFE135
 2526 0038 00000000 		.4byte	.LFB136
 2527 003c 1A000000 		.4byte	.LFE136
 2528 0040 00000000 		.4byte	.LFB137
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 62


 2529 0044 1A000000 		.4byte	.LFE137
 2530 0048 00000000 		.4byte	.LFB138
 2531 004c 44000000 		.4byte	.LFE138
 2532 0050 00000000 		.4byte	0
 2533 0054 00000000 		.4byte	0
 2534              		.section	.debug_line,"",%progbits
 2535              	.Ldebug_line0:
 2536 0000 45040000 		.section	.debug_str,"MS",%progbits,1
 2536      02004002 
 2536      00000201 
 2536      FB0E0D00 
 2536      01010101 
 2537              	.LASF29:
 2538 0000 4D696E69 		.ascii	"MiniListItem_t\000"
 2538      4C697374 
 2538      4974656D 
 2538      5F7400
 2539              	.LASF16:
 2540 000f 666C6F61 		.ascii	"float\000"
 2540      7400
 2541              	.LASF43:
 2542 0015 78457665 		.ascii	"xEventGroupCreate\000"
 2542      6E744772 
 2542      6F757043 
 2542      72656174 
 2542      6500
 2543              	.LASF56:
 2544 0027 78576169 		.ascii	"xWaitForAllBits\000"
 2544      74466F72 
 2544      416C6C42 
 2544      69747300 
 2545              	.LASF66:
 2546 0037 70784C69 		.ascii	"pxListEnd\000"
 2546      7374456E 
 2546      6400
 2547              	.LASF5:
 2548 0041 73686F72 		.ascii	"short int\000"
 2548      7420696E 
 2548      7400
 2549              	.LASF33:
 2550 004b 784C6973 		.ascii	"xListEnd\000"
 2550      74456E64 
 2550      00
 2551              	.LASF23:
 2552 0054 70785072 		.ascii	"pxPrevious\000"
 2552      6576696F 
 2552      757300
 2553              	.LASF55:
 2554 005f 78436C65 		.ascii	"xClearOnExit\000"
 2554      61724F6E 
 2554      45786974 
 2554      00
 2555              	.LASF9:
 2556 006c 5F5F7569 		.ascii	"__uint32_t\000"
 2556      6E743332 
 2556      5F7400
 2557              	.LASF36:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 63


 2558 0077 4576656E 		.ascii	"EventBits_t\000"
 2558      74426974 
 2558      735F7400 
 2559              	.LASF46:
 2560 0083 75784269 		.ascii	"uxBitsToSet\000"
 2560      7473546F 
 2560      53657400 
 2561              	.LASF24:
 2562 008f 70764F77 		.ascii	"pvOwner\000"
 2562      6E657200 
 2563              	.LASF35:
 2564 0097 4576656E 		.ascii	"EventGroupHandle_t\000"
 2564      7447726F 
 2564      75704861 
 2564      6E646C65 
 2564      5F7400
 2565              	.LASF82:
 2566 00aa 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 2566      72745261 
 2566      69736542 
 2566      41534550 
 2566      524900
 2567              	.LASF68:
 2568 00bd 75784269 		.ascii	"uxBitsWaitedFor\000"
 2568      74735761 
 2568      69746564 
 2568      466F7200 
 2569              	.LASF71:
 2570 00cd 76457665 		.ascii	"vEventGroupDelete\000"
 2570      6E744772 
 2570      6F757044 
 2570      656C6574 
 2570      6500
 2571              	.LASF2:
 2572 00df 6C6F6E67 		.ascii	"long double\000"
 2572      20646F75 
 2572      626C6500 
 2573              	.LASF47:
 2574 00eb 75784269 		.ascii	"uxBitsToWaitFor\000"
 2574      7473546F 
 2574      57616974 
 2574      466F7200 
 2575              	.LASF34:
 2576 00fb 4C697374 		.ascii	"List_t\000"
 2576      5F7400
 2577              	.LASF48:
 2578 0102 78546963 		.ascii	"xTicksToWait\000"
 2578      6B73546F 
 2578      57616974 
 2578      00
 2579              	.LASF1:
 2580 010f 6C6F6E67 		.ascii	"long long int\000"
 2580      206C6F6E 
 2580      6720696E 
 2580      7400
 2581              	.LASF75:
 2582 011d 76457665 		.ascii	"vEventGroupClearBitsCallback\000"
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 64


 2582      6E744772 
 2582      6F757043 
 2582      6C656172 
 2582      42697473 
 2583              	.LASF67:
 2584 013a 70784C69 		.ascii	"pxList\000"
 2584      737400
 2585              	.LASF77:
 2586 0141 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2586      43313120 
 2586      352E342E 
 2586      31203230 
 2586      31363036 
 2587 0174 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 2587      20726576 
 2587      6973696F 
 2587      6E203233 
 2587      37373135 
 2588 01a7 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -O0 -ffunction-s"
 2588      70202D6D 
 2588      6670753D 
 2588      66707634 
 2588      2D73702D 
 2589 01da 65637469 		.ascii	"ections -ffat-lto-objects\000"
 2589      6F6E7320 
 2589      2D666661 
 2589      742D6C74 
 2589      6F2D6F62 
 2590              	.LASF7:
 2591 01f4 6C6F6E67 		.ascii	"long int\000"
 2591      20696E74 
 2591      00
 2592              	.LASF30:
 2593 01fd 784C4953 		.ascii	"xLIST\000"
 2593      5400
 2594              	.LASF12:
 2595 0203 73697A65 		.ascii	"sizetype\000"
 2595      74797065 
 2595      00
 2596              	.LASF37:
 2597 020c 78457665 		.ascii	"xEventGroupDefinition\000"
 2597      6E744772 
 2597      6F757044 
 2597      6566696E 
 2597      6974696F 
 2598              	.LASF65:
 2599 0222 70784C69 		.ascii	"pxListItem\000"
 2599      73744974 
 2599      656D00
 2600              	.LASF21:
 2601 022d 78497465 		.ascii	"xItemValue\000"
 2601      6D56616C 
 2601      756500
 2602              	.LASF39:
 2603 0238 78546173 		.ascii	"xTasksWaitingForBits\000"
 2603      6B735761 
 2603      6974696E 
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 65


 2603      67466F72 
 2603      42697473 
 2604              	.LASF44:
 2605 024d 78457665 		.ascii	"xEventGroupSync\000"
 2605      6E744772 
 2605      6F757053 
 2605      796E6300 
 2606              	.LASF27:
 2607 025d 784C4953 		.ascii	"xLIST_ITEM\000"
 2607      545F4954 
 2607      454D00
 2608              	.LASF79:
 2609 0268 433A5C55 		.ascii	"C:\\Users\\ikomb\\Documents\\PSoC Creator\\CE222221"
 2609      73657273 
 2609      5C696B6F 
 2609      6D625C44 
 2609      6F63756D 
 2610 0296 5F566F69 		.ascii	"_Voice_Recorder01\\CE222221_Voice_Recorder01.cydsn\000"
 2610      63655F52 
 2610      65636F72 
 2610      64657230 
 2610      315C4345 
 2611              	.LASF60:
 2612 02c8 78457665 		.ascii	"xEventGroupClearBits\000"
 2612      6E744772 
 2612      6F757043 
 2612      6C656172 
 2612      42697473 
 2613              	.LASF4:
 2614 02dd 756E7369 		.ascii	"unsigned char\000"
 2614      676E6564 
 2614      20636861 
 2614      7200
 2615              	.LASF41:
 2616 02eb 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 2616      6967696E 
 2616      616C4241 
 2616      53455052 
 2616      4900
 2617              	.LASF3:
 2618 02fd 7369676E 		.ascii	"signed char\000"
 2618      65642063 
 2618      68617200 
 2619              	.LASF14:
 2620 0309 696E7433 		.ascii	"int32_t\000"
 2620      325F7400 
 2621              	.LASF11:
 2622 0311 6C6F6E67 		.ascii	"long long unsigned int\000"
 2622      206C6F6E 
 2622      6720756E 
 2622      7369676E 
 2622      65642069 
 2623              	.LASF15:
 2624 0328 75696E74 		.ascii	"uint32_t\000"
 2624      33325F74 
 2624      00
 2625              	.LASF73:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 66


 2626 0331 70764576 		.ascii	"pvEventGroup\000"
 2626      656E7447 
 2626      726F7570 
 2626      00
 2627              	.LASF0:
 2628 033e 756E7369 		.ascii	"unsigned int\000"
 2628      676E6564 
 2628      20696E74 
 2628      00
 2629              	.LASF76:
 2630 034b 756C4269 		.ascii	"ulBitsToClear\000"
 2630      7473546F 
 2630      436C6561 
 2630      7200
 2631              	.LASF26:
 2632 0359 4C697374 		.ascii	"ListItem_t\000"
 2632      4974656D 
 2632      5F7400
 2633              	.LASF18:
 2634 0364 42617365 		.ascii	"BaseType_t\000"
 2634      54797065 
 2634      5F7400
 2635              	.LASF25:
 2636 036f 7076436F 		.ascii	"pvContainer\000"
 2636      6E746169 
 2636      6E657200 
 2637              	.LASF54:
 2638 037b 78457665 		.ascii	"xEventGroupWaitBits\000"
 2638      6E744772 
 2638      6F757057 
 2638      61697442 
 2638      69747300 
 2639              	.LASF20:
 2640 038f 5469636B 		.ascii	"TickType_t\000"
 2640      54797065 
 2640      5F7400
 2641              	.LASF6:
 2642 039a 73686F72 		.ascii	"short unsigned int\000"
 2642      7420756E 
 2642      7369676E 
 2642      65642069 
 2642      6E7400
 2643              	.LASF83:
 2644 03ad 70727654 		.ascii	"prvTestWaitCondition\000"
 2644      65737457 
 2644      61697443 
 2644      6F6E6469 
 2644      74696F6E 
 2645              	.LASF80:
 2646 03c2 76506F72 		.ascii	"vPortSetBASEPRI\000"
 2646      74536574 
 2646      42415345 
 2646      50524900 
 2647              	.LASF13:
 2648 03d2 63686172 		.ascii	"char\000"
 2648      00
 2649              	.LASF58:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 67


 2650 03d7 78576169 		.ascii	"xWaitConditionMet\000"
 2650      74436F6E 
 2650      64697469 
 2650      6F6E4D65 
 2650      7400
 2651              	.LASF22:
 2652 03e9 70784E65 		.ascii	"pxNext\000"
 2652      787400
 2653              	.LASF50:
 2654 03f0 75784F72 		.ascii	"uxOriginalBitValue\000"
 2654      6967696E 
 2654      616C4269 
 2654      7456616C 
 2654      756500
 2655              	.LASF19:
 2656 0403 55426173 		.ascii	"UBaseType_t\000"
 2656      65547970 
 2656      655F7400 
 2657              	.LASF38:
 2658 040f 75784576 		.ascii	"uxEventBits\000"
 2658      656E7442 
 2658      69747300 
 2659              	.LASF81:
 2660 041b 756C4E65 		.ascii	"ulNewMaskValue\000"
 2660      774D6173 
 2660      6B56616C 
 2660      756500
 2661              	.LASF57:
 2662 042a 7578436F 		.ascii	"uxControlBits\000"
 2662      6E74726F 
 2662      6C426974 
 2662      7300
 2663              	.LASF62:
 2664 0438 78457665 		.ascii	"xEventGroupGetBitsFromISR\000"
 2664      6E744772 
 2664      6F757047 
 2664      65744269 
 2664      74734672 
 2665              	.LASF64:
 2666 0452 78457665 		.ascii	"xEventGroupSetBits\000"
 2666      6E744772 
 2666      6F757053 
 2666      65744269 
 2666      747300
 2667              	.LASF51:
 2668 0465 75785265 		.ascii	"uxReturn\000"
 2668      7475726E 
 2668      00
 2669              	.LASF10:
 2670 046e 6C6F6E67 		.ascii	"long unsigned int\000"
 2670      20756E73 
 2670      69676E65 
 2670      6420696E 
 2670      7400
 2671              	.LASF17:
 2672 0480 646F7562 		.ascii	"double\000"
 2672      6C6500
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 68


 2673              	.LASF84:
 2674 0487 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2674      52784275 
 2674      66666572 
 2674      00
 2675              	.LASF31:
 2676 0494 75784E75 		.ascii	"uxNumberOfItems\000"
 2676      6D626572 
 2676      4F664974 
 2676      656D7300 
 2677              	.LASF8:
 2678 04a4 5F5F696E 		.ascii	"__int32_t\000"
 2678      7433325F 
 2678      7400
 2679              	.LASF63:
 2680 04ae 75785361 		.ascii	"uxSavedInterruptStatus\000"
 2680      76656449 
 2680      6E746572 
 2680      72757074 
 2680      53746174 
 2681              	.LASF74:
 2682 04c5 756C4269 		.ascii	"ulBitsToSet\000"
 2682      7473546F 
 2682      53657400 
 2683              	.LASF69:
 2684 04d1 784D6174 		.ascii	"xMatchFound\000"
 2684      6368466F 
 2684      756E6400 
 2685              	.LASF45:
 2686 04dd 78457665 		.ascii	"xEventGroup\000"
 2686      6E744772 
 2686      6F757000 
 2687              	.LASF61:
 2688 04e9 75784269 		.ascii	"uxBitsToClear\000"
 2688      7473546F 
 2688      436C6561 
 2688      7200
 2689              	.LASF49:
 2690 04f7 70784576 		.ascii	"pxEventBits\000"
 2690      656E7442 
 2690      69747300 
 2691              	.LASF32:
 2692 0503 7078496E 		.ascii	"pxIndex\000"
 2692      64657800 
 2693              	.LASF53:
 2694 050b 7854696D 		.ascii	"xTimeoutOccurred\000"
 2694      656F7574 
 2694      4F636375 
 2694      72726564 
 2694      00
 2695              	.LASF72:
 2696 051c 76457665 		.ascii	"vEventGroupSetBitsCallback\000"
 2696      6E744772 
 2696      6F757053 
 2696      65744269 
 2696      74734361 
 2697              	.LASF28:
ARM GAS  C:\Users\ikomb\AppData\Local\Temp\ccjR8mjn.s 			page 69


 2698 0537 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 2698      495F4C49 
 2698      53545F49 
 2698      54454D00 
 2699              	.LASF59:
 2700 0547 75784375 		.ascii	"uxCurrentEventBits\000"
 2700      7272656E 
 2700      74457665 
 2700      6E744269 
 2700      747300
 2701              	.LASF78:
 2702 055a 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0"
 2702      72617465 
 2702      645F536F 
 2702      75726365 
 2702      5C50536F 
 2703 0588 5C536F75 		.ascii	"\\Source\\event_groups.c\000"
 2703      7263655C 
 2703      6576656E 
 2703      745F6772 
 2703      6F757073 
 2704              	.LASF70:
 2705 059f 70785461 		.ascii	"pxTasksWaitingForBits\000"
 2705      736B7357 
 2705      61697469 
 2705      6E67466F 
 2705      72426974 
 2706              	.LASF52:
 2707 05b5 78416C72 		.ascii	"xAlreadyYielded\000"
 2707      65616479 
 2707      5969656C 
 2707      64656400 
 2708              	.LASF42:
 2709 05c5 756C4E65 		.ascii	"ulNewBASEPRI\000"
 2709      77424153 
 2709      45505249 
 2709      00
 2710              	.LASF40:
 2711 05d2 4576656E 		.ascii	"EventGroup_t\000"
 2711      7447726F 
 2711      75705F74 
 2711      00
 2712              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
